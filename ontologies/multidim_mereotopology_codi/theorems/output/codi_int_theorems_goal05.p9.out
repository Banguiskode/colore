============================== Prover9 ===============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 18456 was started by torsten on torsten-2016,
Sun Jun 24 00:57:21 2018
The command was "/cygdrive/c/Reasoning/prover9-bin/bin-win32/prover9 -t600 -f C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_basic.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\definitions\conversions\c.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_basic_defs.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\ep.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_zex\conversions\zex.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\sc.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_c_ext.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\po.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_basic.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\eq_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_defs.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\theorems\conversions\codi_int_theorems_goal05.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_int.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\inc.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_basic.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_ext.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_linear.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_unbounded.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\covers.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\min_max_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\generated\codi_int_relevance1.order".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_basic.p9


formulas(sos).
(all x11 -lt(x11,x11)).
(all x22 all x21 (lt(x22,x21) -> -lt(x21,x22))).
(all x32 all x31 all x33 (lt(x32,x31) & lt(x31,x33) -> lt(x32,x33))).
(all x41 eqdim(x41,x41)).
(all x52 all x51 (eqdim(x52,x51) -> eqdim(x51,x52))).
(all x62 all x61 all x63 (eqdim(x62,x61) & eqdim(x61,x63) -> eqdim(x62,x63))).
(all x72 all x71 (lt(x72,x71) -> -eqdim(x72,x71))).
(all x82 all x81 all x83 (eqdim(x82,x81) -> (lt(x83,x82) -> lt(x83,x81)))).
(all x92 all x91 all x93 (eqdim(x92,x91) -> (lt(x92,x93) -> lt(x91,x93)))).
(exists x102 (-zex(x102) & (all x101 (lt(x101,x102) -> zex(x101))))).
(all x112 all x111 (zex(x112) & zex(x111) -> x112 = x111)).
(all x122 all x121 (zex(x122) & -zex(x121) -> lt(x122,x121))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\definitions\conversions\c.p9


formulas(sos).
(all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))).
(all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\ep.p9


formulas(sos).
(all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_zex\conversions\zex.p9


formulas(sos).
(exists x2 zex(x2)).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\sc.p9


formulas(sos).
(all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> lt(x13,x12) & lt(x13,x11))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\po.p9


formulas(sos).
(all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_basic.p9


formulas(sos).
(all x11 (-zex(x11) <-> cont(x11,x11))).
(all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)).
(all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))).
(all x42 all x41 (zex(x42) -> -cont(x41,x42) & -cont(x42,x41))).
(all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\theorems\conversions\codi_int_theorems_goal05.p9


formulas(goals).
(all x52 all x51 all x53 (zex(intersection(x52,x51)) -> -c(x52,x51))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_int.p9


formulas(sos).
(all x12 all x11 (-c(x12,x11) <-> zex(intersection(x12,x11)))).
(all x22 all x21 (-zex(intersection(x22,x21)) -> cont(intersection(x22,x21),x22))).
(all x32 all x31 all x33 (cont(x33,x32) & cont(x33,x31) -> leq(x33,intersection(x32,x31)))).
(all x42 all x41 all x43 (cont(x43,x42) & cont(x43,x41) & eqdim(x43,intersection(x42,x41)) <-> p(x43,intersection(x42,x41)))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\inc.p9


formulas(sos).
(all x12 all x11 (inc(x12,x11) <-> (exists x13 (lt(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (lt(x13,x11) & cont(x13,x11) & p(x13,x12))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_basic.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_ext.p9


formulas(sos).
(all x12 all x11 ((all x13 (cont(x13,x12) <-> cont(x13,x11))) -> x12 = x11)).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_linear.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x11 leq(x11,x11)).
(all x22 all x21 all x23 (leq(x22,x21) & leq(x21,x23) -> leq(x22,x23))).
(all x32 all x31 (zex(x32) & zex(x31) -> x32 = x31)).
(all x42 all x41 (zex(x42) -> leq(x42,x41))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 -(lt(x11,x13) & lt(x13,x12))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> -zex(x12) & (all x11 leq(x11,x12)))).
(all x22 (mindim(x22) <-> -zex(x22) & (all x21 (-zex(x21) -> leq(x22,x21))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\generated\codi_int_relevance1.order

predicate_order([covers,maxdim,mindim,sc,inc,po,c,=,leq,eqdim,lt,p,cont,zex]).
set(inverse_order).
assign(order,kbo).

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x11 -lt(x11,x11)) # label(non_clause).  [assumption].
2 (all x22 all x21 (lt(x22,x21) -> -lt(x21,x22))) # label(non_clause).  [assumption].
3 (all x32 all x31 all x33 (lt(x32,x31) & lt(x31,x33) -> lt(x32,x33))) # label(non_clause).  [assumption].
4 (all x41 eqdim(x41,x41)) # label(non_clause).  [assumption].
5 (all x52 all x51 (eqdim(x52,x51) -> eqdim(x51,x52))) # label(non_clause).  [assumption].
6 (all x62 all x61 all x63 (eqdim(x62,x61) & eqdim(x61,x63) -> eqdim(x62,x63))) # label(non_clause).  [assumption].
7 (all x72 all x71 (lt(x72,x71) -> -eqdim(x72,x71))) # label(non_clause).  [assumption].
8 (all x82 all x81 all x83 (eqdim(x82,x81) -> (lt(x83,x82) -> lt(x83,x81)))) # label(non_clause).  [assumption].
9 (all x92 all x91 all x93 (eqdim(x92,x91) -> (lt(x92,x93) -> lt(x91,x93)))) # label(non_clause).  [assumption].
10 (exists x102 (-zex(x102) & (all x101 (lt(x101,x102) -> zex(x101))))) # label(non_clause).  [assumption].
11 (all x112 all x111 (zex(x112) & zex(x111) -> x112 = x111)) # label(non_clause).  [assumption].
12 (all x122 all x121 (zex(x122) & -zex(x121) -> lt(x122,x121))) # label(non_clause).  [assumption].
13 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
14 (all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))) # label(non_clause).  [assumption].
15 (all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))) # label(non_clause).  [assumption].
16 (all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
17 (all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].
18 (all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))) # label(non_clause).  [assumption].
19 (exists x2 zex(x2)) # label(non_clause).  [assumption].
20 (all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> lt(x13,x12) & lt(x13,x11))))) # label(non_clause).  [assumption].
21 (all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))) # label(non_clause).  [assumption].
22 (all x11 (-zex(x11) <-> cont(x11,x11))) # label(non_clause).  [assumption].
23 (all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)) # label(non_clause).  [assumption].
24 (all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))) # label(non_clause).  [assumption].
25 (all x42 all x41 (zex(x42) -> -cont(x41,x42) & -cont(x42,x41))) # label(non_clause).  [assumption].
26 (all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)) # label(non_clause).  [assumption].
27 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
28 (all x12 all x11 (-c(x12,x11) <-> zex(intersection(x12,x11)))) # label(non_clause).  [assumption].
29 (all x22 all x21 (-zex(intersection(x22,x21)) -> cont(intersection(x22,x21),x22))) # label(non_clause).  [assumption].
30 (all x32 all x31 all x33 (cont(x33,x32) & cont(x33,x31) -> leq(x33,intersection(x32,x31)))) # label(non_clause).  [assumption].
31 (all x42 all x41 all x43 (cont(x43,x42) & cont(x43,x41) & eqdim(x43,intersection(x42,x41)) <-> p(x43,intersection(x42,x41)))) # label(non_clause).  [assumption].
32 (all x12 all x11 (inc(x12,x11) <-> (exists x13 (lt(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (lt(x13,x11) & cont(x13,x11) & p(x13,x12))))) # label(non_clause).  [assumption].
33 (all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))) # label(non_clause).  [assumption].
34 (all x12 all x11 ((all x13 (cont(x13,x12) <-> cont(x13,x11))) -> x12 = x11)) # label(non_clause).  [assumption].
35 (all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))) # label(non_clause).  [assumption].
36 (all x11 leq(x11,x11)) # label(non_clause).  [assumption].
37 (all x22 all x21 all x23 (leq(x22,x21) & leq(x21,x23) -> leq(x22,x23))) # label(non_clause).  [assumption].
38 (all x32 all x31 (zex(x32) & zex(x31) -> x32 = x31)) # label(non_clause).  [assumption].
39 (all x42 all x41 (zex(x42) -> leq(x42,x41))) # label(non_clause).  [assumption].
40 (all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 -(lt(x11,x13) & lt(x13,x12))))) # label(non_clause).  [assumption].
41 (all x12 (maxdim(x12) <-> -zex(x12) & (all x11 leq(x11,x12)))) # label(non_clause).  [assumption].
42 (all x22 (mindim(x22) <-> -zex(x22) & (all x21 (-zex(x21) -> leq(x22,x21))))) # label(non_clause).  [assumption].
43 (all x52 all x51 all x53 (zex(intersection(x52,x51)) -> -c(x52,x51))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-lt(x,x).  [clausify(1)].
-lt(x,y) | -lt(y,x).  [clausify(2)].
-lt(x,y) | -lt(y,z) | lt(x,z).  [clausify(3)].
eqdim(x,x).  [clausify(4)].
-eqdim(x,y) | eqdim(y,x).  [clausify(5)].
-eqdim(x,y) | -eqdim(y,z) | eqdim(x,z).  [clausify(6)].
-lt(x,y) | -eqdim(x,y).  [clausify(7)].
-eqdim(x,y) | -lt(z,x) | lt(z,y).  [clausify(8)].
-eqdim(x,y) | -lt(x,z) | lt(y,z).  [clausify(9)].
-zex(c1).  [clausify(10)].
-lt(x,c1) | zex(x).  [clausify(10)].
-zex(x) | -zex(y) | y = x.  [clausify(11)].
-zex(x) | zex(y) | lt(x,y).  [clausify(12)].
mindim(c2).  [clausify(13)].
-c(x,y) | cont(f1(x,y),x).  [clausify(14)].
-c(x,y) | cont(f1(x,y),y).  [clausify(14)].
c(x,y) | -cont(z,x) | -cont(z,y).  [clausify(14)].
-gt(x,y) | lt(y,x).  [clausify(15)].
gt(x,y) | -lt(y,x).  [clausify(15)].
-geq(x,y) | leq(y,x).  [clausify(16)].
geq(x,y) | -leq(y,x).  [clausify(16)].
-lt(x,y) | leq(x,y).  [clausify(17)].
-lt(x,y) | -eqdim(x,y).  [clausify(17)].
lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(17)].
-p(x,y) | cont(x,y).  [clausify(18)].
-p(x,y) | eqdim(x,y).  [clausify(18)].
p(x,y) | -cont(x,y) | -eqdim(x,y).  [clausify(18)].
zex(c3).  [clausify(19)].
-sc(x,y) | cont(f2(x,y),x).  [clausify(20)].
-sc(x,y) | cont(f2(x,y),y).  [clausify(20)].
-sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,x).  [clausify(20)].
-sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,y).  [clausify(20)].
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f3(x,y),x).  [clausify(20)].
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f3(x,y),y).  [clausify(20)].
sc(x,y) | -cont(z,x) | -cont(z,y) | -lt(f3(x,y),x) | -lt(f3(x,y),y).  [clausify(20)].
-po(x,y) | p(f4(x,y),x).  [clausify(21)].
-po(x,y) | p(f4(x,y),y).  [clausify(21)].
po(x,y) | -p(z,x) | -p(z,y).  [clausify(21)].
zex(x) | cont(x,x).  [clausify(22)].
-zex(x) | -cont(x,x).  [clausify(22)].
-cont(x,y) | -cont(y,x) | y = x.  [clausify(23)].
-cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(24)].
-zex(x) | -cont(y,x).  [clausify(25)].
-zex(x) | -cont(x,y).  [clausify(25)].
-zex(x) | -zex(y) | y = x.  [clausify(26)].
-eqdim(x,y) | leq(x,y).  [clausify(27)].
-eqdim(x,y) | leq(y,x).  [clausify(27)].
eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(27)].
c(x,y) | zex(intersection(x,y)).  [clausify(28)].
-c(x,y) | -zex(intersection(x,y)).  [clausify(28)].
zex(intersection(x,y)) | cont(intersection(x,y),x).  [clausify(29)].
-cont(x,y) | -cont(x,z) | leq(x,intersection(y,z)).  [clausify(30)].
-cont(x,y) | -cont(x,z) | -eqdim(x,intersection(y,z)) | p(x,intersection(y,z)).  [clausify(31)].
cont(x,y) | -p(x,intersection(y,z)).  [clausify(31)].
cont(x,y) | -p(x,intersection(z,y)).  [clausify(31)].
eqdim(x,intersection(y,z)) | -p(x,intersection(y,z)).  [clausify(31)].
-inc(x,y) | lt(f5(x,y),x) | lt(f6(x,y),y).  [clausify(32)].
-inc(x,y) | lt(f5(x,y),x) | cont(f6(x,y),y).  [clausify(32)].
-inc(x,y) | lt(f5(x,y),x) | p(f6(x,y),x).  [clausify(32)].
-inc(x,y) | cont(f5(x,y),x) | lt(f6(x,y),y).  [clausify(32)].
-inc(x,y) | cont(f5(x,y),x) | cont(f6(x,y),y).  [clausify(32)].
-inc(x,y) | cont(f5(x,y),x) | p(f6(x,y),x).  [clausify(32)].
-inc(x,y) | p(f5(x,y),y) | lt(f6(x,y),y).  [clausify(32)].
-inc(x,y) | p(f5(x,y),y) | cont(f6(x,y),y).  [clausify(32)].
-inc(x,y) | p(f5(x,y),y) | p(f6(x,y),x).  [clausify(32)].
inc(x,y) | -lt(z,x) | -cont(z,x) | -p(z,y).  [clausify(32)].
inc(x,y) | -lt(z,y) | -cont(z,y) | -p(z,x).  [clausify(32)].
-cont(x,y) | lt(x,y) | eqdim(x,y).  [clausify(33)].
cont(f7(x,y),x) | cont(f7(x,y),y) | x = y.  [clausify(34)].
-cont(f7(x,y),x) | -cont(f7(x,y),y) | x = y.  [clausify(34)].
-cont(x,y) | lt(x,y) | eqdim(x,y).  [clausify(35)].
leq(x,x).  [clausify(36)].
-leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(37)].
-zex(x) | -zex(y) | y = x.  [clausify(38)].
-zex(x) | leq(x,y).  [clausify(39)].
-covers(x,y) | lt(y,x).  [clausify(40)].
-covers(x,y) | -lt(y,z) | -lt(z,x).  [clausify(40)].
covers(x,y) | -lt(y,x) | lt(y,f8(x,y)).  [clausify(40)].
covers(x,y) | -lt(y,x) | lt(f8(x,y),x).  [clausify(40)].
-maxdim(x) | -zex(x).  [clausify(41)].
-maxdim(x) | leq(y,x).  [clausify(41)].
maxdim(x) | zex(x) | -leq(f9(x),x).  [clausify(41)].
-mindim(x) | -zex(x).  [clausify(42)].
-mindim(x) | zex(y) | leq(x,y).  [clausify(42)].
mindim(x) | zex(x) | -zex(f10(x)).  [clausify(42)].
mindim(x) | zex(x) | -leq(x,f10(x)).  [clausify(42)].
zex(intersection(c4,c5)).  [deny(43)].
c(c4,c5).  [deny(43)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating mindim/1
44 -mindim(x) | -zex(x).  [clausify(42)].
45 mindim(c2).  [clausify(13)].
Derived: -zex(c2).  [resolve(44,a,45,a)].
46 -mindim(x) | zex(y) | leq(x,y).  [clausify(42)].
Derived: zex(x) | leq(c2,x).  [resolve(46,a,45,a)].
47 mindim(x) | zex(x) | -zex(f10(x)).  [clausify(42)].
Derived: zex(x) | -zex(f10(x)) | zex(y) | leq(x,y).  [resolve(47,a,46,a)].
48 mindim(x) | zex(x) | -leq(x,f10(x)).  [clausify(42)].
Derived: zex(x) | -leq(x,f10(x)) | zex(y) | leq(x,y).  [resolve(48,a,46,a)].

Eliminating c/2
49 c(x,y) | -cont(z,x) | -cont(z,y).  [clausify(14)].
50 -c(x,y) | cont(f1(x,y),x).  [clausify(14)].
51 -c(x,y) | cont(f1(x,y),y).  [clausify(14)].
Derived: -cont(x,y) | -cont(x,z) | cont(f1(y,z),y).  [resolve(49,a,50,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f1(y,z),z).  [resolve(49,a,51,a)].
52 c(x,y) | zex(intersection(x,y)).  [clausify(28)].
Derived: zex(intersection(x,y)) | cont(f1(x,y),x).  [resolve(52,a,50,a)].
Derived: zex(intersection(x,y)) | cont(f1(x,y),y).  [resolve(52,a,51,a)].
53 -c(x,y) | -zex(intersection(x,y)).  [clausify(28)].
Derived: -zex(intersection(x,y)) | -cont(z,x) | -cont(z,y).  [resolve(53,a,49,a)].
54 c(c4,c5).  [deny(43)].
Derived: cont(f1(c4,c5),c4).  [resolve(54,a,50,a)].
Derived: cont(f1(c4,c5),c5).  [resolve(54,a,51,a)].
Derived: -zex(intersection(c4,c5)).  [resolve(54,a,53,a)].

Eliminating gt/2
55 gt(x,y) | -lt(y,x).  [clausify(15)].
56 -gt(x,y) | lt(y,x).  [clausify(15)].

Eliminating geq/2
57 geq(x,y) | -leq(y,x).  [clausify(16)].
58 -geq(x,y) | leq(y,x).  [clausify(16)].

Eliminating sc/2
59 sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f3(x,y),x).  [clausify(20)].
60 -sc(x,y) | cont(f2(x,y),x).  [clausify(20)].
61 -sc(x,y) | cont(f2(x,y),y).  [clausify(20)].
62 -sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,x).  [clausify(20)].
63 -sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,y).  [clausify(20)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),y) | cont(f2(y,z),y).  [resolve(59,a,60,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),y) | cont(f2(y,z),z).  [resolve(59,a,61,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),y) | -cont(u,y) | -cont(u,z) | lt(u,y).  [resolve(59,a,62,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),y) | -cont(u,y) | -cont(u,z) | lt(u,z).  [resolve(59,a,63,a)].
64 sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f3(x,y),y).  [clausify(20)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),z) | cont(f2(y,z),y).  [resolve(64,a,60,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),z) | cont(f2(y,z),z).  [resolve(64,a,61,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),z) | -cont(u,y) | -cont(u,z) | lt(u,y).  [resolve(64,a,62,a)].
Derived: -cont(x,y) | -cont(x,z) | cont(f3(y,z),z) | -cont(u,y) | -cont(u,z) | lt(u,z).  [resolve(64,a,63,a)].
65 sc(x,y) | -cont(z,x) | -cont(z,y) | -lt(f3(x,y),x) | -lt(f3(x,y),y).  [clausify(20)].
Derived: -cont(x,y) | -cont(x,z) | -lt(f3(y,z),y) | -lt(f3(y,z),z) | cont(f2(y,z),y).  [resolve(65,a,60,a)].
Derived: -cont(x,y) | -cont(x,z) | -lt(f3(y,z),y) | -lt(f3(y,z),z) | cont(f2(y,z),z).  [resolve(65,a,61,a)].
Derived: -cont(x,y) | -cont(x,z) | -lt(f3(y,z),y) | -lt(f3(y,z),z) | -cont(u,y) | -cont(u,z) | lt(u,y).  [resolve(65,a,62,a)].
Derived: -cont(x,y) | -cont(x,z) | -lt(f3(y,z),y) | -lt(f3(y,z),z) | -cont(u,y) | -cont(u,z) | lt(u,z).  [resolve(65,a,63,a)].

Eliminating po/2
66 po(x,y) | -p(z,x) | -p(z,y).  [clausify(21)].
67 -po(x,y) | p(f4(x,y),x).  [clausify(21)].
68 -po(x,y) | p(f4(x,y),y).  [clausify(21)].
Derived: -p(x,y) | -p(x,z) | p(f4(y,z),y).  [resolve(66,a,67,a)].
Derived: -p(x,y) | -p(x,z) | p(f4(y,z),z).  [resolve(66,a,68,a)].

Eliminating inc/2
69 inc(x,y) | -lt(z,x) | -cont(z,x) | -p(z,y).  [clausify(32)].
70 -inc(x,y) | lt(f5(x,y),x) | lt(f6(x,y),y).  [clausify(32)].
71 -inc(x,y) | lt(f5(x,y),x) | cont(f6(x,y),y).  [clausify(32)].
72 -inc(x,y) | lt(f5(x,y),x) | p(f6(x,y),x).  [clausify(32)].
73 -inc(x,y) | cont(f5(x,y),x) | lt(f6(x,y),y).  [clausify(32)].
74 -inc(x,y) | cont(f5(x,y),x) | cont(f6(x,y),y).  [clausify(32)].
75 -inc(x,y) | cont(f5(x,y),x) | p(f6(x,y),x).  [clausify(32)].
76 -inc(x,y) | p(f5(x,y),y) | lt(f6(x,y),y).  [clausify(32)].
77 -inc(x,y) | p(f5(x,y),y) | cont(f6(x,y),y).  [clausify(32)].
78 -inc(x,y) | p(f5(x,y),y) | p(f6(x,y),x).  [clausify(32)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | lt(f5(y,z),y) | lt(f6(y,z),z).  [resolve(69,a,70,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | lt(f5(y,z),y) | cont(f6(y,z),z).  [resolve(69,a,71,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | lt(f5(y,z),y) | p(f6(y,z),y).  [resolve(69,a,72,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | cont(f5(y,z),y) | lt(f6(y,z),z).  [resolve(69,a,73,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | cont(f5(y,z),y) | cont(f6(y,z),z).  [resolve(69,a,74,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | cont(f5(y,z),y) | p(f6(y,z),y).  [resolve(69,a,75,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | p(f5(y,z),z) | lt(f6(y,z),z).  [resolve(69,a,76,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | p(f5(y,z),z) | cont(f6(y,z),z).  [resolve(69,a,77,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | p(f5(y,z),z) | p(f6(y,z),y).  [resolve(69,a,78,a)].
79 inc(x,y) | -lt(z,y) | -cont(z,y) | -p(z,x).  [clausify(32)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | lt(f5(z,y),z) | lt(f6(z,y),y).  [resolve(79,a,70,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | lt(f5(z,y),z) | cont(f6(z,y),y).  [resolve(79,a,71,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | lt(f5(z,y),z) | p(f6(z,y),z).  [resolve(79,a,72,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | cont(f5(z,y),z) | lt(f6(z,y),y).  [resolve(79,a,73,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | cont(f5(z,y),z) | cont(f6(z,y),y).  [resolve(79,a,74,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | cont(f5(z,y),z) | p(f6(z,y),z).  [resolve(79,a,75,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | p(f5(z,y),y) | lt(f6(z,y),y).  [resolve(79,a,76,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | p(f5(z,y),y) | cont(f6(z,y),y).  [resolve(79,a,77,a)].
Derived: -lt(x,y) | -cont(x,y) | -p(x,z) | p(f5(z,y),y) | p(f6(z,y),z).  [resolve(79,a,78,a)].

Eliminating covers/2
80 covers(x,y) | -lt(y,x) | lt(y,f8(x,y)).  [clausify(40)].
81 -covers(x,y) | lt(y,x).  [clausify(40)].
82 -covers(x,y) | -lt(y,z) | -lt(z,x).  [clausify(40)].
Derived: -lt(x,y) | lt(x,f8(y,x)) | -lt(x,z) | -lt(z,y).  [resolve(80,a,82,a)].
83 covers(x,y) | -lt(y,x) | lt(f8(x,y),x).  [clausify(40)].
Derived: -lt(x,y) | lt(f8(y,x),y) | -lt(x,z) | -lt(z,y).  [resolve(83,a,82,a)].

Eliminating maxdim/1
84 maxdim(x) | zex(x) | -leq(f9(x),x).  [clausify(41)].
85 -maxdim(x) | -zex(x).  [clausify(41)].
86 -maxdim(x) | leq(y,x).  [clausify(41)].
Derived: zex(x) | -leq(f9(x),x) | leq(y,x).  [resolve(84,a,86,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. c5=1. intersection=1. f1=1. f2=1. f3=1. f4=1. f5=1. f6=1. f7=1. f8=1. f9=1. f10=1.
Predicate symbol precedence:  predicate_order([ =, leq, eqdim, lt, p, cont, zex ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, intersection, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.01) seconds.
% Length of proof is 7.
% Level of proof is 3.
% Maximum clause weight is 4.
% Given clauses 0.

28 (all x12 all x11 (-c(x12,x11) <-> zex(intersection(x12,x11)))) # label(non_clause).  [assumption].
43 (all x52 all x51 all x53 (zex(intersection(x52,x51)) -> -c(x52,x51))) # label(non_clause) # label(goal).  [goal].
53 -c(x,y) | -zex(intersection(x,y)).  [clausify(28)].
54 c(c4,c5).  [deny(43)].
126 zex(intersection(c4,c5)).  [deny(43)].
138 -zex(intersection(c4,c5)).  [resolve(54,a,53,a)].
139 $F.  [copy(138),unit_del(a,126)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=57. Kept=51. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=51, Disabled=100. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=5. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=30. Nonunit_bsub_feature_tests=0.
Megabytes=0.14.
User_CPU=0.01, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 18456 exit (max_proofs) ------

Process 18456 exit (max_proofs) Sun Jun 24 00:57:21 2018
============================= C:\Reasoning\prover9-bin\bin-win32\prover9 ================================
execution finished: Sun Jun 24 00:57:23 2018
total CPU time used: 0
The command was "C:\Reasoning\prover9-bin\bin-win32\prover9 -t600 -f C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_basic.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\definitions\conversions\c.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_basic_defs.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\ep.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_zex\conversions\zex.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\sc.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_c_ext.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\po.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_basic.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\eq_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_defs.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\theorems\conversions\codi_int_theorems_goal05.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_int.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\definitions\conversions\inc.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_basic.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_cont\conversions\cont_ext.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\conversions\codi_linear.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_unbounded.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\covers.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\min_max_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\generated\codi_int_relevance1.order"
Input read from 
============================ end of footer ===========================
