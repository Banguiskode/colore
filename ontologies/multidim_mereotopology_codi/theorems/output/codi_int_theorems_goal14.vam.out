Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 5999 next slice time: 3
dis-4_5_bd=off:bs=off:ep=RST:fde=none:lcm=predicate:n=on:nicw=on:nwc=2:ptb=off:sio=off:spl=backtracking:ss=included:ssec=off:st=5:updr=off_3 on C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\theorems\conversions\codi_int_theorems_goal14.all
Time limit reached!
------------------------------
Version: Vampire 0.6 (revision 903)
Termination reason: Time limit

Active clauses: 560
Passive clauses: 2257
Generated clauses: 4455
Final active clauses: 548
Final passive clauses: 1573
Input formulas: 43
Initial clauses: 90

Selected by SInE selection: 43
SInE iterations: 1

Duplicate literals: 59
Fw subsumption resolutions: 130

Simple tautologies: 44
Forward subsumptions: 1989

Binary resolution: 4049
Factoring: 25

Backtracking splits: 62
Backtracking splits refuted: 12
Backtracking splits refuted at zero level: 2

Memory used: 1023KB
Time elapsed: 0.404 s
------------------------------
% remaining time: 5995 next slice time: 13
dis-1010_2_bs=off:ep=on:n=on:nwc=1.5:sgo=on:sp=occurrence:ss=included:sswn=on:sswsr=on:st=1.5_13 on C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\theorems\conversions\codi_int_theorems_goal14.all
Refutation found. Thanks to Tanya!
3873. $false (6:0) [subsumption resolution 3868,213]
213. ~zex(sK0) (0:2) [cnf transformation 168]
168. ~zex(sK0) & ~zex(intersection(sK0,sK0)) & ~p(sK0,intersection(sK0,sK0))[skolemisation 120]
120. ? [X0] : (~zex(X0) & ~zex(intersection(X0,X0)) & ~p(X0,intersection(X0,X0)))[flattening 119]
119. ? [X0] : ((~zex(X0) & ~zex(intersection(X0,X0))) & ~p(X0,intersection(X0,X0)))[ennf transformation 1]
1. ~! [X0] : ((~zex(X0) & ~zex(intersection(X0,X0))) => p(X0,intersection(X0,X0)))[negated conjecture]
3868. zex(sK0) (6:2) [resolution 3857,225]
225. cont(X0,X0) | zex(X0) (0:5) [cnf transformation 177]
177. ! [X0] : ((zex(X0) | cont(X0,X0)) & (~cont(X0,X0) | ~zex(X0)))[nnf transformation 123]
123. ! [X0] : (~zex(X0) <=> cont(X0,X0))[ennf transformation 48]
48. ! [X0] : (~zex(X0) <=> cont(X0,X0))[rectify 23]
23. ! [X45] : (~zex(X45) <=> cont(X45,X45))[input]
3857. ~cont(sK0,sK0) (5:3) [duplicate literal removal 3845]
3845. ~cont(sK0,sK0) | ~cont(sK0,sK0) | ~cont(sK0,sK0) (5:9) [resolution 3781,284]
284. leq(X2,intersection(X0,X1)) | ~cont(X2,X1) | ~cont(X2,X0) (0:11) [cnf transformation 158]
158. ! [X0,X1,X2] : (~cont(X2,X0) | ~cont(X2,X1) | leq(X2,intersection(X0,X1)))[flattening 157]
157. ! [X0,X1,X2] : ((~cont(X2,X0) | ~cont(X2,X1)) | leq(X2,intersection(X0,X1)))[ennf transformation 107]
107. ! [X0,X1,X2] : ((cont(X2,X0) & cont(X2,X1)) => leq(X2,intersection(X0,X1)))[flattening 106]
106. ! [X0] : ! [X1] : ! [X2] : ((cont(X2,X0) & cont(X2,X1)) => leq(X2,intersection(X0,X1)))[rectify 31]
31. ! [X61] : ! [X62] : ! [X63] : ((cont(X63,X61) & cont(X63,X62)) => leq(X63,intersection(X61,X62)))[input]
3781. ~leq(sK0,intersection(sK0,sK0)) | ~cont(sK0,sK0) (4:8) [resolution 3586,1013]
1013. lt(sK0,intersection(sK0,sK0)) | ~cont(sK0,sK0) | ~leq(sK0,intersection(sK0,sK0)) (2:13) [resolution 1007,278]
278. eqdim(X0,X1) | lt(X0,X1) | ~leq(X0,X1) (0:9) [cnf transformation 206]
206. ! [X0,X1] : ((~lt(X0,X1) | (leq(X0,X1) & ~eqdim(X0,X1))) & (~leq(X0,X1) | eqdim(X0,X1) | lt(X0,X1)))[flattening 205]
205. ! [X0,X1] : ((~lt(X0,X1) | (leq(X0,X1) & ~eqdim(X0,X1))) & ((~leq(X0,X1) | eqdim(X0,X1)) | lt(X0,X1)))[nnf transformation 149]
149. ! [X0,X1] : (lt(X0,X1) <=> (leq(X0,X1) & ~eqdim(X0,X1)))[ennf transformation 97]
97. ! [X0,X1] : (lt(X0,X1) <=> (leq(X0,X1) & ~eqdim(X0,X1)))[flattening 96]
96. ! [X0] : ! [X1] : (lt(X0,X1) <=> (leq(X0,X1) & ~eqdim(X0,X1)))[rectify 18]
18. ! [X34] : ! [X35] : (lt(X34,X35) <=> (leq(X34,X35) & ~eqdim(X34,X35)))[input]
1007. ~eqdim(sK0,intersection(sK0,sK0)) | ~cont(sK0,sK0) (1:8) [duplicate literal removal 1001]
1001. ~eqdim(sK0,intersection(sK0,sK0)) | ~cont(sK0,sK0) | ~cont(sK0,sK0) (1:11) [resolution 288,215]
215. ~p(sK0,intersection(sK0,sK0)) (0:5) [cnf transformation 168]
288. p(X2,intersection(X0,X1)) | ~eqdim(X2,intersection(X0,X1)) | ~cont(X2,X1) | ~cont(X2,X0) (0:16) [cnf transformation 209]
209. ! [X0,X1,X2] : ((~cont(X2,X0) | ~cont(X2,X1) | ~eqdim(X2,intersection(X0,X1)) | p(X2,intersection(X0,X1))) & (~p(X2,intersection(X0,X1)) | (cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1)))))[flattening 208]
208. ! [X0,X1,X2] : (((~cont(X2,X0) | ~cont(X2,X1) | ~eqdim(X2,intersection(X0,X1))) | p(X2,intersection(X0,X1))) & (~p(X2,intersection(X0,X1)) | (cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1)))))[nnf transformation 115]
115. ! [X0,X1,X2] : ((cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1))) <=> p(X2,intersection(X0,X1)))[flattening 114]
114. ! [X0] : ! [X1] : ! [X2] : ((cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1))) <=> p(X2,intersection(X0,X1)))[rectify 32]
32. ! [X64] : ! [X65] : ! [X66] : ((cont(X66,X64) & cont(X66,X65) & eqdim(X66,intersection(X64,X65))) <=> p(X66,intersection(X64,X65)))[input]
3586. ~lt(X5,intersection(X4,X5)) (3:5) [subsumption resolution 3572,593]
593. ~lt(X9,X10) | ~zex(X10) (2:5) [resolution 587,228]
228. leq(X0,X1) | ~zex(X0) (0:5) [cnf transformation 125]
125. ! [X0,X1] : (~zex(X0) | leq(X0,X1))[ennf transformation 51]
51. ! [X0,X1] : (zex(X0) => leq(X0,X1))[flattening 50]
50. ! [X0] : ! [X1] : (zex(X0) => leq(X0,X1))[rectify 40]
40. ! [X83] : ! [X84] : (zex(X83) => leq(X83,X84))[input]
587. ~leq(X2,X3) | ~lt(X3,X2) (1:6) [subsumption resolution 581,276]
276. leq(X0,X1) | ~lt(X0,X1) (0:6) [cnf transformation 206]
581. ~leq(X2,X3) | ~leq(X3,X2) | ~lt(X3,X2) (1:9) [resolution 275,234]
234. ~eqdim(X0,X1) | ~lt(X0,X1) (0:6) [cnf transformation 132]
132. ! [X0,X1] : (~lt(X0,X1) | ~eqdim(X0,X1))[ennf transformation 61]
61. ! [X0,X1] : (lt(X0,X1) => ~eqdim(X0,X1))[flattening 60]
60. ! [X0] : ! [X1] : (lt(X0,X1) => ~eqdim(X0,X1))[rectify 8]
8. ! [X13] : ! [X14] : (lt(X13,X14) => ~eqdim(X13,X14))[input]
275. eqdim(X0,X1) | ~leq(X1,X0) | ~leq(X0,X1) (0:9) [cnf transformation 204]
204. ! [X0,X1] : ((~eqdim(X0,X1) | (leq(X0,X1) & leq(X1,X0))) & (~leq(X0,X1) | ~leq(X1,X0) | eqdim(X0,X1)))[flattening 203]
203. ! [X0,X1] : ((~eqdim(X0,X1) | (leq(X0,X1) & leq(X1,X0))) & ((~leq(X0,X1) | ~leq(X1,X0)) | eqdim(X0,X1)))[nnf transformation 95]
95. ! [X0,X1] : (eqdim(X0,X1) <=> (leq(X0,X1) & leq(X1,X0)))[flattening 94]
94. ! [X0] : ! [X1] : (eqdim(X0,X1) <=> (leq(X0,X1) & leq(X1,X0)))[rectify 28]
28. ! [X55] : ! [X56] : (eqdim(X55,X56) <=> (leq(X55,X56) & leq(X56,X55)))[input]
3572. zex(intersection(X4,X5)) | ~lt(X5,intersection(X4,X5)) (3:9) [resolution 1674,501]
501. ~cont(X0,X1) | ~lt(X1,X0) (2:6) [subsumption resolution 499,235]
235. ~lt(X1,X0) | ~lt(X0,X1) (0:6) [cnf transformation 133]
133. ! [X0,X1] : (~lt(X0,X1) | ~lt(X1,X0))[ennf transformation 63]
63. ! [X0,X1] : (lt(X0,X1) => ~lt(X1,X0))[flattening 62]
62. ! [X0] : ! [X1] : (lt(X0,X1) => ~lt(X1,X0))[rectify 3]
3. ! [X2] : ! [X3] : (lt(X2,X3) => ~lt(X3,X2))[input]
499. lt(X0,X1) | ~cont(X0,X1) | ~lt(X1,X0) (2:9) [resolution 231,309]
309. ~eqdim(X2,X1) | ~lt(X1,X2) (1:6) [resolution 234,233]
233. eqdim(X1,X0) | ~eqdim(X0,X1) (0:6) [cnf transformation 131]
131. ! [X0,X1] : (~eqdim(X0,X1) | eqdim(X1,X0))[ennf transformation 59]
59. ! [X0,X1] : (eqdim(X0,X1) => eqdim(X1,X0))[flattening 58]
58. ! [X0] : ! [X1] : (eqdim(X0,X1) => eqdim(X1,X0))[rectify 6]
6. ! [X8] : ! [X9] : (eqdim(X8,X9) => eqdim(X9,X8))[input]
231. eqdim(X0,X1) | lt(X0,X1) | ~cont(X0,X1) (0:9) [cnf transformation 128]
128. ! [X0,X1] : (~cont(X0,X1) | lt(X0,X1) | eqdim(X0,X1))[flattening 127]
127. ! [X0,X1] : (~cont(X0,X1) | (lt(X0,X1) | eqdim(X0,X1)))[ennf transformation 55]
55. ! [X0,X1] : (cont(X0,X1) => (lt(X0,X1) | eqdim(X0,X1)))[flattening 54]
54. ! [X0] : ! [X1] : (cont(X0,X1) => (lt(X0,X1) | eqdim(X0,X1)))[rectify 34]
34. ! [X70] : ! [X71] : (cont(X70,X71) => (lt(X70,X71) | eqdim(X70,X71)))[input]
1674. cont(intersection(X0,X1),X1) | zex(intersection(X0,X1)) (2:9) [subsumption resolution 1652,217]
217. eqdim(X0,X0) (0:3) [cnf transformation 45]
45. ! [X0] : eqdim(X0,X0)[rectify 5]
5. ! [X7] : eqdim(X7,X7)[input]
1652. ~eqdim(intersection(X0,X1),intersection(X0,X1)) | cont(intersection(X0,X1),X1) | zex(intersection(X0,X1)) (2:16) [resolution 568,225]
568. ~cont(X5,intersection(X6,X7)) | ~eqdim(X5,intersection(X6,X7)) | cont(X5,X7) (1:13) [resolution 272,290]
290. ~p(X2,intersection(X0,X1)) | cont(X2,X1) (0:8) [cnf transformation 209]
272. p(X0,X1) | ~eqdim(X0,X1) | ~cont(X0,X1) (0:9) [cnf transformation 202]
202. ! [X0,X1] : ((~p(X0,X1) | (cont(X0,X1) & eqdim(X0,X1))) & (~cont(X0,X1) | ~eqdim(X0,X1) | p(X0,X1)))[flattening 201]
201. ! [X0,X1] : ((~p(X0,X1) | (cont(X0,X1) & eqdim(X0,X1))) & ((~cont(X0,X1) | ~eqdim(X0,X1)) | p(X0,X1)))[nnf transformation 93]
93. ! [X0,X1] : (p(X0,X1) <=> (cont(X0,X1) & eqdim(X0,X1)))[flattening 92]
92. ! [X0] : ! [X1] : (p(X0,X1) <=> (cont(X0,X1) & eqdim(X0,X1)))[rectify 19]
19. ! [X36] : ! [X37] : (p(X36,X37) <=> (cont(X36,X37) & eqdim(X36,X37)))[input]
------------------------------
Version: Vampire 0.6 (revision 903)
Termination reason: Refutation

Active clauses: 433
Passive clauses: 1630
Generated clauses: 3655
Final active clauses: 433
Final passive clauses: 1135
Input formulas: 43
Initial clauses: 85

Unused predicate definitions: 2
Selected by SInE selection: 43
SInE iterations: 1

Duplicate literals: 63
Fw subsumption resolutions: 233

Simple tautologies: 72
Equational tautologies: 4
Forward subsumptions: 1715

Binary resolution: 2476
Factoring: 39
Forward superposition: 732
Backward superposition: 32

Unique components: 3

Memory used: 767KB
Time elapsed: 0.403 s
------------------------------
% Success in time 0.9 s
============================= C:\Reasoning\vampire_win ================================
execution finished: Sun Jun 24 00:58:50 2018
total CPU time used: 0
The command was "C:\Reasoning\vampire_win --mode casc --proof tptp -t 600 --input_file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\theorems\conversions\codi_int_theorems_goal14.all.tptp"
Input read from 
============================ end of footer ===========================
