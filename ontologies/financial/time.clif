/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Carmen Chui, Michael Gruninger - initial implementation
*******************************************************************************/

(cl-text http://colore.oor.net/financial/time.clif

(forall (a) (not (Nothing a))) (cl-comment 'Ax1')
(forall (a) (not (and (Thing a) (Datatype a)))) (cl-comment 'Ax2')
(forall (a) (if (IdentityDocument a) (Thing a)))
(cl-comment 'Ax3')
(forall (a) (if (Person a) (Thing a)))
(cl-comment 'Ax4')
(forall (a) (if (Contract a) (Thing a)))
(cl-comment 'Ax5')
(forall (a) (if (Rating a) (Thing a)))
(cl-comment 'Ax6')
(forall (a) (if (Report a) (Thing a)))
(cl-comment 'Ax7')
(forall (a) (if (BusinessDayAdjustment a) (Thing a)))
(cl-comment 'Ax8')
(forall (a) (if (BusinessRecurrenceInterval a) (Thing a)))
(cl-comment 'Ax9')
(forall (a) (if (BusinessRecurrenceIntervalConvention a) (Thing a)))
(cl-comment 'Ax10')
(forall (a) (if (DayOfMonth a) (Thing a)))
(cl-comment 'Ax11')
(forall (a) (if (DayOfWeek a) (Thing a)))
(cl-comment 'Ax12')
(forall (a) (if (EndOfMonth a) (Thing a)))
(cl-comment 'Ax13')
(forall (a) (if (AdHocScheduleEntry a) (Thing a)))
(cl-comment 'Ax14')
(forall (a) (if (CalculatedDate a) (Thing a)))
(cl-comment 'Ax15')
(forall (a) (if (CalendarPeriod a) (Thing a)))
(cl-comment 'Ax16')
(forall (a) (if (CalendarSpecifiedInterval a) (Thing a)))
(cl-comment 'Ax17')
(forall (a) (if (Date a) (Thing a)))
(cl-comment 'Ax18')
(forall (a) (if (DatePeriod a) (Thing a)))
(cl-comment 'Ax19')
(forall (a) (if (DateTime a) (Thing a)))
(cl-comment 'Ax20')
(forall (a) (if (DateTimeStamp a) (Thing a)))
(cl-comment 'Ax21')
(forall (a) (if (Duration a) (Thing a)))
(cl-comment 'Ax22')
(forall (a) (if (ExplicitDate a) (Thing a)))
(cl-comment 'Ax23')
(forall (a) (if (ExplicitDatePeriod a) (Thing a)))
(cl-comment 'Ax24')
(forall (a) (if (ExplicitDuration a) (Thing a)))
(cl-comment 'Ax25')
(forall (a) (if (ExplicitRecurrenceInterval a) (Thing a)))
(cl-comment 'Ax26')
(forall (a) (if (RecurrenceInterval a) (Thing a)))
(cl-comment 'Ax27')
(forall (a) (if (RegularSchedule a) (Thing a)))
(cl-comment 'Ax28')
(forall (a) (if (RelativeDate a) (Thing a)))
(cl-comment 'Ax29')
(forall (a) (if (Schedule a) (Thing a)))
(cl-comment 'Ax30')
(forall (a) (if (ScheduleStub a) (Thing a)))
(cl-comment 'Ax31')
(forall (a) (if (SpecifiedDate a) (Thing a)))
(cl-comment 'Ax32')
(forall (a) (if (TimeDirection a) (Thing a)))
(cl-comment 'Ax33')
(forall (a) (if (TimeInstant a) (Thing a)))
(cl-comment 'Ax34')
(forall (a) (if (TimeInterval a) (Thing a)))
(cl-comment 'Ax35')
(forall (a) (if (Occurrence a) (Thing a)))
(cl-comment 'Ax36')
(forall (a) (if (OccurrenceBasedDate a) (Thing a)))
(cl-comment 'Ax37')
(forall (a) (if (OccurrenceKind a) (Thing a)))
(cl-comment 'Ax38')
(forall (a) (if (Objective a) (Thing a)))
(cl-comment 'Ax39')
(forall (a) (if (License a) (Thing a)))
(cl-comment 'Ax40')
(forall (a) (if (Control a) (Thing a)))
(cl-comment 'Ax41')
(forall (a) (if (Ownership a) (Thing a)))
(cl-comment 'Ax42')
(forall (a) (if (PartyInRole a) (Thing a)))
(cl-comment 'Ax43')
(forall (a) (if (AnnualizedStandardDeviation a) (Thing a)))
(cl-comment 'Ax44')
(forall (a) (if (NumericIndex a) (Thing a)))
(cl-comment 'Ax45')
(forall (a) (if (ScopedMeasure a) (Thing a)))
(cl-comment 'Ax46')
(forall (a) (if (StatisticalPopulation a) (Thing a)))
(cl-comment 'Ax47')
(forall (a) (if (StatisticalProgram a) (Thing a)))
(cl-comment 'Ax48')
(forall (a) (if (boolean a) (Datatype a))) (cl-comment 'Ax49')
(forall (a) (if (DATA a) (Datatype a))) (cl-comment 'Ax50')
(forall (a) (if (hexBinary a) (Datatype a))) (cl-comment 'Ax51')
(forall (a) (if (base64Binary a) (Datatype a)))
(cl-comment 'Ax52')
(forall (a) (if (date a) (Datatype a))) (cl-comment 'Ax53')
(forall (a) (if (time a) (Datatype a))) (cl-comment 'Ax54')
(forall (a) (if (gYearMonth a) (Datatype a)))
(cl-comment 'Ax55')
(forall (a) (if (gYear a) (Datatype a))) (cl-comment 'Ax56')
(forall (a) (if (gMonthDay a) (Datatype a))) (cl-comment 'Ax57')
(forall (a) (if (gDay a) (Datatype a))) (cl-comment 'Ax58')
(forall (a) (if (gMonth a) (Datatype a))) (cl-comment 'Ax59')
(forall (a) (if (duration a) (Datatype a))) (cl-comment 'Ax60')
(forall (a) (if (dateTime a) (Datatype a))) (cl-comment 'Ax61')
(forall (a) (if (dateTimeStamp a) (Datatype a)))
(cl-comment 'Ax62')
(forall (a) (if (anyURI a) (Datatype a))) (cl-comment 'Ax63')
(forall (a) (if (integer a) (Datatype a))) (cl-comment 'Ax64')
(forall (a) (if (negativeInteger a) (Datatype a)))
(cl-comment 'Ax65')
(forall (a) (if (nonNegativeInteger a) (Datatype a)))
(cl-comment 'Ax66')
(forall (a) (if (nonPositiveInteger a) (Datatype a)))
(cl-comment 'Ax67')
(forall (a) (if (positiveInteger a) (Datatype a)))
(cl-comment 'Ax68')
(forall (a) (if (decimal a) (Datatype a))) (cl-comment 'Ax69')
(forall (a) (if (double a) (Datatype a))) (cl-comment 'Ax70')
(forall (a) (if (float a) (Datatype a))) (cl-comment 'Ax71')
(forall (a) (if (long a) (Datatype a))) (cl-comment 'Ax72')
(forall (a) (if (int a) (Datatype a))) (cl-comment 'Ax73')
(forall (a) (if (short a) (Datatype a))) (cl-comment 'Ax74')
(forall (a) (if (byte a) (Datatype a))) (cl-comment 'Ax75')
(forall (a) (if (unsignedLongS a) (Datatype a)))
(cl-comment 'Ax76')
(forall (a) (if (unsignedInt a) (Datatype a)))
(cl-comment 'Ax77')
(forall (a) (if (unsignedShort a) (Datatype a)))
(cl-comment 'Ax78')
(forall (a) (if (unsignedByte a) (Datatype a)))
(cl-comment 'Ax79')
(forall (a) (if (string a) (Datatype a))) (cl-comment 'Ax80')
(forall (a) (if (NCName a) (Datatype a))) (cl-comment 'Ax81')
(forall (a) (if (QName a) (Datatype a))) (cl-comment 'Ax82')
(forall (a) (if (Name a) (Datatype a))) (cl-comment 'Ax83')
(forall (a) (if (NMTOKEN a) (Datatype a))) (cl-comment 'Ax84')
(forall (a) (if (NMTOKENS a) (Datatype a))) (cl-comment 'Ax85')
(forall (a) (if (token a) (Datatype a))) (cl-comment 'Ax86')
(forall (a) (if (language a) (Datatype a))) (cl-comment 'Ax87')
(forall (a) (if (normalizedString a) (Datatype a)))
(cl-comment 'Ax88')
(forall (a) (if (NOTATION a) (Datatype a))) (cl-comment 'Ax89')
(forall (a) (if (ENTITY a) (Datatype a))) (cl-comment 'Ax90')
(forall (a) (if (ENTITIES a) (Datatype a))) (cl-comment 'Ax91')
(forall (a) (if (ID a) (Datatype a))) (cl-comment 'Ax92')
(forall (a) (if (IDREF a) (Datatype a))) (cl-comment 'Ax93')
(forall (a) (if (IDREFS a) (Datatype a))) (cl-comment 'Ax94')
(forall (a) (if (real a) (Datatype a))) (cl-comment 'Ax95')
(forall (a) (if (rational a) (Datatype a))) (cl-comment 'Ax96')
(forall (a) (if (XMLLiteral a) (Datatype a)))
(cl-comment 'Ax97')
(forall (a) (if (Literal a) (Datatype a))) (cl-comment 'Ax98')
(forall (a) (if (CombinedDateTime a) (Datatype a)))
(cl-comment 'Ax99')
(if (hasDateSpecification a
b) (topDataProperty a
b))
(cl-comment 'Ax100')
(if (hasDateTimeStampValue a
b) (topDataProperty a
b))
(cl-comment 'Ax101')
(if (hasDateTimeValue a
b) (topDataProperty a
b))
(cl-comment 'Ax102')
(if (hasDateValue a
b) (topDataProperty a
b))
(cl-comment 'Ax103')
(if (hasDurationValue a
b) (topDataProperty a
b))
(cl-comment 'Ax104')
(if (hasOrdinalNumber a
b) (topDataProperty a
b))
(cl-comment 'Ax105')
(if (hasRelativeDuration a
b) (topDataProperty a
b))
(cl-comment 'Ax106')
(if (hasEventDateValue a
b) (topDataProperty a
b))
(cl-comment 'Ax107')
(if (hasDateSpecification a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax108')
(if (hasDateTimeStampValue a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax109')
(if (hasDateTimeValue a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax110')
(if (hasDateValue a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax111')
(if (hasDurationValue a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax112')
(if (hasOrdinalNumber a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax113')
(if (hasRelativeDuration a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax114')
(if (hasEventDateValue a
b) (not (bottomDataProperty a
b)))
(cl-comment 'Ax115')
(if (hasDateOfBirth a
b) (topObjectProperty a
b))
(cl-comment 'Ax116')
(if (hasEffectiveDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax117')
(if (hasExecutionDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax118')
(if (hasExecutionDateTimeStamp a
b) (topObjectProperty a
b))
(cl-comment 'Ax119')
(if (hasDateOfIssuance a
b) (topObjectProperty a
b))
(cl-comment 'Ax120')
(if (hasExpirationDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax121')
(if (hasReportingPeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax122')
(if (hasTerminationDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax123')
(if (hasBusinessDayAdjustment a
b) (topObjectProperty a
b))
(cl-comment 'Ax124')
(if (hasBusinessRecurrenceIntervalConvention a
b) (topObjectProperty a
b))
(cl-comment 'Ax125')
(if (holdsDuring a
b) (topObjectProperty a
b))
(cl-comment 'Ax126')
(if (hasCalendarPeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax127')
(if (hasDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax128')
(if (hasDatePeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax129')
(if (hasDateTime a
b) (topObjectProperty a
b))
(cl-comment 'Ax130')
(if (hasDateTimeStamp a
b) (topObjectProperty a
b))
(cl-comment 'Ax131')
(if (hasDuration a
b) (topObjectProperty a
b))
(cl-comment 'Ax132')
(if (hasEndDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax133')
(if (hasExplicitDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax134')
(if (hasOverallPeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax135')
(if (hasRecurrenceInterval a
b) (topObjectProperty a
b))
(cl-comment 'Ax136')
(if (hasRecurrenceStartDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax137')
(if (hasStartDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax138')
(if (hasTimeDirection a
b) (topObjectProperty a
b))
(cl-comment 'Ax139')
(if (isRelativeTo a
b) (topObjectProperty a
b))
(cl-comment 'Ax140')
(if (hasEventDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax141')
(if (isTriggeredBy a
b) (topObjectProperty a
b))
(cl-comment 'Ax142')
(if (hasCommencementDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax143')
(if (isCharacterizedBy a
b) (topObjectProperty a
b))
(cl-comment 'Ax144')
(if (forYear a
b) (topObjectProperty a
b))
(cl-comment 'Ax145')
(if (hasApplicableDatePeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax146')
(if (hasBasePeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax147')
(if (hasPeriodicity a
b) (topObjectProperty a
b))
(cl-comment 'Ax148')
(if (hasReferencePeriod a
b) (topObjectProperty a
b))
(cl-comment 'Ax149')
(if (hasReleaseDate a
b) (topObjectProperty a
b))
(cl-comment 'Ax150')
(if (hasDateOfBirth a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax151')
(if (hasEffectiveDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax152')
(if (hasExecutionDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax153')
(if (hasExecutionDateTimeStamp a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax154')
(if (hasDateOfIssuance a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax155')
(if (hasExpirationDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax156')
(if (hasReportingPeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax157')
(if (hasTerminationDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax158')
(if (hasBusinessDayAdjustment a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax159')
(if (hasBusinessRecurrenceIntervalConvention a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax160')
(if (holdsDuring a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax161')
(if (hasCalendarPeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax162')
(if (hasDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax163')
(if (hasDatePeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax164')
(if (hasDateTime a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax165')
(if (hasDateTimeStamp a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax166')
(if (hasDuration a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax167')
(if (hasEndDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax168')
(if (hasExplicitDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax169')
(if (hasOverallPeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax170')
(if (hasRecurrenceInterval a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax171')
(if (hasRecurrenceStartDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax172')
(if (hasStartDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax173')
(if (hasTimeDirection a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax174')
(if (isRelativeTo a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax175')
(if (hasEventDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax176')
(if (isTriggeredBy a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax177')
(if (hasCommencementDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax178')
(if (isCharacterizedBy a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax179')
(if (forYear a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax180')
(if (hasApplicableDatePeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax181')
(if (hasBasePeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax182')
(if (hasPeriodicity a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax183')
(if (hasReferencePeriod a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax184')
(if (hasReleaseDate a
b) (not (bottomObjectProperty a
b)))
(cl-comment 'Ax185')
(forall (a) (iff (DayOfWeek a) (or (= a Monday)
(= a Thursday)
(= a Sunday)
(= a Tuesday)
(= a Saturday)
(= a Wednesday)
(= a Friday))))
(cl-comment 'Ax1_1')
(forall (a) (if (IdentityDocument a) (and (exists (b) (and (Date b)
(hasDateOfIssuance a
b)))
(exists (b
c) (if (and (hasDateOfIssuance a
b)
(hasDateOfIssuance a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax2_2')
(forall (a) (if (IdentityDocument a) (and (exists (b) (and (Date b)
(hasExpirationDate a
b)))
(exists (b
c) (if (and (hasExpirationDate a
b)
(hasExpirationDate a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax3_3')
(forall (a) (if (Person a) (and (exists (b) (and (Date b)
(hasDateOfBirth a
b)))
(exists (b
c) (if (and (hasDateOfBirth a
b)
(hasDateOfBirth a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax4_4')
(forall (a) (if (Contract a) (forall (b) (if (hasExecutionDate a
b) (Date b)))))
(cl-comment 'Ax5_5')
(forall (a) (if (Contract a) (and (exists (b) (and (Date b)
(hasEffectiveDate a
b)))
(exists (b
c) (if (and (hasEffectiveDate a
b)
(hasEffectiveDate a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax6_6')
(forall (a) (if (Rating a) (and (exists (b) (and (Date b)
(hasDateOfIssuance a
b)))
(exists (b
c) (if (and (hasDateOfIssuance a
b)
(hasDateOfIssuance a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax7_7')
(forall (a) (if (Rating a) (exists (b
c) (if (and (hasEffectiveDate a
b)
(hasEffectiveDate a
c)
(Date b)) (= b c)))))
(cl-comment 'Ax8_8')
(forall (a) (if (Report a) (exists (b) (and (hasDateOfIssuance a
b)
(Date b)))))
(cl-comment 'Ax9_9')
(cl-comment '(forall (a) (if (Report a) (exists () (and))))')
(cl-comment 'Ax10_10')
(forall (a) (if (BusinessRecurrenceInterval a) (RecurrenceInterval a)))
(cl-comment 'Ax11_11')
(forall (a) (if (BusinessRecurrenceInterval a) (and (exists (b) (and (BusinessRecurrenceIntervalConvention b)
(hasBusinessRecurrenceIntervalConvention a
b)))
(exists (b
c) (if (and (hasBusinessRecurrenceIntervalConvention a
b)
(hasBusinessRecurrenceIntervalConvention a
c)
(BusinessRecurrenceIntervalConvention b)) (= b c))))))
(cl-comment 'Ax12_12')
(forall (a) (if (DayOfMonth a) (BusinessRecurrenceInterval a)))
(cl-comment 'Ax13_13')
(forall (a) (if (DayOfMonth a) (and (exists (b) (and (nonNegativeInteger b)
(hasOrdinalNumber a
b)))
(exists (b
c) (if (and (hasOrdinalNumber a
b)
(hasOrdinalNumber a
c)
(nonNegativeInteger b)) (= b c))))))
(cl-comment 'Ax14_14')
(forall (a) (if (DayOfWeek a) (BusinessRecurrenceInterval a)))
(cl-comment 'Ax15_15')
(forall (a) (if (EndOfMonth a) (BusinessRecurrenceInterval a)))
(cl-comment 'Ax16_16')
(cl-comment '(forall (a) (if (AdHocScheduleEntry a) (exists () (and))))')
(cl-comment 'Ax17_17')
(forall (a) (if (CalculatedDate a) (Date a)))
(cl-comment 'Ax18_18')
(forall (a) (if (CalculatedDate a) (exists (b
c) (if (and (hasBusinessDayAdjustment a
b)
(hasBusinessDayAdjustment a
c)
(BusinessDayAdjustment b)) (= b c)))))
(cl-comment 'Ax19_19')
(forall (a) (if (CalendarPeriod a) (TimeInterval a)))
(cl-comment 'Ax20_20')
(forall (a) (if (CalendarSpecifiedInterval a) (RecurrenceInterval a)))
(cl-comment 'Ax21_21')
(forall (a) (if (CalendarSpecifiedInterval a) (and (exists (b) (and (CalendarPeriod b)
(hasCalendarPeriod a
b)))
(exists (b
c) (if (and (hasCalendarPeriod a
b)
(hasCalendarPeriod a
c)
(CalendarPeriod b)) (= b c))))))
(cl-comment 'Ax22_22')
(forall (a) (if (CalendarSpecifiedInterval a) (and (exists (b) (and (TimeDirection b)
(hasTimeDirection a
b)))
(exists (b
c) (if (and (hasTimeDirection a
b)
(hasTimeDirection a
c)
(TimeDirection b)) (= b c))))))
(cl-comment 'Ax23_23')
(forall (a) (if (CalendarSpecifiedInterval a) (and (exists (b) (and (integer b)
(hasOrdinalNumber a
b)))
(exists (b
c) (if (and (hasOrdinalNumber a
b)
(hasOrdinalNumber a
c)
(integer b)) (= b c))))))
(cl-comment 'Ax24_24')
(forall (a) (if (Date a) (TimeInstant a)))
(cl-comment 'Ax25_25')
(forall (a) (if (Date a) (exists (b
c) (if (and (hasDateValue a
b)
(hasDateValue a
c)
(string b)) (= b c)))))
(cl-comment 'Ax26_26')
(forall (a) (if (DatePeriod a) (TimeInterval a)))
(cl-comment 'Ax27_27')
(forall (a) (if (DatePeriod a) (exists (b
c) (if (and (hasDuration a
b)
(hasDuration a
c)
(Duration b)) (= b c)))))
(cl-comment 'Ax28_28')
(forall (a) (if (DatePeriod a) (exists (b
c) (if (and (hasEndDate a
b)
(hasEndDate a
c)
(Date b)) (= b c)))))
(cl-comment 'Ax29_29')
(forall (a) (if (DatePeriod a) (exists (b
c) (if (and (hasStartDate a
b)
(hasStartDate a
c)
(Date b)) (= b c)))))
(cl-comment 'Ax30_30')
(forall (a) (if (DateTime a) (TimeInstant a)))
(cl-comment 'Ax31_31')
(forall (a) (if (DateTime a) (exists (b
c) (if (and (hasDateTimeValue a
b)
(hasDateTimeValue a
c)
(dateTime b)) (= b c)))))
(cl-comment 'Ax32_32')
(forall (a) (if (DateTimeStamp a) (TimeInstant a)))
(cl-comment 'Ax33_33')
(forall (a) (if (DateTimeStamp a) (exists (b
c) (if (and (hasDateTimeStampValue a
b)
(hasDateTimeStampValue a
c)
(dateTimeStamp b)) (= b c)))))
(cl-comment 'Ax34_34')
(forall (a) (if (Duration a) (TimeInterval a)))
(cl-comment 'Ax35_35')
(forall (a) (if (Duration a) (exists (b
c) (if (and (hasDurationValue a
b)
(hasDurationValue a
c)
(string b)) (= b c)))))
(cl-comment 'Ax36_36')
(forall (a) (if (ExplicitDate a) (Date a)))
(cl-comment 'Ax37_37')
(forall (a) (if (ExplicitDate a) (and (exists (b) (and (string b)
(hasDateValue a
b)))
(exists (b
c) (if (and (hasDateValue a
b)
(hasDateValue a
c)
(string b)) (= b c))))))
(cl-comment 'Ax38_38')
(forall (a) (if (ExplicitDatePeriod a) (DatePeriod a)))
(cl-comment 'Ax39_39')
(forall (a) (if (ExplicitDatePeriod a) (exists (b
c) (if (and (hasDuration a
b)
(hasDuration a
c)
(ExplicitDuration b)) (= b c)))))
(cl-comment 'Ax40_40')
(forall (a) (if (ExplicitDatePeriod a) (exists (b
c) (if (and (hasEndDate a
b)
(hasEndDate a
c)
(ExplicitDate b)) (= b c)))))
(cl-comment 'Ax41_41')
(forall (a) (if (ExplicitDatePeriod a) (exists (b
c) (if (and (hasStartDate a
b)
(hasStartDate a
c)
(ExplicitDate b)) (= b c)))))
(cl-comment 'Ax42_42')
(forall (a) (if (ExplicitDuration a) (Duration a)))
(cl-comment 'Ax43_43')
(forall (a) (if (ExplicitDuration a) (and (exists (b) (and (string b)
(hasDurationValue a
b)))
(exists (b
c) (if (and (hasDurationValue a
b)
(hasDurationValue a
c)
(string b)) (= b c))))))
(cl-comment 'Ax44_44')
(forall (a) (if (ExplicitRecurrenceInterval a) (RecurrenceInterval a)))
(cl-comment 'Ax45_45')
(forall (a) (if (ExplicitRecurrenceInterval a) (and (exists (b) (and (string b)
(hasDurationValue a
b)))
(exists (b
c) (if (and (hasDurationValue a
b)
(hasDurationValue a
c)
(string b)) (= b c))))))
(cl-comment 'Ax46_46')
(forall (a) (if (RecurrenceInterval a) (TimeInterval a)))
(cl-comment 'Ax47_47')
(forall (a) (if (RegularSchedule a) (exists (b) (and (hasRecurrenceInterval a
b)
(RecurrenceInterval b)))))
(cl-comment 'Ax48_48')
(forall (a) (if (RegularSchedule a) (exists (b) (and (hasRecurrenceStartDate a
b)
(Date b)))))
(cl-comment 'Ax49_49')
(forall (a) (if (RelativeDate a) (CalculatedDate a)))
(cl-comment 'Ax50_50')
(forall (a) (if (RelativeDate a) (and (exists (b) (and (Date b)
(isRelativeTo a
b)))
(exists (b
c) (if (and (isRelativeTo a
b)
(isRelativeTo a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax51_51')
(forall (a) (if (RelativeDate a) (and (exists (b) (and (string b)
(hasRelativeDuration a
b)))
(exists (b
c) (if (and (hasRelativeDuration a
b)
(hasRelativeDuration a
c)
(string b)) (= b c))))))
(cl-comment 'Ax52_52')
(forall (a) (if (Schedule a) (and (exists (b) (and (DatePeriod b)
(hasOverallPeriod a
b)))
(exists (b
c) (if (and (hasOverallPeriod a
b)
(hasOverallPeriod a
c)
(DatePeriod b)) (= b c))))))
(cl-comment 'Ax53_53')
(forall (a) (if (ScheduleStub a) (and (exists (b) (and (DatePeriod b)
(hasDatePeriod a
b)))
(exists (b
c) (if (and (hasDatePeriod a
b)
(hasDatePeriod a
c)
(DatePeriod b)) (= b c))))))
(cl-comment 'Ax54_54')
(forall (a) (if (SpecifiedDate a) (CalculatedDate a)))
(cl-comment 'Ax55_55')
(forall (a) (if (SpecifiedDate a) (and (exists (b) (and (string b)
(hasDateSpecification a
b)))
(exists (b
c) (if (and (hasDateSpecification a
b)
(hasDateSpecification a
c)
(string b)) (= b c))))))
(cl-comment 'Ax56_56')
(forall (a) (if (Occurrence a) (or (and (exists (b) (and (DatePeriod b)
(holdsDuring a
b)))
(exists (b
c) (if (and (holdsDuring a
b)
(holdsDuring a
c)
(DatePeriod b)) (= b c))))
(and (exists (b) (and (Date b)
(hasEventDate a
b)))
(exists (b
c) (if (and (hasEventDate a
b)
(hasEventDate a
c)
(Date b)) (= b c))))
(and (exists (b) (and (CombinedDateTime b)
(hasEventDateValue a
b)))
(exists (b
c) (if (and (hasEventDateValue a
b)
(hasEventDateValue a
c)
(CombinedDateTime b)) (= b c)))))))
(cl-comment 'Ax57_57')
(forall (a) (if (OccurrenceBasedDate a) (CalculatedDate a)))
(cl-comment 'Ax58_58')
(forall (a) (if (OccurrenceBasedDate a) (and (exists (b) (and (OccurrenceKind b)
(isTriggeredBy a
b)))
(exists (b
c) (if (and (isTriggeredBy a
b)
(isTriggeredBy a
c)
(OccurrenceKind b)) (= b c))))))
(cl-comment 'Ax59_59')
(forall (a) (if (Objective a) (exists (b) (and (hasDatePeriod a
b)
(DatePeriod b)))))
(cl-comment 'Ax60_60')
(forall (a) (if (License a) (and (exists (b) (and (DatePeriod b)
(holdsDuring a
b)))
(exists (b
c) (if (and (holdsDuring a
b)
(holdsDuring a
c)
(DatePeriod b)) (= b c))))))
(cl-comment 'Ax61_61')
(forall (a) (if (Control a) (forall (b) (if (holdsDuring a
b) (DatePeriod b)))))
(cl-comment 'Ax62_62')
(forall (a) (if (Ownership a) (forall (b) (if (holdsDuring a
b) (DatePeriod b)))))
(cl-comment 'Ax63_63')
(forall (a) (if (PartyInRole a) (and (exists (b) (and (Date b)
(hasCommencementDate a
b)))
(exists (b
c) (if (and (hasCommencementDate a
b)
(hasCommencementDate a
c)
(Date b)) (= b c))))))
(cl-comment 'Ax64_64')
(forall (a) (if (AnnualizedStandardDeviation a) (and (exists (b) (and (ExplicitRecurrenceInterval b)
(hasReferencePeriod a
b)))
(exists (b
c) (if (and (hasReferencePeriod a
b)
(hasReferencePeriod a
c)
(ExplicitRecurrenceInterval b)) (= b c))))))
(cl-comment 'Ax65_65')
(forall (a) (if (NumericIndex a) (and (exists (b) (and (ExplicitDatePeriod b)
(hasReportingPeriod a
b)))
(exists (b
c) (if (and (hasReportingPeriod a
b)
(hasReportingPeriod a
c)
(ExplicitDatePeriod b)) (= b c))))))
(cl-comment 'Ax66_66')
(forall (a) (if (NumericIndex a) (and (exists (b) (and (ExplicitDatePeriod b)
(hasBasePeriod a
b)))
(exists (b
c) (if (and (hasBasePeriod a
b)
(hasBasePeriod a
c)
(ExplicitDatePeriod b)) (= b c))))))
(cl-comment 'Ax67_67')
(forall (a) (if (ScopedMeasure a) (forall (b) (if (hasPeriodicity a
b) (RecurrenceInterval b)))))
(cl-comment 'Ax68_68')
(forall (a) (if (StatisticalPopulation a) (exists (b) (and (isCharacterizedBy a
b)
(ExplicitDatePeriod b)))))
(cl-comment 'Ax69_69')
(forall (a) (if (StatisticalProgram a) (forall (b) (if (hasReportingPeriod a
b) (ExplicitDatePeriod b)))))
(cl-comment 'Ax70_70')
(forall (a) (if (StatisticalProgram a) (forall (b) (if (hasReferencePeriod a
b) (BusinessRecurrenceInterval b)))))
(cl-comment 'Ax71_71')
(cl-comment '(forall (a) (if (StatisticalProgram a) (exists () (and))))')
(cl-comment 'Ax72_72')
(forall (a) (not (and (CalculatedDate a)
(ExplicitDate a))))
(cl-comment 'Ax73_73')
(forall (a) (not (and (CalendarSpecifiedInterval a)
(ExplicitRecurrenceInterval a))))
(cl-comment 'Ax74_74')
(forall (a) (not (and (RelativeDate a)
(SpecifiedDate a))))
(cl-comment 'Ax75_75')
(forall (a) (not (and (RelativeDate a)
(OccurrenceBasedDate a))))
(cl-comment 'Ax76_76')
(forall (a) (not (and (SpecifiedDate a)
(OccurrenceBasedDate a))))
(cl-comment 'Ax77_77')
(CalendarPeriod CalendarMonth)
(cl-comment 'Ax78_78')
(CalendarPeriod CalendarQuarter)
(cl-comment 'Ax79_79')
(CalendarPeriod CalendarWeek)
(cl-comment 'Ax80_80')
(CalendarPeriod CalendarYear)
(cl-comment 'Ax81_81')
(TimeInterval Friday)
(cl-comment 'Ax82_82')
(TimeDirection FromEnd)
(cl-comment 'Ax83_83')
(TimeDirection FromStart)
(cl-comment 'Ax84_84')
(TimeInterval Monday)
(cl-comment 'Ax85_85')
(TimeInterval Saturday)
(cl-comment 'Ax86_86')
(TimeInterval Sunday)
(cl-comment 'Ax87_87')
(TimeInterval Thursday)
(cl-comment 'Ax88_88')
(TimeInterval Tuesday)
(cl-comment 'Ax89_89')
(TimeInterval Wednesday)
(cl-comment 'Ax90_90')
(forall (a) (exists (b) (if (hasBusinessRecurrenceIntervalConvention a
b) (BusinessRecurrenceInterval a))))
(cl-comment 'Ax91_91')
(forall (a) (exists (b) (if (isTriggeredBy a
b) (OccurrenceBasedDate a))))
(cl-comment 'Ax92_92')
(forall (b) (exists (a) (if (hasDateOfBirth a
b) (Date b))))
(cl-comment 'Ax93_93')
(forall (b) (exists (a) (if (hasEffectiveDate a
b) (Date b))))
(cl-comment 'Ax94_94')
(forall (b) (exists (a) (if (hasExecutionDate a
b) (Date b))))
(cl-comment 'Ax95_95')
(forall (b) (exists (a) (if (hasExecutionDateTimeStamp a
b) (DateTimeStamp b))))
(cl-comment 'Ax96_96')
(forall (b) (exists (a) (if (hasDateOfIssuance a
b) (Date b))))
(cl-comment 'Ax97_97')
(forall (b) (exists (a) (if (hasExpirationDate a
b) (Date b))))
(cl-comment 'Ax98_98')
(forall (b) (exists (a) (if (hasReportingPeriod a
b) (ExplicitDatePeriod b))))
(cl-comment 'Ax99_99')
(forall (b) (exists (a) (if (hasTerminationDate a
b) (Date b))))
(cl-comment 'Ax100_100')
(forall (b) (exists (a) (if (hasCalendarPeriod a
b) (CalendarPeriod b))))
(cl-comment 'Ax101_101')
(forall (b) (exists (a) (if (hasDate a
b) (Date b))))
(cl-comment 'Ax102_102')
(forall (b) (exists (a) (if (hasDatePeriod a
b) (DatePeriod b))))
(cl-comment 'Ax103_103')
(forall (b) (exists (a) (if (hasDateTime a
b) (DateTime b))))
(cl-comment 'Ax104_104')
(forall (b) (exists (a) (if (hasDateTimeStamp a
b) (DateTimeStamp b))))
(cl-comment 'Ax105_105')
(forall (b) (exists (a) (if (hasDuration a
b) (Duration b))))
(cl-comment 'Ax106_106')
(forall (b) (exists (a) (if (hasExplicitDate a
b) (ExplicitDate b))))
(cl-comment 'Ax107_107')
(forall (b) (exists (a) (if (hasRecurrenceInterval a
b) (RecurrenceInterval b))))
(cl-comment 'Ax108_108')
(forall (b) (exists (a) (if (hasTimeDirection a
b) (TimeDirection b))))
(cl-comment 'Ax109_109')
(forall (b) (exists (a) (if (isRelativeTo a
b) (Date b))))
(cl-comment 'Ax110_110')
(forall (b) (exists (a) (if (hasEventDate a
b) (Date b))))
(cl-comment 'Ax111_111')
(forall (b) (exists (a) (if (hasCommencementDate a
b) (Date b))))
(cl-comment 'Ax112_112')
(forall (b) (exists (a) (if (forYear a
b) (ExplicitDatePeriod b))))
(cl-comment 'Ax113_113')
(forall (b) (exists (a) (if (hasApplicableDatePeriod a
b) (DatePeriod b))))
(cl-comment 'Ax114_114')
(forall (b) (exists (a) (if (hasBasePeriod a
b) (ExplicitDatePeriod b))))
(cl-comment 'Ax115_115')
(forall (b) (exists (a) (if (hasPeriodicity a
b) (RecurrenceInterval b))))
(cl-comment 'Ax116_116')
(forall (b) (exists (a) (if (hasReferencePeriod a
b) (RecurrenceInterval b))))
(cl-comment 'Ax117_117')
(forall (b) (exists (a) (if (hasReleaseDate a
b) (Date b))))
(cl-comment 'Ax118_118')
(forall (a) (exists (b) (if (hasDateSpecification a
b) (SpecifiedDate hasDateSpecification))))
(cl-comment 'Ax119_119')
(forall (a) (exists (b) (if (hasDurationValue a
b) (Duration hasDurationValue))))
(cl-comment 'Ax120_120')


)