2021-03-21 17:41:56,569 macleod.Filemgt                INFO     Config file read: C:\Users\torsten\macleod\macleod_win.conf
2021-03-21 17:41:56,570 macleod.Filemgt                INFO     Logging configuration file read: C:\Users\torsten\macleod\logging.conf
2021-03-21 17:41:56,570 macleod.scripts.parser         INFO     Called script clif_to_owl
ELIMINATING CONDITIONALS True
2021-03-21 17:41:56,571 macleod.scripts.parser         INFO     Starting to parse dolce_time_mereology\dolce_time_mereology.clif
2021-03-21 17:41:56,590 macleod.Ontology               INFO     Starting to parse C:/Users/torsten/GitHub/colore/ontologies//dolce_taxonomy/dolce_taxonomy.clif
2021-03-21 17:41:56,609 macleod.Ontology               INFO     Found 15 axioms in C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
2021-03-21 17:41:56,609 macleod.Ontology               INFO     Collected 48 imported axioms
2021-03-21 17:41:56,609 macleod.Ontology               INFO     Working from a total of 63 axioms (including imported ones)
Axiom: \forall x,y\;[(~P(x,y) | ((~T(x) | T(y)) & (~T(y) | T(x))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[((~P(z,y) | ~T(y) | T(z)) & (~P(z,y) | ~T(z) | T(y)))]
 + yielded: \forall z,y\;[(~P(z,y) | ~T(y) | T(z))]
Checking whether property [P(z,y)] can be used to construct all_values pattern using concepts [T(y), T(z)]
Found property [P(z,y)] for potential all_values pattern using concepts [T(y), T(z)]
 + yielded: \forall z,y\;[(~P(z,y) | ~T(z) | T(y))]
Checking whether property [P(z,y)] can be used to construct all_values pattern using concepts [T(z), T(y)]
Found property [P(z,y)] for potential all_values pattern using concepts [T(z), T(y)]
Checking whether property [P(z,y)] can be used to construct all_values pattern for subclass [(T(z), True)] and limit [(T(y), True)]
     - pattern all_values
Looking for a all_values pattern involving the property P

Axiom: \forall x,y\;[(~P(x,y) | ((~T(x) | T(y)) & (~T(y) | T(x))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[((~P(z,y) | ~T(y) | T(z)) & (~P(z,y) | ~T(z) | T(y)))]
 + yielded: \forall z,y\;[(~P(z,y) | ~T(y) | T(z))]
Checking whether property [P(z,y)] can be used to construct all_values pattern using concepts [T(y), T(z)]
Found property [P(z,y)] for potential all_values pattern using concepts [T(y), T(z)]
 + yielded: \forall z,y\;[(~P(z,y) | ~T(z) | T(y))]
Checking whether property [P(z,y)] can be used to construct all_values pattern using concepts [T(z), T(y)]
Found property [P(z,y)] for potential all_values pattern using concepts [T(z), T(y)]
Checking whether property [P(z,y)] can be used to construct all_values pattern for subclass [(T(z), True)] and limit [(T(y), True)]
     - pattern all_values

Axiom: \forall x,y\;[(~T(x) | P(x,x))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[(~T(z) | P(z,z))]
 + yielded: \forall z,y\;[(~T(z) | P(z,z))]
Checking whether property [P(z,z)] can be used to construct all_values pattern using concepts [T(z)]
Found property [P(z,z)] for potential all_values pattern but is not negated

Axiom: \forall x,y\;[(~(T(x) & T(y) & P(x,y) & P(y,x)) | =(x,y))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[(~T(z) | ~T(y) | ~P(z,y) | ~P(y,z) | =(z,y))]
 + yielded: \forall z,y\;[(~T(z) | ~T(y) | ~P(z,y) | ~P(y,z) | =(z,y))]
Checking whether property [P(z,y), P(y,z), =(z,y)] can be used to construct all_values pattern using concepts [T(z), T(y)]

Axiom: \forall x,y,z\;[(~(T(x) & T(y) & P(x,y) & P(y,z)) | P(x,z))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y,x\;[(~T(z) | ~T(y) | ~P(z,y) | ~P(y,x) | P(z,x))]
 + yielded: \forall z,y,x\;[(~T(z) | ~T(y) | ~P(z,y) | ~P(y,x) | P(z,x))]

Axiom: \forall x,y\;[(~(T(x) & T(y) & ~P(x,y)) | \exists z\;[(T(z) & P(z,x) & ~O(z,y))])] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[\exists x\;[((P(z,y) | ~T(y) | ~T(z) | T(x)) & (P(z,y) | ~T(y) | ~T(z) | P(x,z)) & (P(z,y) | ~T(y) | ~T(z) | ~O(x,y)))]]
 + yielded: \forall z,y\;[\exists x\;[(P(z,y) | ~T(y) | ~T(z) | T(x))]]
 + yielded: \forall z,y\;[\exists x\;[(P(z,y) | ~T(y) | ~T(z) | P(x,z))]]
 + yielded: \forall z,y\;[\exists x\;[(P(z,y) | ~T(y) | ~T(z) | ~O(x,y))]]

Axiom: \forall x,y\;[(~(T(x) & T(y) & ~P(x,y)) | \exists z\;[(P(z,x) & DJ(z,y) & T(z))])] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[\exists x\;[((P(z,y) | ~T(y) | ~T(z) | P(x,z)) & (P(z,y) | ~T(y) | ~T(z) | DJ(x,y)) & (P(z,y) | ~T(y) | ~T(z) | T(x)))]]
 + yielded: \forall z,y\;[\exists x\;[(P(z,y) | ~T(y) | ~T(z) | P(x,z))]]
 + yielded: \forall z,y\;[\exists x\;[(P(z,y) | ~T(y) | ~T(z) | DJ(x,y))]]
 + yielded: \forall z,y\;[\exists x\;[(P(z,y) | ~T(y) | ~T(z) | T(x))]]

Axiom: \forall x,y\;[(~(T(x) & T(y)) | ((~PP(x,y) | (P(x,y) & ~P(y,x))) & (~(P(x,y) & ~P(y,x)) | PP(x,y))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[((~T(y) | ~T(z) | ~P(z,y) | P(y,z) | PP(z,y)) & (~PP(z,y) | ~T(z) | ~T(y) | P(z,y)) & (~PP(z,y) | ~T(z) | ~T(y) | ~P(y,z)))]
 + yielded: \forall z,y\;[(~T(y) | ~T(z) | ~P(z,y) | P(y,z) | PP(z,y))]
Checking whether property [P(z,y), P(y,z), PP(z,y)] can be used to construct all_values pattern using concepts [T(y), T(z)]
 + yielded: \forall z,y\;[(~PP(z,y) | ~T(z) | ~T(y) | P(z,y))]
Checking whether property [PP(z,y), P(z,y)] can be used to construct all_values pattern using concepts [T(z), T(y)]
 + yielded: \forall z,y\;[(~PP(z,y) | ~T(z) | ~T(y) | ~P(y,z))]

Axiom: \forall x,y\;[(~(T(x) & T(y)) | ((~O(x,y) | \exists z\;[(P(z,x) & P(z,y) & T(z))]) & (~\exists z\;[(P(z,x) & P(z,y) & T(z))] | O(x,y))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
(((P(x,z) & P(x,y) & T(x)) | ~O(z,y)) & (~P(w,z) | ~P(w,y) | ~T(w) | O(z,y)))
FF-PCNF: \forall z,y\;[\exists x\;[\forall w\;[((~O(z,y) | ~T(z) | ~T(y) | P(x,z)) & (~O(z,y) | ~T(z) | ~T(y) | P(x,y)) & (~O(z,y) | ~T(z) | ~T(y) | T(x)) & (~T(y) | ~T(z) | ~P(w,z) | ~P(w,y) | ~T(w) | O(z,y)))]]]
 + yielded: \forall z,y\;[\exists x\;[\forall w\;[((~O(z,y) | ~T(z) | ~T(y) | P(x,z)) & (~O(z,y) | ~T(z) | ~T(y) | P(x,y)) & (~O(z,y) | ~T(z) | ~T(y) | T(x)) & (~T(y) | ~T(z) | ~P(w,z) | ~P(w,y) | ~T(w) | O(z,y)))]]]

Axiom: \forall x,y\;[(~(T(x) & T(y)) | ((~DJ(x,y) | ~O(x,y)) & (~~O(x,y) | DJ(x,y))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[((~T(y) | ~T(z) | O(z,y) | DJ(z,y)) & (~T(y) | ~T(z) | ~DJ(z,y) | ~O(z,y)))]
 + yielded: \forall z,y\;[(~T(y) | ~T(z) | O(z,y) | DJ(z,y))]
Checking whether property [O(z,y), DJ(z,y)] can be used to construct all_values pattern using concepts [T(y), T(z)]
 + yielded: \forall z,y\;[(~T(y) | ~T(z) | ~DJ(z,y) | ~O(z,y))]

Axiom: \forall x,y\;[(~(T(x) & T(y)) | ((~U(x,y) | \exists z\;[(P(x,z) & P(y,z) & T(z))]) & (~\exists z\;[(P(x,z) & P(y,z) & T(z))] | U(x,y))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
(((P(z,x) & P(y,x) & T(x)) | ~U(z,y)) & (~P(z,w) | ~P(y,w) | ~T(w) | U(z,y)))
FF-PCNF: \forall z,y\;[\exists x\;[\forall w\;[((~U(z,y) | ~T(z) | ~T(y) | P(z,x)) & (~U(z,y) | ~T(z) | ~T(y) | P(y,x)) & (~U(z,y) | ~T(z) | ~T(y) | T(x)) & (~T(y) | ~T(z) | ~P(z,w) | ~P(y,w) | ~T(w) | U(z,y)))]]]
 + yielded: \forall z,y\;[\exists x\;[\forall w\;[((~U(z,y) | ~T(z) | ~T(y) | P(z,x)) & (~U(z,y) | ~T(z) | ~T(y) | P(y,x)) & (~U(z,y) | ~T(z) | ~T(y) | T(x)) & (~T(y) | ~T(z) | ~P(z,w) | ~P(y,w) | ~T(w) | U(z,y)))]]]

Axiom: \forall x\;[(~T(x) | ((~AtP(x) | \forall y\;[(~(T(y) & P(y,x)) | =(y,x))]) & (~\forall y\;[(~(T(y) & P(y,x)) | =(y,x))] | AtP(x))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
(((T(x) & P(x,z) & ~=(x,z)) | AtP(z)) & (~T(y) | ~P(y,z) | =(y,z) | ~AtP(z)))
FF-PCNF: \forall z\;[\exists x\;[\forall y\;[((AtP(z) | ~T(z) | T(x)) & (AtP(z) | ~T(z) | P(x,z)) & (AtP(z) | ~T(z) | ~=(x,z)) & (~T(z) | ~T(y) | ~P(y,z) | =(y,z) | ~AtP(z)))]]]
 + yielded: \forall z\;[\exists x\;[\forall y\;[((AtP(z) | ~T(z) | T(x)) & (AtP(z) | ~T(z) | P(x,z)) & (AtP(z) | ~T(z) | ~=(x,z)) & (~T(z) | ~T(y) | ~P(y,z) | =(y,z) | ~AtP(z)))]]]

Axiom: \forall x,y\;[(~(T(x) & T(y) & U(x,y)) | \exists z\;[(T(z) & \forall w\;[(~T(w) | ((~O(w,z) | O(w,x) | O(w,y)) & (~(O(w,x) | O(w,y)) | O(w,z))))])])] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[\exists x\;[\forall w\;[((O(w,x) | ~U(z,y) | ~T(y) | ~T(z) | ~T(w) | ~O(w,z)) & (O(w,x) | ~U(z,y) | ~T(y) | ~T(z) | ~T(w) | ~O(w,y)) & (~T(w) | ~T(z) | ~T(y) | ~U(z,y) | ~O(w,x) | O(w,z) | O(w,y)) & (~U(z,y) | ~T(y) | ~T(z) | T(x)))]]]
 + yielded: \forall z,y\;[\exists x\;[\forall w\;[((O(w,x) | ~U(z,y) | ~T(y) | ~T(z) | ~T(w) | ~O(w,z)) & (O(w,x) | ~U(z,y) | ~T(y) | ~T(z) | ~T(w) | ~O(w,y)) & (~T(w) | ~T(z) | ~T(y) | ~U(z,y) | ~O(w,x) | O(w,z) | O(w,y)) & (~U(z,y) | ~T(y) | ~T(z) | T(x)))]]]

Axiom: \forall x,y\;[(~(T(x) & T(y) & O(x,y)) | \exists z\;[(T(z) & \forall w\;[(~T(w) | ((~PP(w,z) | (PP(w,x) & PP(w,y))) & (~(PP(w,x) & PP(w,y)) | PP(w,z))))])])] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
FF-PCNF: \forall z,y\;[\exists x\;[\forall w\;[((~T(w) | ~T(z) | ~T(y) | ~O(z,y) | ~PP(w,z) | ~PP(w,y) | PP(w,x)) & (~PP(w,x) | ~O(z,y) | ~T(y) | ~T(z) | ~T(w) | PP(w,z)) & (~PP(w,x) | ~O(z,y) | ~T(y) | ~T(z) | ~T(w) | PP(w,y)) & (~O(z,y) | ~T(y) | ~T(z) | T(x)))]]]
 + yielded: \forall z,y\;[\exists x\;[\forall w\;[((~T(w) | ~T(z) | ~T(y) | ~O(z,y) | ~PP(w,z) | ~PP(w,y) | PP(w,x)) & (~PP(w,x) | ~O(z,y) | ~T(y) | ~T(z) | ~T(w) | PP(w,z)) & (~PP(w,x) | ~O(z,y) | ~T(y) | ~T(z) | ~T(w) | PP(w,y)) & (~O(z,y) | ~T(y) | ~T(z) | T(x)))]]]

Axiom: \forall x,y,z\;[(~(T(x) & T(y) & T(z)) | ((~SUM(z,x,y) | \forall w\;[(~T(w) | ((~O(w,z) | O(w,x) | O(w,y)) & (~(O(w,x) | O(w,y)) | O(w,z))))]) & (~\forall w\;[(~T(w) | ((~O(w,z) | O(w,x) | O(w,y)) & (~(O(w,x) | O(w,y)) | O(w,z))))] | SUM(z,x,y))))] from C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif
(((T(v) & ((~O(v,x) & (O(v,z) | O(v,y))) | (O(v,x) & ~O(v,z) & ~O(v,y)))) | SUM(x,z,y)) & (~T(w) | ((O(w,x) | (~O(w,z) & ~O(w,y))) & (~O(w,x) | O(w,z) | O(w,y))) | ~SUM(x,z,y)))
FF-PCNF: \forall z,y,x\;[\exists v\;[\forall w\;[((SUM(x,z,y) | ~T(z) | ~T(y) | ~T(x) | T(v)) & (SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z)) & (~O(v,x) | SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z) | ~O(v,z)) & (~O(v,x) | SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z) | ~O(v,y)) & (O(v,y) | O(v,z) | SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z) | O(v,x)) & (O(w,x) | ~T(x) | ~T(y) | ~T(z) | ~T(w) | ~SUM(x,z,y) | ~O(w,z)) & (O(w,x) | ~T(x) | ~T(y) | ~T(z) | ~T(w) | ~SUM(x,z,y) | ~O(w,y)) & (~SUM(x,z,y) | ~T(w) | ~T(z) | ~T(y) | ~T(x) | ~O(w,x) | O(w,z) | O(w,y)))]]]
 + yielded: \forall z,x,y\;[(SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z))]
 + yielded: \forall z,x,y\;[\exists v\;[\forall w\;[((SUM(x,z,y) | ~T(z) | ~T(y) | ~T(x) | T(v)) & (~O(v,x) | SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z) | ~O(v,z)) & (~O(v,x) | SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z) | ~O(v,y)) & (O(v,y) | O(v,z) | SUM(x,z,y) | ~T(y) | ~T(x) | ~T(z) | O(v,x)) & (O(w,x) | ~T(x) | ~T(y) | ~T(z) | ~T(w) | ~SUM(x,z,y) | ~O(w,z)) & (O(w,x) | ~T(x) | ~T(y) | ~T(z) | ~T(w) | ~SUM(x,z,y) | ~O(w,y)) & (~SUM(x,z,y) | ~T(w) | ~T(z) | ~T(y) | ~T(x) | ~O(w,x) | O(w,z) | O(w,y)))]]]

Axiom: \forall x\;[(~(ED(x) | PD(x) | Q(x) | AB(x)) | PT(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((PT(z) | ~ED(z)) & (PT(z) | ~PD(z)) & (PT(z) | ~Q(z)) & (PT(z) | ~AB(z)))]
 + yielded: \forall z\;[(PT(z) | ~ED(z))]
     - pattern subclass
 + yielded: \forall z\;[(PT(z) | ~PD(z))]
     - pattern subclass
 + yielded: \forall z\;[(PT(z) | ~Q(z))]
     - pattern subclass
 + yielded: \forall z\;[(PT(z) | ~AB(z))]
     - pattern subclass

Axiom: \forall x\;[(~(PED(x) | NPED(x) | AS(x)) | ED(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((ED(z) | ~PED(z)) & (ED(z) | ~NPED(z)) & (ED(z) | ~AS(z)))]
 + yielded: \forall z\;[(ED(z) | ~PED(z))]
     - pattern subclass
 + yielded: \forall z\;[(ED(z) | ~NPED(z))]
     - pattern subclass
 + yielded: \forall z\;[(ED(z) | ~AS(z))]
     - pattern subclass

Axiom: \forall x\;[(~(EV(x) | STV(x)) | PD(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((PD(z) | ~EV(z)) & (PD(z) | ~STV(z)))]
 + yielded: \forall z\;[(PD(z) | ~EV(z))]
     - pattern subclass
 + yielded: \forall z\;[(PD(z) | ~STV(z))]
     - pattern subclass

Axiom: \forall x\;[(~(TQ(x) | PQ(x) | AQ(x)) | Q(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((Q(z) | ~TQ(z)) & (Q(z) | ~PQ(z)) & (Q(z) | ~AQ(z)))]
 + yielded: \forall z\;[(Q(z) | ~TQ(z))]
     - pattern subclass
 + yielded: \forall z\;[(Q(z) | ~PQ(z))]
     - pattern subclass
 + yielded: \forall z\;[(Q(z) | ~AQ(z))]
     - pattern subclass

Axiom: \forall x\;[(~R(x) | AB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~R(z) | AB(z))]
 + yielded: \forall z\;[(~R(z) | AB(z))]
     - pattern subclass

Axiom: \forall x\;[(~(M(x) | F(x) | POB(x)) | PED(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((PED(z) | ~M(z)) & (PED(z) | ~F(z)) & (PED(z) | ~POB(z)))]
 + yielded: \forall z\;[(PED(z) | ~M(z))]
     - pattern subclass
 + yielded: \forall z\;[(PED(z) | ~F(z))]
     - pattern subclass
 + yielded: \forall z\;[(PED(z) | ~POB(z))]
     - pattern subclass

Axiom: \forall x\;[(~NPOB(x) | NPED(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~NPOB(z) | NPED(z))]
 + yielded: \forall z\;[(~NPOB(z) | NPED(z))]
     - pattern subclass

Axiom: \forall x\;[(~(ACH(x) | ACC(x)) | EV(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((EV(z) | ~ACH(z)) & (EV(z) | ~ACC(z)))]
 + yielded: \forall z\;[(EV(z) | ~ACH(z))]
     - pattern subclass
 + yielded: \forall z\;[(EV(z) | ~ACC(z))]
     - pattern subclass

Axiom: \forall x\;[(~(ST(x) | PRO(x)) | STV(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((STV(z) | ~ST(z)) & (STV(z) | ~PRO(z)))]
 + yielded: \forall z\;[(STV(z) | ~ST(z))]
     - pattern subclass
 + yielded: \forall z\;[(STV(z) | ~PRO(z))]
     - pattern subclass

Axiom: \forall x\;[(~TL(x) | TQ(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~TL(z) | TQ(z))]
 + yielded: \forall z\;[(~TL(z) | TQ(z))]
     - pattern subclass

Axiom: \forall x\;[(~SL(x) | PQ(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~SL(z) | PQ(z))]
 + yielded: \forall z\;[(~SL(z) | PQ(z))]
     - pattern subclass

Axiom: \forall x\;[(~(TR(x) | PR(x) | AR(x)) | R(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((R(z) | ~TR(z)) & (R(z) | ~PR(z)) & (R(z) | ~AR(z)))]
 + yielded: \forall z\;[(R(z) | ~TR(z))]
     - pattern subclass
 + yielded: \forall z\;[(R(z) | ~PR(z))]
     - pattern subclass
 + yielded: \forall z\;[(R(z) | ~AR(z))]
     - pattern subclass

Axiom: \forall x\;[(~(APO(x) | NAPO(x)) | POB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((POB(z) | ~APO(z)) & (POB(z) | ~NAPO(z)))]
 + yielded: \forall z\;[(POB(z) | ~APO(z))]
     - pattern subclass
 + yielded: \forall z\;[(POB(z) | ~NAPO(z))]
     - pattern subclass

Axiom: \forall x\;[(~(MOB(x) | SOB(x)) | NPOB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((NPOB(z) | ~MOB(z)) & (NPOB(z) | ~SOB(z)))]
 + yielded: \forall z\;[(NPOB(z) | ~MOB(z))]
     - pattern subclass
 + yielded: \forall z\;[(NPOB(z) | ~SOB(z))]
     - pattern subclass

Axiom: \forall x\;[(~T(x) | TR(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~T(z) | TR(z))]
 + yielded: \forall z\;[(~T(z) | TR(z))]
     - pattern subclass

Axiom: \forall x\;[(~S(x) | PR(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~S(z) | PR(z))]
 + yielded: \forall z\;[(~S(z) | PR(z))]
     - pattern subclass

Axiom: \forall x\;[(~(ASO(x) | NASO(x)) | SOB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((SOB(z) | ~ASO(z)) & (SOB(z) | ~NASO(z)))]
 + yielded: \forall z\;[(SOB(z) | ~ASO(z))]
     - pattern subclass
 + yielded: \forall z\;[(SOB(z) | ~NASO(z))]
     - pattern subclass

Axiom: \forall x\;[(~(SAG(x) | SC(x)) | ASO(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((ASO(z) | ~SAG(z)) & (ASO(z) | ~SC(z)))]
 + yielded: \forall z\;[(ASO(z) | ~SAG(z))]
     - pattern subclass
 + yielded: \forall z\;[(ASO(z) | ~SC(z))]
     - pattern subclass

Axiom: \forall x\;[((~PT(x) | ED(x) | PD(x) | Q(x) | AB(x)) & (~(ED(x) | PD(x) | Q(x) | AB(x)) | PT(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((PT(z) | ~ED(z)) & (PT(z) | ~PD(z)) & (PT(z) | ~Q(z)) & (PT(z) | ~AB(z)) & (~PT(z) | ED(z) | PD(z) | Q(z) | AB(z)))]
 + yielded: \forall z\;[(PT(z) | ~ED(z))]
     - pattern subclass
 + yielded: \forall z\;[(PT(z) | ~PD(z))]
     - pattern subclass
 + yielded: \forall z\;[(PT(z) | ~Q(z))]
     - pattern subclass
 + yielded: \forall z\;[(PT(z) | ~AB(z))]
     - pattern subclass
 + yielded: \forall z\;[(~PT(z) | ED(z) | PD(z) | Q(z) | AB(z))]
     - pattern subclass

Axiom: \forall x\;[(~ED(x) | (~PD(x) & ~Q(x) & ~AB(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((~ED(z) | ~PD(z)) & (~ED(z) | ~Q(z)) & (~ED(z) | ~AB(z)))]
 + yielded: \forall z\;[(~ED(z) | ~PD(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~ED(z) | ~Q(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~ED(z) | ~AB(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[(~PD(x) | (~Q(x) & ~AB(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((~PD(z) | ~Q(z)) & (~PD(z) | ~AB(z)))]
 + yielded: \forall z\;[(~PD(z) | ~Q(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~PD(z) | ~AB(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[(~Q(x) | ~AB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~Q(z) | ~AB(z))]
 + yielded: \forall z\;[(~Q(z) | ~AB(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~ED(x) | PED(x) | NPED(x) | AS(x)) & (~(PED(x) | NPED(x) | AS(x)) | ED(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((ED(z) | ~PED(z)) & (ED(z) | ~NPED(z)) & (ED(z) | ~AS(z)) & (~ED(z) | PED(z) | NPED(z) | AS(z)))]
 + yielded: \forall z\;[(ED(z) | ~PED(z))]
     - pattern subclass
 + yielded: \forall z\;[(ED(z) | ~NPED(z))]
     - pattern subclass
 + yielded: \forall z\;[(ED(z) | ~AS(z))]
     - pattern subclass
 + yielded: \forall z\;[(~ED(z) | PED(z) | NPED(z) | AS(z))]
     - pattern subclass

Axiom: \forall x\;[(~PED(x) | (~NPED(x) & ~AS(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((~PED(z) | ~NPED(z)) & (~PED(z) | ~AS(z)))]
 + yielded: \forall z\;[(~PED(z) | ~NPED(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~PED(z) | ~AS(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[(~NPED(x) | ~AS(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~NPED(z) | ~AS(z))]
 + yielded: \forall z\;[(~NPED(z) | ~AS(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~PD(x) | EV(x) | STV(x)) & (~(EV(x) | STV(x)) | PD(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((PD(z) | ~EV(z)) & (PD(z) | ~STV(z)) & (~PD(z) | EV(z) | STV(z)))]
 + yielded: \forall z\;[(PD(z) | ~EV(z))]
     - pattern subclass
 + yielded: \forall z\;[(PD(z) | ~STV(z))]
     - pattern subclass
 + yielded: \forall z\;[(~PD(z) | EV(z) | STV(z))]
     - pattern subclass

Axiom: \forall x\;[(~EV(x) | ~STV(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~EV(z) | ~STV(z))]
 + yielded: \forall z\;[(~EV(z) | ~STV(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~Q(x) | TQ(x) | PQ(x) | AQ(x)) & (~(TQ(x) | PQ(x) | AQ(x)) | Q(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((Q(z) | ~TQ(z)) & (Q(z) | ~PQ(z)) & (Q(z) | ~AQ(z)) & (~Q(z) | TQ(z) | PQ(z) | AQ(z)))]
 + yielded: \forall z\;[(Q(z) | ~TQ(z))]
     - pattern subclass
 + yielded: \forall z\;[(Q(z) | ~PQ(z))]
     - pattern subclass
 + yielded: \forall z\;[(Q(z) | ~AQ(z))]
     - pattern subclass
 + yielded: \forall z\;[(~Q(z) | TQ(z) | PQ(z) | AQ(z))]
     - pattern subclass

Axiom: \forall x\;[(~TQ(x) | (~PQ(x) & ~AQ(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((~TQ(z) | ~PQ(z)) & (~TQ(z) | ~AQ(z)))]
 + yielded: \forall z\;[(~TQ(z) | ~PQ(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~TQ(z) | ~AQ(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[(~PQ(x) | ~AQ(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~PQ(z) | ~AQ(z))]
 + yielded: \forall z\;[(~PQ(z) | ~AQ(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~PED(x) | M(x) | F(x) | POB(x)) & (~(M(x) | F(x) | POB(x)) | PED(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((PED(z) | ~M(z)) & (PED(z) | ~F(z)) & (PED(z) | ~POB(z)) & (~PED(z) | M(z) | F(z) | POB(z)))]
 + yielded: \forall z\;[(PED(z) | ~M(z))]
     - pattern subclass
 + yielded: \forall z\;[(PED(z) | ~F(z))]
     - pattern subclass
 + yielded: \forall z\;[(PED(z) | ~POB(z))]
     - pattern subclass
 + yielded: \forall z\;[(~PED(z) | M(z) | F(z) | POB(z))]
     - pattern subclass

Axiom: \forall x\;[(~M(x) | (~F(x) & ~POB(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((~M(z) | ~F(z)) & (~M(z) | ~POB(z)))]
 + yielded: \forall z\;[(~M(z) | ~F(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~M(z) | ~POB(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[(~F(x) | ~POB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~F(z) | ~POB(z))]
 + yielded: \forall z\;[(~F(z) | ~POB(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~EV(x) | ACH(x) | ACC(x)) & (~(ACH(x) | ACC(x)) | EV(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((EV(z) | ~ACH(z)) & (EV(z) | ~ACC(z)) & (~EV(z) | ACH(z) | ACC(z)))]
 + yielded: \forall z\;[(EV(z) | ~ACH(z))]
     - pattern subclass
 + yielded: \forall z\;[(EV(z) | ~ACC(z))]
     - pattern subclass
 + yielded: \forall z\;[(~EV(z) | ACH(z) | ACC(z))]
     - pattern subclass

Axiom: \forall x\;[(~ACH(x) | ~ACC(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~ACH(z) | ~ACC(z))]
 + yielded: \forall z\;[(~ACH(z) | ~ACC(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~STV(x) | ST(x) | PRO(x)) & (~(ST(x) | PRO(x)) | STV(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((STV(z) | ~ST(z)) & (STV(z) | ~PRO(z)) & (~STV(z) | ST(z) | PRO(z)))]
 + yielded: \forall z\;[(STV(z) | ~ST(z))]
     - pattern subclass
 + yielded: \forall z\;[(STV(z) | ~PRO(z))]
     - pattern subclass
 + yielded: \forall z\;[(~STV(z) | ST(z) | PRO(z))]
     - pattern subclass

Axiom: \forall x\;[(~ST(x) | ~PRO(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~ST(z) | ~PRO(z))]
 + yielded: \forall z\;[(~ST(z) | ~PRO(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~R(x) | TR(x) | PR(x) | AR(x)) & (~(TR(x) | PR(x) | AR(x)) | R(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((R(z) | ~TR(z)) & (R(z) | ~PR(z)) & (R(z) | ~AR(z)) & (~R(z) | TR(z) | PR(z) | AR(z)))]
 + yielded: \forall z\;[(R(z) | ~TR(z))]
     - pattern subclass
 + yielded: \forall z\;[(R(z) | ~PR(z))]
     - pattern subclass
 + yielded: \forall z\;[(R(z) | ~AR(z))]
     - pattern subclass
 + yielded: \forall z\;[(~R(z) | TR(z) | PR(z) | AR(z))]
     - pattern subclass

Axiom: \forall x\;[(~TR(x) | (~PR(x) & ~AR(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((~TR(z) | ~PR(z)) & (~TR(z) | ~AR(z)))]
 + yielded: \forall z\;[(~TR(z) | ~PR(z))]
     - pattern disjoint_classes
 + yielded: \forall z\;[(~TR(z) | ~AR(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[(~PR(x) | ~AR(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~PR(z) | ~AR(z))]
 + yielded: \forall z\;[(~PR(z) | ~AR(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~POB(x) | APO(x) | NAPO(x)) & (~(APO(x) | NAPO(x)) | POB(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((POB(z) | ~APO(z)) & (POB(z) | ~NAPO(z)) & (~POB(z) | APO(z) | NAPO(z)))]
 + yielded: \forall z\;[(POB(z) | ~APO(z))]
     - pattern subclass
 + yielded: \forall z\;[(POB(z) | ~NAPO(z))]
     - pattern subclass
 + yielded: \forall z\;[(~POB(z) | APO(z) | NAPO(z))]
     - pattern subclass

Axiom: \forall x\;[(~APO(x) | ~NAPO(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~APO(z) | ~NAPO(z))]
 + yielded: \forall z\;[(~APO(z) | ~NAPO(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~NPOB(x) | MOB(x) | SOB(x)) & (~(MOB(x) | SOB(x)) | NPOB(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((NPOB(z) | ~MOB(z)) & (NPOB(z) | ~SOB(z)) & (~NPOB(z) | MOB(z) | SOB(z)))]
 + yielded: \forall z\;[(NPOB(z) | ~MOB(z))]
     - pattern subclass
 + yielded: \forall z\;[(NPOB(z) | ~SOB(z))]
     - pattern subclass
 + yielded: \forall z\;[(~NPOB(z) | MOB(z) | SOB(z))]
     - pattern subclass

Axiom: \forall x\;[(~MOB(x) | ~SOB(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~MOB(z) | ~SOB(z))]
 + yielded: \forall z\;[(~MOB(z) | ~SOB(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~SOB(x) | ASO(x) | NASO(x)) & (~(ASO(x) | NASO(x)) | SOB(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((SOB(z) | ~ASO(z)) & (SOB(z) | ~NASO(z)) & (~SOB(z) | ASO(z) | NASO(z)))]
 + yielded: \forall z\;[(SOB(z) | ~ASO(z))]
     - pattern subclass
 + yielded: \forall z\;[(SOB(z) | ~NASO(z))]
     - pattern subclass
 + yielded: \forall z\;[(~SOB(z) | ASO(z) | NASO(z))]
     - pattern subclass

Axiom: \forall x\;[(~ASO(x) | ~NASO(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~ASO(z) | ~NASO(z))]
 + yielded: \forall z\;[(~ASO(z) | ~NASO(z))]
     - pattern disjoint_classes

Axiom: \forall x\;[((~ASO(x) | SAG(x) | SC(x)) & (~(SAG(x) | SC(x)) | ASO(x)))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[((ASO(z) | ~SAG(z)) & (ASO(z) | ~SC(z)) & (~ASO(z) | SAG(z) | SC(z)))]
 + yielded: \forall z\;[(ASO(z) | ~SAG(z))]
     - pattern subclass
 + yielded: \forall z\;[(ASO(z) | ~SC(z))]
     - pattern subclass
 + yielded: \forall z\;[(~ASO(z) | SAG(z) | SC(z))]
     - pattern subclass

Axiom: \forall x\;[(~SAG(x) | ~SC(x))] from http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif
FF-PCNF: \forall z\;[(~SAG(z) | ~SC(z))]
 + yielded: \forall z\;[(~SAG(z) | ~SC(z))]
     - pattern disjoint_classes

2021-03-21 17:41:57,452 macleod.dl.owl                 INFO     Reduced 25 pairs to 12 sets of disjoint classes
2021-03-21 17:41:57,452 macleod.dl.owl                 INFO     Found equivalent classes: PT and  ['ED', 'PD', 'Q', 'AB'] 
2021-03-21 17:41:57,452 macleod.dl.owl                 INFO     Found equivalent classes: ED and  ['PED', 'NPED', 'AS'] 
2021-03-21 17:41:57,452 macleod.dl.owl                 INFO     Found equivalent classes: PD and  ['EV', 'STV'] 
2021-03-21 17:41:57,452 macleod.dl.owl                 INFO     Found equivalent classes: Q and  ['TQ', 'PQ', 'AQ'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: PED and  ['M', 'F', 'POB'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: EV and  ['ACH', 'ACC'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: STV and  ['ST', 'PRO'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: R and  ['TR', 'PR', 'AR'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: POB and  ['APO', 'NAPO'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: NPOB and  ['MOB', 'SOB'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: SOB and  ['ASO', 'NASO'] 
2021-03-21 17:41:57,453 macleod.dl.owl                 INFO     Found equivalent classes: ASO and  ['SAG', 'SC'] 

-- Translation --

<Ontology xmlns="http://www.w3.org/2002/07/owl#" ontologyIRI="http://colore.oor.net/dolce_time_mereology/dolce_time_mereology.owl" versionIRI="http://colore.oor.net/dolce_time_mereology/dolce_time_mereology.owl" xml:base="http://colore.oor.net/dolce_time_mereology/dolce_time_mereology.owl#">
            <Prefix IRI="http://colore.oor.net/dolce_time_mereology/dolce_time_mereology.owl#" name=""></Prefix>
            <Prefix IRI="http://www.w3.org/2002/07/owl#" name="owl"></Prefix>
            <Prefix IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#" name="rdf"></Prefix>
            <Prefix IRI="http://www.w3.org/XML/1998/namespace" name="xml"></Prefix>
            <Prefix IRI="http://www.w3.org/2001/XMLSchema#" name="xsd"></Prefix>
            <Prefix IRI="http://www.w3.org/2000/01/rdf-schema#" name="rdfs"></Prefix>
        <Declaration><Class IRI="T"></Class></Declaration><Declaration><ObjectProperty IRI="P"></ObjectProperty></Declaration><SubClassOf><Class IRI="T"></Class><ObjectAllValuesFrom><ObjectProperty IRI="P"></ObjectProperty><Class IRI="T"></Class></ObjectAllValuesFrom></SubClassOf><Declaration><ObjectProperty IRI="="></ObjectProperty></Declaration><Declaration><ObjectProperty IRI="O"></ObjectProperty></Declaration><Declaration><ObjectProperty IRI="DJ"></ObjectProperty></Declaration><Declaration><ObjectProperty IRI="PP"></ObjectProperty></Declaration><Declaration><ObjectProperty IRI="U"></ObjectProperty></Declaration><Declaration><Class IRI="AtP"></Class></Declaration><Declaration><Class IRI="ED"></Class></Declaration><Declaration><Class IRI="PD"></Class></Declaration><Declaration><Class IRI="Q"></Class></Declaration><Declaration><Class IRI="AB"></Class></Declaration><Declaration><Class IRI="PT"></Class></Declaration><Declaration><Class IRI="PED"></Class></Declaration><Declaration><Class IRI="NPED"></Class></Declaration><Declaration><Class IRI="AS"></Class></Declaration><Declaration><Class IRI="EV"></Class></Declaration><Declaration><Class IRI="STV"></Class></Declaration><Declaration><Class IRI="TQ"></Class></Declaration><Declaration><Class IRI="PQ"></Class></Declaration><Declaration><Class IRI="AQ"></Class></Declaration><Declaration><Class IRI="R"></Class></Declaration><Declaration><Class IRI="M"></Class></Declaration><Declaration><Class IRI="F"></Class></Declaration><Declaration><Class IRI="POB"></Class></Declaration><Declaration><Class IRI="NPOB"></Class></Declaration><Declaration><Class IRI="ACH"></Class></Declaration><Declaration><Class IRI="ACC"></Class></Declaration><Declaration><Class IRI="ST"></Class></Declaration><Declaration><Class IRI="PRO"></Class></Declaration><Declaration><Class IRI="TL"></Class></Declaration><Declaration><Class IRI="SL"></Class></Declaration><Declaration><Class IRI="TR"></Class></Declaration><Declaration><Class IRI="PR"></Class></Declaration><Declaration><Class IRI="AR"></Class></Declaration><Declaration><Class IRI="APO"></Class></Declaration><Declaration><Class IRI="NAPO"></Class></Declaration><Declaration><Class IRI="MOB"></Class></Declaration><Declaration><Class IRI="SOB"></Class></Declaration><Declaration><Class IRI="S"></Class></Declaration><Declaration><Class IRI="ASO"></Class></Declaration><Declaration><Class IRI="NASO"></Class></Declaration><Declaration><Class IRI="SAG"></Class></Declaration><Declaration><Class IRI="SC"></Class></Declaration><DisjointClasses><Class IRI="TR"></Class><Class IRI="AR"></Class><Class IRI="PR"></Class></DisjointClasses><DisjointClasses><Class IRI="PQ"></Class><Class IRI="TQ"></Class><Class IRI="AQ"></Class></DisjointClasses><DisjointClasses><Class IRI="F"></Class><Class IRI="POB"></Class><Class IRI="M"></Class></DisjointClasses><DisjointClasses><Class IRI="PD"></Class><Class IRI="ED"></Class><Class IRI="Q"></Class><Class IRI="AB"></Class></DisjointClasses><DisjointClasses><Class IRI="PED"></Class><Class IRI="NPED"></Class><Class IRI="AS"></Class></DisjointClasses><DisjointClasses><Class IRI="NASO"></Class><Class IRI="ASO"></Class></DisjointClasses><DisjointClasses><Class IRI="ACH"></Class><Class IRI="ACC"></Class></DisjointClasses><DisjointClasses><Class IRI="ST"></Class><Class IRI="PRO"></Class></DisjointClasses><DisjointClasses><Class IRI="SAG"></Class><Class IRI="SC"></Class></DisjointClasses><DisjointClasses><Class IRI="EV"></Class><Class IRI="STV"></Class></DisjointClasses><DisjointClasses><Class IRI="SOB"></Class><Class IRI="MOB"></Class></DisjointClasses><DisjointClasses><Class IRI="APO"></Class><Class IRI="NAPO"></Class></DisjointClasses><EquivalentClasses><Class IRI="PT"></Class><ObjectUnionOf><Class IRI="ED"></Class><Class IRI="PD"></Class><Class IRI="Q"></Class><Class IRI="AB"></Class></ObjectUnionOf></EquivalentClasses><EquivalentClasses><Class IRI="ED"></Class><ObjectUnionOf><Class IRI="PED"></Class><Class IRI="NPED"></Class><Class IRI="AS"></Class></ObjectUnionOf></EquivalentClasses><EquivalentClasses><Class IRI="PD"></Class><ObjectUnionOf><Class IRI="EV"></Class><Class IRI="STV"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="PD"></Class><Class IRI="EV"></Class><Class IRI="STV"></Class></DisjointUnion><EquivalentClasses><Class IRI="Q"></Class><ObjectUnionOf><Class IRI="TQ"></Class><Class IRI="PQ"></Class><Class IRI="AQ"></Class></ObjectUnionOf></EquivalentClasses><EquivalentClasses><Class IRI="PED"></Class><ObjectUnionOf><Class IRI="M"></Class><Class IRI="F"></Class><Class IRI="POB"></Class></ObjectUnionOf></EquivalentClasses><EquivalentClasses><Class IRI="EV"></Class><ObjectUnionOf><Class IRI="ACH"></Class><Class IRI="ACC"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="EV"></Class><Class IRI="ACH"></Class><Class IRI="ACC"></Class></DisjointUnion><EquivalentClasses><Class IRI="STV"></Class><ObjectUnionOf><Class IRI="ST"></Class><Class IRI="PRO"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="STV"></Class><Class IRI="ST"></Class><Class IRI="PRO"></Class></DisjointUnion><EquivalentClasses><Class IRI="R"></Class><ObjectUnionOf><Class IRI="TR"></Class><Class IRI="PR"></Class><Class IRI="AR"></Class></ObjectUnionOf></EquivalentClasses><EquivalentClasses><Class IRI="POB"></Class><ObjectUnionOf><Class IRI="APO"></Class><Class IRI="NAPO"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="POB"></Class><Class IRI="APO"></Class><Class IRI="NAPO"></Class></DisjointUnion><EquivalentClasses><Class IRI="NPOB"></Class><ObjectUnionOf><Class IRI="MOB"></Class><Class IRI="SOB"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="NPOB"></Class><Class IRI="MOB"></Class><Class IRI="SOB"></Class></DisjointUnion><EquivalentClasses><Class IRI="SOB"></Class><ObjectUnionOf><Class IRI="ASO"></Class><Class IRI="NASO"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="SOB"></Class><Class IRI="ASO"></Class><Class IRI="NASO"></Class></DisjointUnion><EquivalentClasses><Class IRI="ASO"></Class><ObjectUnionOf><Class IRI="SAG"></Class><Class IRI="SC"></Class></ObjectUnionOf></EquivalentClasses><DisjointUnion><Class IRI="ASO"></Class><Class IRI="SAG"></Class><Class IRI="SC"></Class></DisjointUnion><SubClassOf><Class IRI="AQ"></Class><Class IRI="Q"></Class></SubClassOf><SubClassOf><Class IRI="T"></Class><Class IRI="TR"></Class></SubClassOf><SubClassOf><Class IRI="ACH"></Class><Class IRI="EV"></Class></SubClassOf><SubClassOf><Class IRI="APO"></Class><Class IRI="POB"></Class></SubClassOf><SubClassOf><Class IRI="NPOB"></Class><Class IRI="NPED"></Class></SubClassOf><SubClassOf><Class IRI="MOB"></Class><Class IRI="NPOB"></Class></SubClassOf><SubClassOf><Class IRI="TQ"></Class><Class IRI="Q"></Class></SubClassOf><SubClassOf><Class IRI="PD"></Class><Class IRI="PT"></Class></SubClassOf><SubClassOf><Class IRI="SC"></Class><Class IRI="ASO"></Class></SubClassOf><SubClassOf><Class IRI="TL"></Class><Class IRI="TQ"></Class></SubClassOf><SubClassOf><Class IRI="AR"></Class><Class IRI="R"></Class></SubClassOf><SubClassOf><Class IRI="PRO"></Class><Class IRI="STV"></Class></SubClassOf><SubClassOf><Class IRI="SOB"></Class><Class IRI="NPOB"></Class></SubClassOf><SubClassOf><Class IRI="NPED"></Class><Class IRI="ED"></Class></SubClassOf><SubClassOf><Class IRI="TR"></Class><Class IRI="R"></Class></SubClassOf><SubClassOf><Class IRI="NASO"></Class><Class IRI="SOB"></Class></SubClassOf><SubClassOf><Class IRI="AB"></Class><Class IRI="PT"></Class></SubClassOf><SubClassOf><Class IRI="ACC"></Class><Class IRI="EV"></Class></SubClassOf><SubClassOf><Class IRI="ASO"></Class><Class IRI="SOB"></Class></SubClassOf><SubClassOf><Class IRI="M"></Class><Class IRI="PED"></Class></SubClassOf><SubClassOf><Class IRI="F"></Class><Class IRI="PED"></Class></SubClassOf><SubClassOf><Class IRI="PR"></Class><Class IRI="R"></Class></SubClassOf><SubClassOf><Class IRI="POB"></Class><Class IRI="PED"></Class></SubClassOf><SubClassOf><Class IRI="R"></Class><Class IRI="AB"></Class></SubClassOf><SubClassOf><Class IRI="EV"></Class><Class IRI="PD"></Class></SubClassOf><SubClassOf><Class IRI="PQ"></Class><Class IRI="Q"></Class></SubClassOf><SubClassOf><Class IRI="ED"></Class><Class IRI="PT"></Class></SubClassOf><SubClassOf><Class IRI="AS"></Class><Class IRI="ED"></Class></SubClassOf><SubClassOf><Class IRI="ST"></Class><Class IRI="STV"></Class></SubClassOf><SubClassOf><Class IRI="NAPO"></Class><Class IRI="POB"></Class></SubClassOf><SubClassOf><Class IRI="SL"></Class><Class IRI="PQ"></Class></SubClassOf><SubClassOf><Class IRI="SAG"></Class><Class IRI="ASO"></Class></SubClassOf><SubClassOf><Class IRI="S"></Class><Class IRI="PR"></Class></SubClassOf><SubClassOf><Class IRI="STV"></Class><Class IRI="PD"></Class></SubClassOf><SubClassOf><Class IRI="Q"></Class><Class IRI="PT"></Class></SubClassOf><SubClassOf><Class IRI="PED"></Class><Class IRI="ED"></Class></SubClassOf></Ontology>
2021-03-21 17:41:57,454 macleod.Ontology               INFO     Approximating C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\dolce_time_mereology.clif as an OWL ontology
2021-03-21 17:41:57,464 macleod.scripts.parser         INFO     Produced OWL file C:\Users\torsten\GitHub\colore\ontologies\dolce_time_mereology\owl\dolce_time_mereology.all.owl
