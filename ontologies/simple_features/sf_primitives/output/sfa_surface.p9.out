============================== Prover9 ===============================
Prover9 (32) version Oct-2007, Oct 2007.
Process 11768 was started by shirly on DESKTOP-OG7RO9F,
Wed Nov  7 15:56:08 2018
The command was "/cygdrive/d/Shirly/Reasoning/prover9-bin/prover9 -t1000 -f D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\min_max_dim.p9 D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\curve.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_surface.p9 D:\colore-testbed\ontologies\multidim_space_cont\conversions\cont_basic.p9 D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\areal_region.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9 D:\colore-testbed\ontologies\multidim_space_codi\conversions\codi_basic.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_geometry.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))).
(all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> s(x12) & -zex(x12) & (all x11 (s(x11) -> leq(x11,x12))))).
(all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & -zex(x21) -> leq(x22,x21))))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\curve.p9


formulas(sos).
(all x12 (curve(x12) <-> s(x12) & -zex(x12) & -mindim(x12) & (all x11 (mindim(x11) <-> covers(x12,x11))))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x12 all x11 (leq(x12,x11) -> s(x12))).
(all x22 all x21 (leq(x22,x21) -> s(x21))).
(all x31 (zex(x31) -> s(x31))).
(all x41 (s(x41) -> leq(x41,x41))).
(all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))).
(all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)).
(all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_surface.p9


formulas(sos).
(all x2 (sfa_surface(x2) <-> arealregion(x2))).
(all x3 (sfa_surface(x3) -> sfa_geometry(x3))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_cont\conversions\cont_basic.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))).
(all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)).
(all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))).
(all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))).
(all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\areal_region.p9


formulas(sos).
(all x12 (arealregion(x12) <-> s(x12) & -zex(x12) & -mindim(x12) & (all x11 (curve(x11) <-> covers(x12,x11))))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_codi\conversions\codi_basic.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> leq(x12,x11))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_geometry.p9


formulas(sos).
(all x2 (sfa_geometry(x2) <-> s(x2))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 1000).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))) # label(non_clause).  [assumption].
2 (all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
3 (all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].
4 (all x12 (maxdim(x12) <-> s(x12) & -zex(x12) & (all x11 (s(x11) -> leq(x11,x12))))) # label(non_clause).  [assumption].
5 (all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & -zex(x21) -> leq(x22,x21))))) # label(non_clause).  [assumption].
6 (all x12 (curve(x12) <-> s(x12) & -zex(x12) & -mindim(x12) & (all x11 (mindim(x11) <-> covers(x12,x11))))) # label(non_clause).  [assumption].
7 (all x12 all x11 (leq(x12,x11) -> s(x12))) # label(non_clause).  [assumption].
8 (all x22 all x21 (leq(x22,x21) -> s(x21))) # label(non_clause).  [assumption].
9 (all x31 (zex(x31) -> s(x31))) # label(non_clause).  [assumption].
10 (all x41 (s(x41) -> leq(x41,x41))) # label(non_clause).  [assumption].
11 (all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))) # label(non_clause).  [assumption].
12 (all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)) # label(non_clause).  [assumption].
13 (all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))) # label(non_clause).  [assumption].
14 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
15 (all x2 (sfa_surface(x2) <-> arealregion(x2))) # label(non_clause).  [assumption].
16 (all x3 (sfa_surface(x3) -> sfa_geometry(x3))) # label(non_clause).  [assumption].
17 (all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))) # label(non_clause).  [assumption].
18 (all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)) # label(non_clause).  [assumption].
19 (all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))) # label(non_clause).  [assumption].
20 (all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))) # label(non_clause).  [assumption].
21 (all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)) # label(non_clause).  [assumption].
22 (all x12 (arealregion(x12) <-> s(x12) & -zex(x12) & -mindim(x12) & (all x11 (curve(x11) <-> covers(x12,x11))))) # label(non_clause).  [assumption].
23 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
24 (all x12 all x11 (cont(x12,x11) -> leq(x12,x11))) # label(non_clause).  [assumption].
25 (all x2 (sfa_geometry(x2) <-> s(x2))) # label(non_clause).  [assumption].
26 (all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-gt(x,y) | lt(y,x).  [clausify(1)].
gt(x,y) | -lt(y,x).  [clausify(1)].
-geq(x,y) | leq(y,x).  [clausify(2)].
geq(x,y) | -leq(y,x).  [clausify(2)].
-lt(x,y) | leq(x,y).  [clausify(3)].
-lt(x,y) | -eqdim(x,y).  [clausify(3)].
lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(3)].
-maxdim(x) | s(x).  [clausify(4)].
-maxdim(x) | -zex(x).  [clausify(4)].
-maxdim(x) | -s(y) | leq(y,x).  [clausify(4)].
maxdim(x) | -s(x) | zex(x) | s(f1(x)).  [clausify(4)].
maxdim(x) | -s(x) | zex(x) | -leq(f1(x),x).  [clausify(4)].
-mindim(x) | s(x).  [clausify(5)].
-mindim(x) | -zex(x).  [clausify(5)].
-mindim(x) | -s(y) | zex(y) | leq(x,y).  [clausify(5)].
mindim(x) | -s(x) | zex(x) | s(f2(x)).  [clausify(5)].
mindim(x) | -s(x) | zex(x) | -zex(f2(x)).  [clausify(5)].
mindim(x) | -s(x) | zex(x) | -leq(x,f2(x)).  [clausify(5)].
-curve(x) | s(x).  [clausify(6)].
-curve(x) | -zex(x).  [clausify(6)].
-curve(x) | -mindim(x).  [clausify(6)].
-curve(x) | -mindim(y) | covers(x,y).  [clausify(6)].
-curve(x) | mindim(y) | -covers(x,y).  [clausify(6)].
curve(x) | -s(x) | zex(x) | mindim(x) | mindim(f3(x)) | covers(x,f3(x)).  [clausify(6)].
curve(x) | -s(x) | zex(x) | mindim(x) | -mindim(f3(x)) | -covers(x,f3(x)).  [clausify(6)].
-leq(x,y) | s(x).  [clausify(7)].
-leq(x,y) | s(y).  [clausify(8)].
-zex(x) | s(x).  [clausify(9)].
-s(x) | leq(x,x).  [clausify(10)].
-leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(11)].
-zex(x) | -zex(y) | y = x.  [clausify(12)].
-zex(x) | -s(y) | leq(x,y).  [clausify(13)].
mindim(c1).  [clausify(14)].
-sfa_surface(x) | arealregion(x).  [clausify(15)].
sfa_surface(x) | -arealregion(x).  [clausify(15)].
-sfa_surface(x) | sfa_geometry(x).  [clausify(16)].
-s(x) | zex(x) | cont(x,x).  [clausify(17)].
s(x) | -cont(x,x).  [clausify(17)].
-zex(x) | -cont(x,x).  [clausify(17)].
-cont(x,y) | -cont(y,x) | y = x.  [clausify(18)].
-cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(19)].
-zex(x) | s(x).  [clausify(20)].
-zex(x) | -cont(y,x).  [clausify(20)].
-zex(x) | -cont(x,y).  [clausify(20)].
-zex(x) | -zex(y) | y = x.  [clausify(21)].
-arealregion(x) | s(x).  [clausify(22)].
-arealregion(x) | -zex(x).  [clausify(22)].
-arealregion(x) | -mindim(x).  [clausify(22)].
-arealregion(x) | -curve(y) | covers(x,y).  [clausify(22)].
-arealregion(x) | curve(y) | -covers(x,y).  [clausify(22)].
arealregion(x) | -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)).  [clausify(22)].
arealregion(x) | -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)).  [clausify(22)].
-eqdim(x,y) | leq(x,y).  [clausify(23)].
-eqdim(x,y) | leq(y,x).  [clausify(23)].
eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(23)].
-cont(x,y) | leq(x,y).  [clausify(24)].
-sfa_geometry(x) | s(x).  [clausify(25)].
sfa_geometry(x) | -s(x).  [clausify(25)].
-covers(x,y) | lt(y,x).  [clausify(26)].
-covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(26)].
covers(x,y) | -lt(y,x) | s(f5(x,y)).  [clausify(26)].
covers(x,y) | -lt(y,x) | lt(y,f5(x,y)).  [clausify(26)].
covers(x,y) | -lt(y,x) | lt(f5(x,y),x).  [clausify(26)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating gt/2
27 gt(x,y) | -lt(y,x).  [clausify(1)].
28 -gt(x,y) | lt(y,x).  [clausify(1)].

Eliminating geq/2
29 geq(x,y) | -leq(y,x).  [clausify(2)].
30 -geq(x,y) | leq(y,x).  [clausify(2)].

Eliminating eqdim/2
31 lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(3)].
32 -lt(x,y) | -eqdim(x,y).  [clausify(3)].
33 -eqdim(x,y) | leq(x,y).  [clausify(23)].
34 -eqdim(x,y) | leq(y,x).  [clausify(23)].
Derived: leq(x,y) | lt(y,x) | -leq(y,x).  [resolve(34,a,31,c)].
35 eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(23)].
Derived: -leq(x,y) | -leq(y,x) | -lt(x,y).  [resolve(35,a,32,b)].

Eliminating maxdim/1
36 maxdim(x) | -s(x) | zex(x) | s(f1(x)).  [clausify(4)].
37 -maxdim(x) | s(x).  [clausify(4)].
38 -maxdim(x) | -zex(x).  [clausify(4)].
39 -maxdim(x) | -s(y) | leq(y,x).  [clausify(4)].
Derived: -s(x) | zex(x) | s(f1(x)) | -s(y) | leq(y,x).  [resolve(36,a,39,a)].
40 maxdim(x) | -s(x) | zex(x) | -leq(f1(x),x).  [clausify(4)].
Derived: -s(x) | zex(x) | -leq(f1(x),x) | -s(y) | leq(y,x).  [resolve(40,a,39,a)].

Eliminating sfa_surface/1
41 sfa_surface(x) | -arealregion(x).  [clausify(15)].
42 -sfa_surface(x) | arealregion(x).  [clausify(15)].
43 -sfa_surface(x) | sfa_geometry(x).  [clausify(16)].
Derived: sfa_geometry(x) | -arealregion(x).  [resolve(43,a,41,a)].

Eliminating arealregion/1
44 arealregion(x) | -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)).  [clausify(22)].
45 -arealregion(x) | s(x).  [clausify(22)].
46 -arealregion(x) | -zex(x).  [clausify(22)].
47 -arealregion(x) | -mindim(x).  [clausify(22)].
48 -arealregion(x) | -curve(y) | covers(x,y).  [clausify(22)].
49 -arealregion(x) | curve(y) | -covers(x,y).  [clausify(22)].
Derived: -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)) | -curve(y) | covers(x,y).  [resolve(44,a,48,a)].
Derived: -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)) | curve(y) | -covers(x,y).  [resolve(44,a,49,a)].
50 arealregion(x) | -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)).  [clausify(22)].
Derived: -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)) | -curve(y) | covers(x,y).  [resolve(50,a,48,a)].
Derived: -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)) | curve(y) | -covers(x,y).  [resolve(50,a,49,a)].
51 sfa_geometry(x) | -arealregion(x).  [resolve(43,a,41,a)].
Derived: sfa_geometry(x) | -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)).  [resolve(51,b,44,a)].
Derived: sfa_geometry(x) | -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)).  [resolve(51,b,50,a)].

Eliminating sfa_geometry/1
52 sfa_geometry(x) | -s(x).  [clausify(25)].
53 -sfa_geometry(x) | s(x).  [clausify(25)].
54 sfa_geometry(x) | -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)).  [resolve(51,b,44,a)].
55 sfa_geometry(x) | -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)).  [resolve(51,b,50,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, s, zex, mindim, curve, covers, leq, cont, lt ]).
Function symbol precedence:  function_order([ c1, f5, f1, f2, f3, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
    % set(paramodulation) -> set(back_demod).
  % set(binary_resolution).  % (non-Horn)
  % set(positive_inference). % (non-Horn)
    % set(positive_inference) -> assign(literal_selection, max_negative).
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(back_unit_deletion).  % (non-Horn)
    % set(back_unit_deletion) -> set(unit_deletion).

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
56 -lt(x,y) | leq(x,y).  [clausify(3)].
57 -mindim(x) | s(x).  [clausify(5)].
58 -mindim(x) | -zex(x).  [clausify(5)].
59 -mindim(x) | -s(y) | zex(y) | leq(x,y).  [clausify(5)].
60 mindim(x) | -s(x) | zex(x) | s(f2(x)).  [clausify(5)].
61 mindim(x) | -s(x) | zex(x) | -zex(f2(x)).  [clausify(5)].
62 mindim(x) | -s(x) | zex(x) | -leq(x,f2(x)).  [clausify(5)].
63 -curve(x) | s(x).  [clausify(6)].
64 -curve(x) | -zex(x).  [clausify(6)].
65 -curve(x) | -mindim(x).  [clausify(6)].
66 -curve(x) | -mindim(y) | covers(x,y).  [clausify(6)].
67 -curve(x) | mindim(y) | -covers(x,y).  [clausify(6)].
68 curve(x) | -s(x) | zex(x) | mindim(x) | mindim(f3(x)) | covers(x,f3(x)).  [clausify(6)].
69 curve(x) | -s(x) | zex(x) | mindim(x) | -mindim(f3(x)) | -covers(x,f3(x)).  [clausify(6)].
70 -leq(x,y) | s(x).  [clausify(7)].
71 -leq(x,y) | s(y).  [clausify(8)].
72 -zex(x) | s(x).  [clausify(9)].
73 -s(x) | leq(x,x).  [clausify(10)].
74 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(11)].
75 -zex(x) | -zex(y) | y = x.  [clausify(12)].
76 -zex(x) | -s(y) | leq(x,y).  [clausify(13)].
77 mindim(c1).  [clausify(14)].
78 -s(x) | zex(x) | cont(x,x).  [clausify(17)].
79 s(x) | -cont(x,x).  [clausify(17)].
81 -cont(x,y) | -cont(y,x) | y = x.  [clausify(18)].
82 -cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(19)].
83 -zex(x) | -cont(y,x).  [clausify(20)].
84 -zex(x) | -cont(x,y).  [clausify(20)].
85 -cont(x,y) | leq(x,y).  [clausify(24)].
86 -covers(x,y) | lt(y,x).  [clausify(26)].
87 -covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(26)].
88 covers(x,y) | -lt(y,x) | s(f5(x,y)).  [clausify(26)].
89 covers(x,y) | -lt(y,x) | lt(y,f5(x,y)).  [clausify(26)].
90 covers(x,y) | -lt(y,x) | lt(f5(x,y),x).  [clausify(26)].
91 leq(x,y) | lt(y,x) | -leq(y,x).  [resolve(34,a,31,c)].
92 -leq(x,y) | -leq(y,x) | -lt(x,y).  [resolve(35,a,32,b)].
93 -s(x) | zex(x) | s(f1(x)) | -s(y) | leq(y,x).  [resolve(36,a,39,a)].
94 -s(x) | zex(x) | -leq(f1(x),x) | -s(y) | leq(y,x).  [resolve(40,a,39,a)].
95 -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)) | -curve(y) | covers(x,y).  [resolve(44,a,48,a)].
96 -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)) | curve(y) | -covers(x,y).  [resolve(44,a,49,a)].
97 -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)) | -curve(y) | covers(x,y).  [resolve(50,a,48,a)].
98 -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)) | curve(y) | -covers(x,y).  [resolve(50,a,49,a)].
99 -covers(x,x) | -s(x) | -lt(x,x).  [factor(87,c,d)].
100 -leq(x,x) | -lt(x,x).  [factor(92,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=6): 56 -lt(x,y) | leq(x,y).  [clausify(3)].

given #2 (I,wt=4): 57 -mindim(x) | s(x).  [clausify(5)].

given #3 (I,wt=4): 58 -mindim(x) | -zex(x).  [clausify(5)].

given #4 (I,wt=9): 59 -mindim(x) | -s(y) | zex(y) | leq(x,y).  [clausify(5)].

given #5 (I,wt=9): 60 mindim(x) | -s(x) | zex(x) | s(f2(x)).  [clausify(5)].

given #6 (I,wt=9): 61 mindim(x) | -s(x) | zex(x) | -zex(f2(x)).  [clausify(5)].

given #7 (I,wt=10): 62 mindim(x) | -s(x) | zex(x) | -leq(x,f2(x)).  [clausify(5)].

given #8 (I,wt=4): 63 -curve(x) | s(x).  [clausify(6)].

given #9 (I,wt=4): 64 -curve(x) | -zex(x).  [clausify(6)].

given #10 (I,wt=4): 65 -curve(x) | -mindim(x).  [clausify(6)].

given #11 (I,wt=7): 66 -curve(x) | -mindim(y) | covers(x,y).  [clausify(6)].

given #12 (I,wt=7): 67 -curve(x) | mindim(y) | -covers(x,y).  [clausify(6)].

given #13 (I,wt=15): 68 curve(x) | -s(x) | zex(x) | mindim(x) | mindim(f3(x)) | covers(x,f3(x)).  [clausify(6)].

given #14 (I,wt=15): 69 curve(x) | -s(x) | zex(x) | mindim(x) | -mindim(f3(x)) | -covers(x,f3(x)).  [clausify(6)].

given #15 (I,wt=5): 70 -leq(x,y) | s(x).  [clausify(7)].

given #16 (I,wt=5): 71 -leq(x,y) | s(y).  [clausify(8)].

given #17 (I,wt=4): 72 -zex(x) | s(x).  [clausify(9)].

given #18 (I,wt=5): 73 -s(x) | leq(x,x).  [clausify(10)].

given #19 (I,wt=9): 74 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(11)].

given #20 (I,wt=7): 75 -zex(x) | -zex(y) | y = x.  [clausify(12)].

given #21 (I,wt=7): 76 -zex(x) | -s(y) | leq(x,y).  [clausify(13)].

given #22 (I,wt=2): 77 mindim(c1).  [clausify(14)].

given #23 (I,wt=7): 78 -s(x) | zex(x) | cont(x,x).  [clausify(17)].

given #24 (I,wt=5): 79 s(x) | -cont(x,x).  [clausify(17)].

given #25 (I,wt=9): 81 -cont(x,y) | -cont(y,x) | y = x.  [clausify(18)].

given #26 (I,wt=9): 82 -cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(19)].

given #27 (I,wt=5): 83 -zex(x) | -cont(y,x).  [clausify(20)].

given #28 (I,wt=5): 84 -zex(x) | -cont(x,y).  [clausify(20)].

given #29 (I,wt=6): 85 -cont(x,y) | leq(x,y).  [clausify(24)].

given #30 (I,wt=6): 86 -covers(x,y) | lt(y,x).  [clausify(26)].

given #31 (I,wt=11): 87 -covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(26)].

given #32 (I,wt=10): 88 covers(x,y) | -lt(y,x) | s(f5(x,y)).  [clausify(26)].

given #33 (I,wt=11): 89 covers(x,y) | -lt(y,x) | lt(y,f5(x,y)).  [clausify(26)].

given #34 (I,wt=11): 90 covers(x,y) | -lt(y,x) | lt(f5(x,y),x).  [clausify(26)].

given #35 (I,wt=9): 91 leq(x,y) | lt(y,x) | -leq(y,x).  [resolve(34,a,31,c)].

given #36 (I,wt=9): 92 -leq(x,y) | -leq(y,x) | -lt(x,y).  [resolve(35,a,32,b)].

given #37 (I,wt=12): 93 -s(x) | zex(x) | s(f1(x)) | -s(y) | leq(y,x).  [resolve(36,a,39,a)].

given #38 (I,wt=13): 94 -s(x) | zex(x) | -leq(f1(x),x) | -s(y) | leq(y,x).  [resolve(40,a,39,a)].

given #39 (I,wt=18): 95 -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)) | -curve(y) | covers(x,y).  [resolve(44,a,48,a)].

given #40 (I,wt=18): 96 -s(x) | zex(x) | mindim(x) | curve(f4(x)) | covers(x,f4(x)) | curve(y) | -covers(x,y).  [resolve(44,a,49,a)].

given #41 (I,wt=18): 97 -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)) | -curve(y) | covers(x,y).  [resolve(50,a,48,a)].

given #42 (I,wt=18): 98 -s(x) | zex(x) | mindim(x) | -curve(f4(x)) | -covers(x,f4(x)) | curve(y) | -covers(x,y).  [resolve(50,a,49,a)].

given #43 (I,wt=8): 99 -covers(x,x) | -s(x) | -lt(x,x).  [factor(87,c,d)].

given #44 (I,wt=6): 100 -leq(x,x) | -lt(x,x).  [factor(92,a,b)].

given #45 (A,wt=7): 101 -s(x) | zex(x) | leq(c1,x).  [resolve(77,a,59,a)].

given #46 (F,wt=2): 102 -zex(c1).  [resolve(77,a,58,a)].

given #47 (F,wt=2): 104 -curve(c1).  [ur(65,b,77,a)].

given #48 (T,wt=2): 103 s(c1).  [resolve(77,a,57,a)].

given #49 (T,wt=3): 105 leq(c1,c1).  [resolve(103,a,101,a),unit_del(a,102)].

given #50 (T,wt=3): 107 cont(c1,c1).  [resolve(103,a,78,a),unit_del(a,102)].

given #51 (T,wt=8): 106 s(f1(c1)) | -s(x) | leq(x,c1).  [resolve(103,a,93,a),unit_del(a,102)].

given #52 (A,wt=3): 108 -lt(c1,c1).  [ur(100,a,105,a)].

given #53 (F,wt=3): 109 -covers(c1,c1).  [ur(86,b,108,a)].

============================== STATISTICS ============================

Given=53. Generated=90. Kept=54. proofs=0.
Usable=53. Sos=0. Demods=0. Limbo=0, Disabled=75. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=36. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=19. Nonunit_bsub_feature_tests=65.
Megabytes=0.10.
User_CPU=0.01, System_CPU=0.05, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

SEARCH FAILED

Exiting with failure.

------ process 11768 exit (sos_empty) ------

Process 11768 exit (sos_empty) Wed Nov  7 15:56:08 2018
============================= D:\Shirly\Reasoning\prover9-bin\prover9 ================================
execution finished: Wed Nov 07 15:56:10 2018
total CPU time used: 0
The command was "D:\Shirly\Reasoning\prover9-bin\prover9 -t1000 -f D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\min_max_dim.p9 D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\curve.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_surface.p9 D:\colore-testbed\ontologies\multidim_space_cont\conversions\cont_basic.p9 D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\areal_region.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9 D:\colore-testbed\ontologies\multidim_space_codi\conversions\codi_basic.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_geometry.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9"
Input read from 
============================ end of footer ===========================
