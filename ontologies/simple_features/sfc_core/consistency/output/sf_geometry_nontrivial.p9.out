============================== Prover9 ===============================
Prover9 (32) version Oct-2007, Oct 2007.
Process 5676 was started by shirly on DESKTOP-OG7RO9F,
Thu Nov  1 08:51:17 2018
The command was "/cygdrive/d/Shirly/Reasoning/prover9-bin/prover9 -t1000 -f D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sf_geometry.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\consistency\conversions\sf_geometry_nontrivial.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))).
(all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sf_geometry.p9


formulas(sos).
(all x2 (sf_geometry(x2) -> s(x2))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x12 all x11 (leq(x12,x11) -> s(x12))).
(all x22 all x21 (leq(x22,x21) -> s(x21))).
(all x31 (zex(x31) -> s(x31))).
(all x41 (s(x41) -> leq(x41,x41))).
(all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))).
(all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)).
(all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\simple_features\sf_primitives\consistency\conversions\sf_geometry_nontrivial.p9


formulas(sos).
(exists x2 s(x2)).
(exists x3 -s(x3)).
(exists x4 sf_geometry(x4)).
(exists x5 -sf_geometry(x5)).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 1000).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
2 (all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))) # label(non_clause).  [assumption].
3 (all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
4 (all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].
5 (all x2 (sf_geometry(x2) -> s(x2))) # label(non_clause).  [assumption].
6 (all x12 all x11 (leq(x12,x11) -> s(x12))) # label(non_clause).  [assumption].
7 (all x22 all x21 (leq(x22,x21) -> s(x21))) # label(non_clause).  [assumption].
8 (all x31 (zex(x31) -> s(x31))) # label(non_clause).  [assumption].
9 (all x41 (s(x41) -> leq(x41,x41))) # label(non_clause).  [assumption].
10 (all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))) # label(non_clause).  [assumption].
11 (all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)) # label(non_clause).  [assumption].
12 (all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))) # label(non_clause).  [assumption].
13 (exists x2 s(x2)) # label(non_clause).  [assumption].
14 (exists x3 -s(x3)) # label(non_clause).  [assumption].
15 (exists x4 sf_geometry(x4)) # label(non_clause).  [assumption].
16 (exists x5 -sf_geometry(x5)) # label(non_clause).  [assumption].
17 (all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-eqdim(x,y) | leq(x,y).  [clausify(1)].
-eqdim(x,y) | leq(y,x).  [clausify(1)].
eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(1)].
-gt(x,y) | lt(y,x).  [clausify(2)].
gt(x,y) | -lt(y,x).  [clausify(2)].
-geq(x,y) | leq(y,x).  [clausify(3)].
geq(x,y) | -leq(y,x).  [clausify(3)].
-lt(x,y) | leq(x,y).  [clausify(4)].
-lt(x,y) | -eqdim(x,y).  [clausify(4)].
lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(4)].
-sf_geometry(x) | s(x).  [clausify(5)].
-leq(x,y) | s(x).  [clausify(6)].
-leq(x,y) | s(y).  [clausify(7)].
-zex(x) | s(x).  [clausify(8)].
-s(x) | leq(x,x).  [clausify(9)].
-leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(10)].
-zex(x) | -zex(y) | y = x.  [clausify(11)].
-zex(x) | -s(y) | leq(x,y).  [clausify(12)].
s(c1).  [clausify(13)].
-s(c2).  [clausify(14)].
sf_geometry(c3).  [clausify(15)].
-sf_geometry(c4).  [clausify(16)].
-covers(x,y) | lt(y,x).  [clausify(17)].
-covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(17)].
covers(x,y) | -lt(y,x) | s(f1(x,y)).  [clausify(17)].
covers(x,y) | -lt(y,x) | lt(y,f1(x,y)).  [clausify(17)].
covers(x,y) | -lt(y,x) | lt(f1(x,y),x).  [clausify(17)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating eqdim/2
18 eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(1)].
19 -eqdim(x,y) | leq(x,y).  [clausify(1)].
20 -eqdim(x,y) | leq(y,x).  [clausify(1)].
21 -lt(x,y) | -eqdim(x,y).  [clausify(4)].
Derived: -lt(x,y) | -leq(x,y) | -leq(y,x).  [resolve(21,b,18,a)].
22 lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(4)].
Derived: lt(x,y) | -leq(x,y) | leq(y,x).  [resolve(22,c,20,a)].

Eliminating gt/2
23 gt(x,y) | -lt(y,x).  [clausify(2)].
24 -gt(x,y) | lt(y,x).  [clausify(2)].

Eliminating geq/2
25 geq(x,y) | -leq(y,x).  [clausify(3)].
26 -geq(x,y) | leq(y,x).  [clausify(3)].

Eliminating covers/2
27 covers(x,y) | -lt(y,x) | s(f1(x,y)).  [clausify(17)].
28 -covers(x,y) | lt(y,x).  [clausify(17)].
29 -covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(17)].
Derived: -lt(x,y) | s(f1(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(27,a,29,a)].
30 covers(x,y) | -lt(y,x) | lt(y,f1(x,y)).  [clausify(17)].
Derived: -lt(x,y) | lt(x,f1(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(30,a,29,a)].
31 covers(x,y) | -lt(y,x) | lt(f1(x,y),x).  [clausify(17)].
Derived: -lt(x,y) | lt(f1(y,x),y) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(31,a,29,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, s, zex, sf_geometry, lt, leq ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
    % set(paramodulation) -> set(back_demod).
  % set(binary_resolution).  % (non-Horn)
  % set(positive_inference). % (non-Horn)
    % set(positive_inference) -> assign(literal_selection, max_negative).
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(back_unit_deletion).  % (non-Horn)
    % set(back_unit_deletion) -> set(unit_deletion).

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
32 -lt(x,y) | leq(x,y).  [clausify(4)].
33 -sf_geometry(x) | s(x).  [clausify(5)].
34 -leq(x,y) | s(x).  [clausify(6)].
35 -leq(x,y) | s(y).  [clausify(7)].
36 -zex(x) | s(x).  [clausify(8)].
37 -s(x) | leq(x,x).  [clausify(9)].
38 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(10)].
39 -zex(x) | -zex(y) | y = x.  [clausify(11)].
40 -zex(x) | -s(y) | leq(x,y).  [clausify(12)].
41 s(c1).  [clausify(13)].
42 -s(c2).  [clausify(14)].
43 sf_geometry(c3).  [clausify(15)].
44 -sf_geometry(c4).  [clausify(16)].
45 -lt(x,y) | -leq(x,y) | -leq(y,x).  [resolve(21,b,18,a)].
46 lt(x,y) | -leq(x,y) | leq(y,x).  [resolve(22,c,20,a)].
47 -lt(x,y) | s(f1(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(27,a,29,a)].
48 -lt(x,y) | lt(x,f1(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(30,a,29,a)].
49 -lt(x,y) | lt(f1(y,x),y) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(31,a,29,a)].
50 -lt(x,x) | -leq(x,x).  [factor(45,b,c)].
51 -lt(x,y) | s(f1(y,x)) | -s(y) | -lt(y,y).  [factor(47,a,d)].
52 -lt(x,y) | s(f1(y,x)) | -s(x) | -lt(x,x).  [factor(47,a,e)].
53 -lt(x,x) | s(f1(x,x)) | -s(x).  [factor(47,d,e),merge(d)].
54 -lt(x,y) | lt(x,f1(y,x)) | -s(y) | -lt(y,y).  [factor(48,a,d)].
55 -lt(x,y) | lt(x,f1(y,x)) | -s(x) | -lt(x,x).  [factor(48,a,e)].
56 -lt(x,x) | lt(x,f1(x,x)) | -s(x).  [factor(48,d,e),merge(d)].
57 -lt(x,y) | lt(f1(y,x),y) | -s(y) | -lt(y,y).  [factor(49,a,d)].
58 -lt(x,y) | lt(f1(y,x),y) | -s(x) | -lt(x,x).  [factor(49,a,e)].
59 -lt(x,x) | lt(f1(x,x),x) | -s(x).  [factor(49,d,e),merge(d)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.06 seconds.

given #1 (I,wt=6): 32 -lt(x,y) | leq(x,y).  [clausify(4)].

given #2 (I,wt=4): 33 -sf_geometry(x) | s(x).  [clausify(5)].

given #3 (I,wt=5): 34 -leq(x,y) | s(x).  [clausify(6)].

given #4 (I,wt=5): 35 -leq(x,y) | s(y).  [clausify(7)].

given #5 (I,wt=4): 36 -zex(x) | s(x).  [clausify(8)].

given #6 (I,wt=5): 37 -s(x) | leq(x,x).  [clausify(9)].

given #7 (I,wt=9): 38 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(10)].

given #8 (I,wt=7): 39 -zex(x) | -zex(y) | y = x.  [clausify(11)].

given #9 (I,wt=7): 40 -zex(x) | -s(y) | leq(x,y).  [clausify(12)].

given #10 (I,wt=2): 41 s(c1).  [clausify(13)].

given #11 (I,wt=2): 42 -s(c2).  [clausify(14)].

given #12 (I,wt=2): 43 sf_geometry(c3).  [clausify(15)].

given #13 (I,wt=2): 44 -sf_geometry(c4).  [clausify(16)].

given #14 (I,wt=9): 45 -lt(x,y) | -leq(x,y) | -leq(y,x).  [resolve(21,b,18,a)].

given #15 (I,wt=9): 46 lt(x,y) | -leq(x,y) | leq(y,x).  [resolve(22,c,20,a)].

given #16 (I,wt=15): 47 -lt(x,y) | s(f1(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(27,a,29,a)].

given #17 (I,wt=16): 48 -lt(x,y) | lt(x,f1(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(30,a,29,a)].

given #18 (I,wt=16): 49 -lt(x,y) | lt(f1(y,x),y) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(31,a,29,a)].

given #19 (I,wt=6): 50 -lt(x,x) | -leq(x,x).  [factor(45,b,c)].

given #20 (I,wt=12): 51 -lt(x,y) | s(f1(y,x)) | -s(y) | -lt(y,y).  [factor(47,a,d)].

given #21 (I,wt=12): 52 -lt(x,y) | s(f1(y,x)) | -s(x) | -lt(x,x).  [factor(47,a,e)].

given #22 (I,wt=9): 53 -lt(x,x) | s(f1(x,x)) | -s(x).  [factor(47,d,e),merge(d)].

given #23 (I,wt=13): 54 -lt(x,y) | lt(x,f1(y,x)) | -s(y) | -lt(y,y).  [factor(48,a,d)].

given #24 (I,wt=13): 55 -lt(x,y) | lt(x,f1(y,x)) | -s(x) | -lt(x,x).  [factor(48,a,e)].

given #25 (I,wt=10): 56 -lt(x,x) | lt(x,f1(x,x)) | -s(x).  [factor(48,d,e),merge(d)].

given #26 (I,wt=13): 57 -lt(x,y) | lt(f1(y,x),y) | -s(y) | -lt(y,y).  [factor(49,a,d)].

given #27 (I,wt=13): 58 -lt(x,y) | lt(f1(y,x),y) | -s(x) | -lt(x,x).  [factor(49,a,e)].

given #28 (I,wt=10): 59 -lt(x,x) | lt(f1(x,x),x) | -s(x).  [factor(49,d,e),merge(d)].

given #29 (A,wt=3): 60 leq(c1,c1).  [resolve(41,a,37,a)].

given #30 (F,wt=2): 61 -zex(c2).  [ur(36,b,42,a)].

given #31 (F,wt=2): 64 -sf_geometry(c2).  [ur(33,b,42,a)].

given #32 (F,wt=3): 62 -leq(x,c2).  [ur(35,b,42,a)].

given #33 (F,wt=3): 63 -leq(c2,x).  [ur(34,b,42,a)].

given #34 (T,wt=2): 65 s(c3).  [resolve(43,a,33,a)].

given #35 (T,wt=3): 69 leq(c3,c3).  [resolve(65,a,37,a)].

given #36 (A,wt=3): 66 -lt(c1,c1).  [resolve(60,a,50,b)].

given #37 (F,wt=3): 67 -lt(x,c2).  [ur(32,b,62,a)].

given #38 (F,wt=3): 68 -lt(c2,x).  [ur(32,b,63,a)].

given #39 (F,wt=3): 70 -lt(c3,c3).  [resolve(69,a,50,b)].

============================== STATISTICS ============================

Given=39. Generated=79. Kept=39. proofs=0.
Usable=39. Sos=0. Demods=0. Limbo=0, Disabled=32. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=40. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=21. Nonunit_bsub_feature_tests=71.
Megabytes=0.06.
User_CPU=0.06, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

SEARCH FAILED

Exiting with failure.

------ process 5676 exit (sos_empty) ------

Process 5676 exit (sos_empty) Thu Nov  1 08:51:18 2018
============================= D:\Shirly\Reasoning\prover9-bin\prover9 ================================
execution finished: Thu Nov 01 08:51:19 2018
total CPU time used: 0
The command was "D:\Shirly\Reasoning\prover9-bin\prover9 -t1000 -f D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sf_geometry.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\consistency\conversions\sf_geometry_nontrivial.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9"
Input read from 
============================ end of footer ===========================
