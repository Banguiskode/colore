============================== Prover9 ===============================
Prover9 (32) version Oct-2007, Oct 2007.
Process 9060 was started by shirly on DESKTOP-OG7RO9F,
Wed Nov  7 15:40:55 2018
The command was "/cygdrive/d/Shirly/Reasoning/prover9-bin/prover9 -t1000 -f D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\point.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\min_max_dim.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_point.p9 D:\colore-testbed\ontologies\multidim_space_cont\conversions\cont_basic.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_geometry.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear.p9 D:\colore-testbed\ontologies\multidim_space_codi\conversions\codi_basic.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\point.p9


formulas(sos).
(all x12 (point(x12) <-> mindim(x12) & -zex(x12) & (all x11 (cont(x11,x12) -> x11 = x12)))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> s(x12) & -zex(x12) & (all x11 (s(x11) -> leq(x11,x12))))).
(all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & -zex(x21) -> leq(x22,x21))))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_point.p9


formulas(sos).
(all x2 (sfa_point(x2) <-> point(x2))).
(all x3 (sfa_point(x3) -> sfa_geometry(x3))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_cont\conversions\cont_basic.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))).
(all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)).
(all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))).
(all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))).
(all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x12 all x11 (leq(x12,x11) -> s(x12))).
(all x22 all x21 (leq(x22,x21) -> s(x21))).
(all x31 (zex(x31) -> s(x31))).
(all x41 (s(x41) -> leq(x41,x41))).
(all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))).
(all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)).
(all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_geometry.p9


formulas(sos).
(all x2 (sfa_geometry(x2) <-> s(x2))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_codi\conversions\codi_basic.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> leq(x12,x11))).
end_of_list.

% Reading from file D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))).
(all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 1000).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 (point(x12) <-> mindim(x12) & -zex(x12) & (all x11 (cont(x11,x12) -> x11 = x12)))) # label(non_clause).  [assumption].
2 (all x12 (maxdim(x12) <-> s(x12) & -zex(x12) & (all x11 (s(x11) -> leq(x11,x12))))) # label(non_clause).  [assumption].
3 (all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & -zex(x21) -> leq(x22,x21))))) # label(non_clause).  [assumption].
4 (all x2 (sfa_point(x2) <-> point(x2))) # label(non_clause).  [assumption].
5 (all x3 (sfa_point(x3) -> sfa_geometry(x3))) # label(non_clause).  [assumption].
6 (all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))) # label(non_clause).  [assumption].
7 (all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)) # label(non_clause).  [assumption].
8 (all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))) # label(non_clause).  [assumption].
9 (all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))) # label(non_clause).  [assumption].
10 (all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)) # label(non_clause).  [assumption].
11 (all x12 all x11 (leq(x12,x11) -> s(x12))) # label(non_clause).  [assumption].
12 (all x22 all x21 (leq(x22,x21) -> s(x21))) # label(non_clause).  [assumption].
13 (all x31 (zex(x31) -> s(x31))) # label(non_clause).  [assumption].
14 (all x41 (s(x41) -> leq(x41,x41))) # label(non_clause).  [assumption].
15 (all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))) # label(non_clause).  [assumption].
16 (all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)) # label(non_clause).  [assumption].
17 (all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))) # label(non_clause).  [assumption].
18 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
19 (all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))) # label(non_clause).  [assumption].
20 (all x2 (sfa_geometry(x2) <-> s(x2))) # label(non_clause).  [assumption].
21 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
22 (all x12 all x11 (cont(x12,x11) -> leq(x12,x11))) # label(non_clause).  [assumption].
23 (all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))) # label(non_clause).  [assumption].
24 (all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
25 (all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-point(x) | mindim(x).  [clausify(1)].
-point(x) | -zex(x).  [clausify(1)].
-point(x) | -cont(y,x) | y = x.  [clausify(1)].
point(x) | -mindim(x) | zex(x) | cont(f1(x),x).  [clausify(1)].
point(x) | -mindim(x) | zex(x) | f1(x) != x.  [clausify(1)].
-maxdim(x) | s(x).  [clausify(2)].
-maxdim(x) | -zex(x).  [clausify(2)].
-maxdim(x) | -s(y) | leq(y,x).  [clausify(2)].
maxdim(x) | -s(x) | zex(x) | s(f2(x)).  [clausify(2)].
maxdim(x) | -s(x) | zex(x) | -leq(f2(x),x).  [clausify(2)].
-mindim(x) | s(x).  [clausify(3)].
-mindim(x) | -zex(x).  [clausify(3)].
-mindim(x) | -s(y) | zex(y) | leq(x,y).  [clausify(3)].
mindim(x) | -s(x) | zex(x) | s(f3(x)).  [clausify(3)].
mindim(x) | -s(x) | zex(x) | -zex(f3(x)).  [clausify(3)].
mindim(x) | -s(x) | zex(x) | -leq(x,f3(x)).  [clausify(3)].
-sfa_point(x) | point(x).  [clausify(4)].
sfa_point(x) | -point(x).  [clausify(4)].
-sfa_point(x) | sfa_geometry(x).  [clausify(5)].
-s(x) | zex(x) | cont(x,x).  [clausify(6)].
s(x) | -cont(x,x).  [clausify(6)].
-zex(x) | -cont(x,x).  [clausify(6)].
-cont(x,y) | -cont(y,x) | y = x.  [clausify(7)].
-cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(8)].
-zex(x) | s(x).  [clausify(9)].
-zex(x) | -cont(y,x).  [clausify(9)].
-zex(x) | -cont(x,y).  [clausify(9)].
-zex(x) | -zex(y) | y = x.  [clausify(10)].
-leq(x,y) | s(x).  [clausify(11)].
-leq(x,y) | s(y).  [clausify(12)].
-zex(x) | s(x).  [clausify(13)].
-s(x) | leq(x,x).  [clausify(14)].
-leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(15)].
-zex(x) | -zex(y) | y = x.  [clausify(16)].
-zex(x) | -s(y) | leq(x,y).  [clausify(17)].
-eqdim(x,y) | leq(x,y).  [clausify(18)].
-eqdim(x,y) | leq(y,x).  [clausify(18)].
eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(18)].
-covers(x,y) | lt(y,x).  [clausify(19)].
-covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(19)].
covers(x,y) | -lt(y,x) | s(f4(x,y)).  [clausify(19)].
covers(x,y) | -lt(y,x) | lt(y,f4(x,y)).  [clausify(19)].
covers(x,y) | -lt(y,x) | lt(f4(x,y),x).  [clausify(19)].
-sfa_geometry(x) | s(x).  [clausify(20)].
sfa_geometry(x) | -s(x).  [clausify(20)].
mindim(c1).  [clausify(21)].
-cont(x,y) | leq(x,y).  [clausify(22)].
-gt(x,y) | lt(y,x).  [clausify(23)].
gt(x,y) | -lt(y,x).  [clausify(23)].
-geq(x,y) | leq(y,x).  [clausify(24)].
geq(x,y) | -leq(y,x).  [clausify(24)].
-lt(x,y) | leq(x,y).  [clausify(25)].
-lt(x,y) | -eqdim(x,y).  [clausify(25)].
lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(25)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating point/1
26 point(x) | -mindim(x) | zex(x) | cont(f1(x),x).  [clausify(1)].
27 -point(x) | mindim(x).  [clausify(1)].
28 -point(x) | -zex(x).  [clausify(1)].
29 -point(x) | -cont(y,x) | y = x.  [clausify(1)].
Derived: -mindim(x) | zex(x) | cont(f1(x),x) | -cont(y,x) | y = x.  [resolve(26,a,29,a)].
30 point(x) | -mindim(x) | zex(x) | f1(x) != x.  [clausify(1)].
Derived: -mindim(x) | zex(x) | f1(x) != x | -cont(y,x) | y = x.  [resolve(30,a,29,a)].
31 -sfa_point(x) | point(x).  [clausify(4)].
Derived: -sfa_point(x) | mindim(x).  [resolve(31,b,27,a)].
Derived: -sfa_point(x) | -zex(x).  [resolve(31,b,28,a)].
Derived: -sfa_point(x) | -cont(y,x) | y = x.  [resolve(31,b,29,a)].
32 sfa_point(x) | -point(x).  [clausify(4)].
Derived: sfa_point(x) | -mindim(x) | zex(x) | cont(f1(x),x).  [resolve(32,b,26,a)].
Derived: sfa_point(x) | -mindim(x) | zex(x) | f1(x) != x.  [resolve(32,b,30,a)].

Eliminating maxdim/1
33 maxdim(x) | -s(x) | zex(x) | s(f2(x)).  [clausify(2)].
34 -maxdim(x) | s(x).  [clausify(2)].
35 -maxdim(x) | -zex(x).  [clausify(2)].
36 -maxdim(x) | -s(y) | leq(y,x).  [clausify(2)].
Derived: -s(x) | zex(x) | s(f2(x)) | -s(y) | leq(y,x).  [resolve(33,a,36,a)].
37 maxdim(x) | -s(x) | zex(x) | -leq(f2(x),x).  [clausify(2)].
Derived: -s(x) | zex(x) | -leq(f2(x),x) | -s(y) | leq(y,x).  [resolve(37,a,36,a)].

Eliminating mindim/1
38 mindim(x) | -s(x) | zex(x) | s(f3(x)).  [clausify(3)].
39 -mindim(x) | s(x).  [clausify(3)].
40 -mindim(x) | -zex(x).  [clausify(3)].
41 -mindim(x) | -s(y) | zex(y) | leq(x,y).  [clausify(3)].
Derived: -s(x) | zex(x) | s(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(38,a,41,a)].
42 mindim(x) | -s(x) | zex(x) | -zex(f3(x)).  [clausify(3)].
Derived: -s(x) | zex(x) | -zex(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(42,a,41,a)].
43 mindim(x) | -s(x) | zex(x) | -leq(x,f3(x)).  [clausify(3)].
Derived: -s(x) | zex(x) | -leq(x,f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(43,a,41,a)].
44 mindim(c1).  [clausify(21)].
Derived: s(c1).  [resolve(44,a,39,a)].
Derived: -zex(c1).  [resolve(44,a,40,a)].
Derived: -s(x) | zex(x) | leq(c1,x).  [resolve(44,a,41,a)].
45 -mindim(x) | zex(x) | cont(f1(x),x) | -cont(y,x) | y = x.  [resolve(26,a,29,a)].
Derived: zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | zex(x) | s(f3(x)).  [resolve(45,a,38,a)].
Derived: zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | zex(x) | -zex(f3(x)).  [resolve(45,a,42,a)].
Derived: zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | zex(x) | -leq(x,f3(x)).  [resolve(45,a,43,a)].
Derived: zex(c1) | cont(f1(c1),c1) | -cont(x,c1) | x = c1.  [resolve(45,a,44,a)].
46 -mindim(x) | zex(x) | f1(x) != x | -cont(y,x) | y = x.  [resolve(30,a,29,a)].
Derived: zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | zex(x) | s(f3(x)).  [resolve(46,a,38,a)].
Derived: zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | zex(x) | -zex(f3(x)).  [resolve(46,a,42,a)].
Derived: zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | zex(x) | -leq(x,f3(x)).  [resolve(46,a,43,a)].
Derived: zex(c1) | f1(c1) != c1 | -cont(x,c1) | x = c1.  [resolve(46,a,44,a)].
47 -sfa_point(x) | mindim(x).  [resolve(31,b,27,a)].
Derived: -sfa_point(x) | s(x).  [resolve(47,b,39,a)].
Derived: -sfa_point(x) | -s(y) | zex(y) | leq(x,y).  [resolve(47,b,41,a)].
48 sfa_point(x) | -mindim(x) | zex(x) | cont(f1(x),x).  [resolve(32,b,26,a)].
Derived: sfa_point(x) | zex(x) | cont(f1(x),x) | -s(x) | zex(x) | s(f3(x)).  [resolve(48,b,38,a)].
Derived: sfa_point(x) | zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -zex(f3(x)).  [resolve(48,b,42,a)].
Derived: sfa_point(x) | zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -leq(x,f3(x)).  [resolve(48,b,43,a)].
Derived: sfa_point(c1) | zex(c1) | cont(f1(c1),c1).  [resolve(48,b,44,a)].
49 sfa_point(x) | -mindim(x) | zex(x) | f1(x) != x.  [resolve(32,b,30,a)].
Derived: sfa_point(x) | zex(x) | f1(x) != x | -s(x) | zex(x) | s(f3(x)).  [resolve(49,b,38,a)].
Derived: sfa_point(x) | zex(x) | f1(x) != x | -s(x) | zex(x) | -zex(f3(x)).  [resolve(49,b,42,a)].
Derived: sfa_point(x) | zex(x) | f1(x) != x | -s(x) | zex(x) | -leq(x,f3(x)).  [resolve(49,b,43,a)].
Derived: sfa_point(c1) | zex(c1) | f1(c1) != c1.  [resolve(49,b,44,a)].

Eliminating sfa_point/1
50 sfa_point(x) | zex(x) | cont(f1(x),x) | -s(x) | zex(x) | s(f3(x)).  [resolve(48,b,38,a)].
51 -sfa_point(x) | sfa_geometry(x).  [clausify(5)].
52 -sfa_point(x) | -zex(x).  [resolve(31,b,28,a)].
53 -sfa_point(x) | -cont(y,x) | y = x.  [resolve(31,b,29,a)].
54 -sfa_point(x) | s(x).  [resolve(47,b,39,a)].
55 -sfa_point(x) | -s(y) | zex(y) | leq(x,y).  [resolve(47,b,41,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | s(f3(x)) | sfa_geometry(x).  [resolve(50,a,51,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | s(f3(x)) | -cont(y,x) | y = x.  [resolve(50,a,53,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | s(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(50,a,55,a)].
56 sfa_point(x) | zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -zex(f3(x)).  [resolve(48,b,42,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -zex(f3(x)) | sfa_geometry(x).  [resolve(56,a,51,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -zex(f3(x)) | -cont(y,x) | y = x.  [resolve(56,a,53,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -zex(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(56,a,55,a)].
57 sfa_point(x) | zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -leq(x,f3(x)).  [resolve(48,b,43,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -leq(x,f3(x)) | sfa_geometry(x).  [resolve(57,a,51,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -leq(x,f3(x)) | -cont(y,x) | y = x.  [resolve(57,a,53,a)].
Derived: zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -leq(x,f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(57,a,55,a)].
58 sfa_point(c1) | zex(c1) | cont(f1(c1),c1).  [resolve(48,b,44,a)].
Derived: zex(c1) | cont(f1(c1),c1) | sfa_geometry(c1).  [resolve(58,a,51,a)].
Derived: zex(c1) | cont(f1(c1),c1) | -cont(x,c1) | x = c1.  [resolve(58,a,53,a)].
Derived: zex(c1) | cont(f1(c1),c1) | s(c1).  [resolve(58,a,54,a)].
Derived: zex(c1) | cont(f1(c1),c1) | -s(x) | zex(x) | leq(c1,x).  [resolve(58,a,55,a)].
59 sfa_point(x) | zex(x) | f1(x) != x | -s(x) | zex(x) | s(f3(x)).  [resolve(49,b,38,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | s(f3(x)) | sfa_geometry(x).  [resolve(59,a,51,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | s(f3(x)) | -cont(y,x) | y = x.  [resolve(59,a,53,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | s(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(59,a,55,a)].
60 sfa_point(x) | zex(x) | f1(x) != x | -s(x) | zex(x) | -zex(f3(x)).  [resolve(49,b,42,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | -zex(f3(x)) | sfa_geometry(x).  [resolve(60,a,51,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | -zex(f3(x)) | -cont(y,x) | y = x.  [resolve(60,a,53,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | -zex(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(60,a,55,a)].
61 sfa_point(x) | zex(x) | f1(x) != x | -s(x) | zex(x) | -leq(x,f3(x)).  [resolve(49,b,43,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | -leq(x,f3(x)) | sfa_geometry(x).  [resolve(61,a,51,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | -leq(x,f3(x)) | -cont(y,x) | y = x.  [resolve(61,a,53,a)].
Derived: zex(x) | f1(x) != x | -s(x) | zex(x) | -leq(x,f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(61,a,55,a)].
62 sfa_point(c1) | zex(c1) | f1(c1) != c1.  [resolve(49,b,44,a)].
Derived: zex(c1) | f1(c1) != c1 | sfa_geometry(c1).  [resolve(62,a,51,a)].
Derived: zex(c1) | f1(c1) != c1 | -cont(x,c1) | x = c1.  [resolve(62,a,53,a)].
Derived: zex(c1) | f1(c1) != c1 | s(c1).  [resolve(62,a,54,a)].
Derived: zex(c1) | f1(c1) != c1 | -s(x) | zex(x) | leq(c1,x).  [resolve(62,a,55,a)].

Eliminating eqdim/2
63 eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(18)].
64 -eqdim(x,y) | leq(x,y).  [clausify(18)].
65 -eqdim(x,y) | leq(y,x).  [clausify(18)].
66 -lt(x,y) | -eqdim(x,y).  [clausify(25)].
Derived: -lt(x,y) | -leq(x,y) | -leq(y,x).  [resolve(66,b,63,a)].
67 lt(x,y) | -leq(x,y) | eqdim(x,y).  [clausify(25)].
Derived: lt(x,y) | -leq(x,y) | leq(y,x).  [resolve(67,c,65,a)].

Eliminating covers/2
68 covers(x,y) | -lt(y,x) | s(f4(x,y)).  [clausify(19)].
69 -covers(x,y) | lt(y,x).  [clausify(19)].
70 -covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).  [clausify(19)].
Derived: -lt(x,y) | s(f4(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(68,a,70,a)].
71 covers(x,y) | -lt(y,x) | lt(y,f4(x,y)).  [clausify(19)].
Derived: -lt(x,y) | lt(x,f4(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(71,a,70,a)].
72 covers(x,y) | -lt(y,x) | lt(f4(x,y),x).  [clausify(19)].
Derived: -lt(x,y) | lt(f4(y,x),y) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(72,a,70,a)].

Eliminating sfa_geometry/1
73 sfa_geometry(x) | -s(x).  [clausify(20)].
74 -sfa_geometry(x) | s(x).  [clausify(20)].
75 zex(x) | cont(f1(x),x) | -s(x) | zex(x) | s(f3(x)) | sfa_geometry(x).  [resolve(50,a,51,a)].
76 zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -zex(f3(x)) | sfa_geometry(x).  [resolve(56,a,51,a)].
77 zex(x) | cont(f1(x),x) | -s(x) | zex(x) | -leq(x,f3(x)) | sfa_geometry(x).  [resolve(57,a,51,a)].
78 zex(c1) | cont(f1(c1),c1) | sfa_geometry(c1).  [resolve(58,a,51,a)].
79 zex(x) | f1(x) != x | -s(x) | zex(x) | s(f3(x)) | sfa_geometry(x).  [resolve(59,a,51,a)].
80 zex(x) | f1(x) != x | -s(x) | zex(x) | -zex(f3(x)) | sfa_geometry(x).  [resolve(60,a,51,a)].
81 zex(x) | f1(x) != x | -s(x) | zex(x) | -leq(x,f3(x)) | sfa_geometry(x).  [resolve(61,a,51,a)].
82 zex(c1) | f1(c1) != c1 | sfa_geometry(c1).  [resolve(62,a,51,a)].

Eliminating gt/2
83 gt(x,y) | -lt(y,x).  [clausify(23)].
84 -gt(x,y) | lt(y,x).  [clausify(23)].

Eliminating geq/2
85 geq(x,y) | -leq(y,x).  [clausify(24)].
86 -geq(x,y) | leq(y,x).  [clausify(24)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, zex, s, cont, leq, lt ]).
Function symbol precedence:  function_order([ c1, f4, f1, f2, f3 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
    % set(paramodulation) -> set(back_demod).
  % set(binary_resolution).  % (non-Horn)
  % set(positive_inference). % (non-Horn)
    % set(positive_inference) -> assign(literal_selection, max_negative).
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(back_unit_deletion).  % (non-Horn)
    % set(back_unit_deletion) -> set(unit_deletion).

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
87 -s(x) | zex(x) | cont(x,x).  [clausify(6)].
88 s(x) | -cont(x,x).  [clausify(6)].
90 -cont(x,y) | -cont(y,x) | y = x.  [clausify(7)].
91 -cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(8)].
92 -zex(x) | s(x).  [clausify(9)].
93 -zex(x) | -cont(y,x).  [clausify(9)].
94 -zex(x) | -cont(x,y).  [clausify(9)].
95 -zex(x) | -zex(y) | y = x.  [clausify(10)].
96 -leq(x,y) | s(x).  [clausify(11)].
97 -leq(x,y) | s(y).  [clausify(12)].
98 -s(x) | leq(x,x).  [clausify(14)].
99 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(15)].
100 -zex(x) | -s(y) | leq(x,y).  [clausify(17)].
101 -cont(x,y) | leq(x,y).  [clausify(22)].
102 -lt(x,y) | leq(x,y).  [clausify(25)].
103 -s(x) | zex(x) | s(f2(x)) | -s(y) | leq(y,x).  [resolve(33,a,36,a)].
104 -s(x) | zex(x) | -leq(f2(x),x) | -s(y) | leq(y,x).  [resolve(37,a,36,a)].
105 -s(x) | zex(x) | s(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(38,a,41,a)].
106 -s(x) | zex(x) | -zex(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(42,a,41,a)].
107 -s(x) | zex(x) | -leq(x,f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(43,a,41,a)].
108 s(c1).  [resolve(44,a,39,a)].
109 -zex(c1).  [resolve(44,a,40,a)].
110 -s(x) | zex(x) | leq(c1,x).  [resolve(44,a,41,a)].
112 zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | s(f3(x)).  [copy(111),merge(f)].
114 zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | -zex(f3(x)).  [copy(113),merge(f)].
116 zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | -leq(x,f3(x)).  [copy(115),merge(f)].
118 cont(f1(c1),c1) | -cont(x,c1) | c1 = x.  [copy(117),flip(d),unit_del(a,109)].
120 zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | s(f3(x)).  [copy(119),merge(f)].
122 zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | -zex(f3(x)).  [copy(121),merge(f)].
124 zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | -leq(x,f3(x)).  [copy(123),merge(f)].
126 f1(c1) != c1 | -cont(x,c1) | c1 = x.  [copy(125),flip(d),unit_del(a,109)].
145 -lt(x,y) | -leq(x,y) | -leq(y,x).  [resolve(66,b,63,a)].
146 lt(x,y) | -leq(x,y) | leq(y,x).  [resolve(67,c,65,a)].
147 -lt(x,y) | s(f4(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(68,a,70,a)].
148 -lt(x,y) | lt(x,f4(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(71,a,70,a)].
149 -lt(x,y) | lt(f4(y,x),y) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(72,a,70,a)].
150 -lt(x,x) | -leq(x,x).  [factor(145,b,c)].
151 -lt(x,y) | s(f4(y,x)) | -s(y) | -lt(y,y).  [factor(147,a,d)].
152 -lt(x,y) | s(f4(y,x)) | -s(x) | -lt(x,x).  [factor(147,a,e)].
153 -lt(x,x) | s(f4(x,x)) | -s(x).  [factor(147,d,e),merge(d)].
154 -lt(x,y) | lt(x,f4(y,x)) | -s(y) | -lt(y,y).  [factor(148,a,d)].
155 -lt(x,y) | lt(x,f4(y,x)) | -s(x) | -lt(x,x).  [factor(148,a,e)].
156 -lt(x,x) | lt(x,f4(x,x)) | -s(x).  [factor(148,d,e),merge(d)].
157 -lt(x,y) | lt(f4(y,x),y) | -s(y) | -lt(y,y).  [factor(149,a,d)].
158 -lt(x,y) | lt(f4(y,x),y) | -s(x) | -lt(x,x).  [factor(149,a,e)].
159 -lt(x,x) | lt(f4(x,x),x) | -s(x).  [factor(149,d,e),merge(d)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.05 seconds.

given #1 (I,wt=7): 87 -s(x) | zex(x) | cont(x,x).  [clausify(6)].

given #2 (I,wt=5): 88 s(x) | -cont(x,x).  [clausify(6)].

given #3 (I,wt=9): 90 -cont(x,y) | -cont(y,x) | y = x.  [clausify(7)].

given #4 (I,wt=9): 91 -cont(x,y) | -cont(y,z) | cont(x,z).  [clausify(8)].

given #5 (I,wt=4): 92 -zex(x) | s(x).  [clausify(9)].

given #6 (I,wt=5): 93 -zex(x) | -cont(y,x).  [clausify(9)].

given #7 (I,wt=5): 94 -zex(x) | -cont(x,y).  [clausify(9)].

given #8 (I,wt=7): 95 -zex(x) | -zex(y) | y = x.  [clausify(10)].

given #9 (I,wt=5): 96 -leq(x,y) | s(x).  [clausify(11)].

given #10 (I,wt=5): 97 -leq(x,y) | s(y).  [clausify(12)].

given #11 (I,wt=5): 98 -s(x) | leq(x,x).  [clausify(14)].

given #12 (I,wt=9): 99 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(15)].

given #13 (I,wt=7): 100 -zex(x) | -s(y) | leq(x,y).  [clausify(17)].

given #14 (I,wt=6): 101 -cont(x,y) | leq(x,y).  [clausify(22)].

given #15 (I,wt=6): 102 -lt(x,y) | leq(x,y).  [clausify(25)].

given #16 (I,wt=12): 103 -s(x) | zex(x) | s(f2(x)) | -s(y) | leq(y,x).  [resolve(33,a,36,a)].

given #17 (I,wt=13): 104 -s(x) | zex(x) | -leq(f2(x),x) | -s(y) | leq(y,x).  [resolve(37,a,36,a)].

given #18 (I,wt=14): 105 -s(x) | zex(x) | s(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(38,a,41,a)].

given #19 (I,wt=14): 106 -s(x) | zex(x) | -zex(f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(42,a,41,a)].

given #20 (I,wt=15): 107 -s(x) | zex(x) | -leq(x,f3(x)) | -s(y) | zex(y) | leq(x,y).  [resolve(43,a,41,a)].

given #21 (I,wt=2): 108 s(c1).  [resolve(44,a,39,a)].

given #22 (I,wt=2): 109 -zex(c1).  [resolve(44,a,40,a)].

given #23 (I,wt=7): 110 -s(x) | zex(x) | leq(c1,x).  [resolve(44,a,41,a)].

given #24 (I,wt=17): 112 zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | s(f3(x)).  [copy(111),merge(f)].

given #25 (I,wt=17): 114 zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | -zex(f3(x)).  [copy(113),merge(f)].

given #26 (I,wt=18): 116 zex(x) | cont(f1(x),x) | -cont(y,x) | y = x | -s(x) | -leq(x,f3(x)).  [copy(115),merge(f)].

given #27 (I,wt=10): 118 cont(f1(c1),c1) | -cont(x,c1) | c1 = x.  [copy(117),flip(d),unit_del(a,109)].

given #28 (I,wt=17): 120 zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | s(f3(x)).  [copy(119),merge(f)].

given #29 (I,wt=17): 122 zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | -zex(f3(x)).  [copy(121),merge(f)].

given #30 (I,wt=18): 124 zex(x) | f1(x) != x | -cont(y,x) | y = x | -s(x) | -leq(x,f3(x)).  [copy(123),merge(f)].

given #31 (I,wt=10): 126 f1(c1) != c1 | -cont(x,c1) | c1 = x.  [copy(125),flip(d),unit_del(a,109)].

given #32 (I,wt=9): 145 -lt(x,y) | -leq(x,y) | -leq(y,x).  [resolve(66,b,63,a)].

given #33 (I,wt=9): 146 lt(x,y) | -leq(x,y) | leq(y,x).  [resolve(67,c,65,a)].

given #34 (I,wt=15): 147 -lt(x,y) | s(f4(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(68,a,70,a)].

given #35 (I,wt=16): 148 -lt(x,y) | lt(x,f4(y,x)) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(71,a,70,a)].

given #36 (I,wt=16): 149 -lt(x,y) | lt(f4(y,x),y) | -s(z) | -lt(x,z) | -lt(z,y).  [resolve(72,a,70,a)].

given #37 (I,wt=6): 150 -lt(x,x) | -leq(x,x).  [factor(145,b,c)].

given #38 (I,wt=12): 151 -lt(x,y) | s(f4(y,x)) | -s(y) | -lt(y,y).  [factor(147,a,d)].

given #39 (I,wt=12): 152 -lt(x,y) | s(f4(y,x)) | -s(x) | -lt(x,x).  [factor(147,a,e)].

given #40 (I,wt=9): 153 -lt(x,x) | s(f4(x,x)) | -s(x).  [factor(147,d,e),merge(d)].

given #41 (I,wt=13): 154 -lt(x,y) | lt(x,f4(y,x)) | -s(y) | -lt(y,y).  [factor(148,a,d)].

given #42 (I,wt=13): 155 -lt(x,y) | lt(x,f4(y,x)) | -s(x) | -lt(x,x).  [factor(148,a,e)].

given #43 (I,wt=10): 156 -lt(x,x) | lt(x,f4(x,x)) | -s(x).  [factor(148,d,e),merge(d)].

given #44 (I,wt=13): 157 -lt(x,y) | lt(f4(y,x),y) | -s(y) | -lt(y,y).  [factor(149,a,d)].

given #45 (I,wt=13): 158 -lt(x,y) | lt(f4(y,x),y) | -s(x) | -lt(x,x).  [factor(149,a,e)].

given #46 (I,wt=10): 159 -lt(x,x) | lt(f4(x,x),x) | -s(x).  [factor(149,d,e),merge(d)].

given #47 (A,wt=10): 160 -s(x) | zex(x) | -zex(f3(x)) | leq(x,c1).  [resolve(108,a,106,d),unit_del(d,109)].

given #48 (T,wt=3): 164 leq(c1,c1).  [resolve(108,a,98,a)].

given #49 (T,wt=3): 165 cont(c1,c1).  [resolve(108,a,87,a),unit_del(a,109)].

given #50 (T,wt=5): 163 -zex(x) | leq(x,c1).  [resolve(108,a,100,b)].

given #51 (T,wt=8): 162 s(f2(c1)) | -s(x) | leq(x,c1).  [resolve(108,a,103,a),unit_del(a,109)].

given #52 (A,wt=10): 161 -s(x) | zex(x) | s(f3(x)) | leq(x,c1).  [resolve(108,a,105,d),unit_del(d,109)].

given #53 (F,wt=3): 166 -lt(c1,c1).  [ur(150,b,164,a)].

============================== STATISTICS ============================

Given=53. Generated=122. Kept=54. proofs=0.
Usable=53. Sos=0. Demods=0. Limbo=0, Disabled=119. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=68. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=105. Nonunit_bsub_feature_tests=122.
Megabytes=0.12.
User_CPU=0.06, System_CPU=0.03, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

SEARCH FAILED

Exiting with failure.

------ process 9060 exit (sos_empty) ------

Process 9060 exit (sos_empty) Wed Nov  7 15:40:55 2018
============================= D:\Shirly\Reasoning\prover9-bin\prover9 ================================
execution finished: Wed Nov 07 15:40:57 2018
total CPU time used: 0
The command was "D:\Shirly\Reasoning\prover9-bin\prover9 -t1000 -f D:\colore-testbed\ontologies\multidim_space_codi\definitions\conversions\point.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\min_max_dim.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_point.p9 D:\colore-testbed\ontologies\multidim_space_cont\conversions\cont_basic.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\eq_dim.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\covers.p9 D:\colore-testbed\ontologies\simple_features\sf_primitives\conversions\sfa_geometry.p9 D:\colore-testbed\ontologies\multidim_space_dim\conversions\dim_prime_linear.p9 D:\colore-testbed\ontologies\multidim_space_codi\conversions\codi_basic.p9 D:\colore-testbed\ontologies\multidim_space_dim\definitions\conversions\dim_basic_defs.p9"
Input read from 
============================ end of footer ===========================
