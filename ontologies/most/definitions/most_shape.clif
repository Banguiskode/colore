/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 3.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text http://colore.oor.net/most/definitions/most_shape.clif

(cl-comment 'Theory containing definitions for the types of shapes for the molecules.')

(cl-imports http://colore.oor.net/most/most_root.clif)

(cl-comment 'A saturated molecule is one that has at least one single bond.')
(forall (x)
	(iff (saturated x)
		(and (functional_group x)
			(forall (b y z)
			(if (and (inBond y b)(inBond z b)(inGroup y x)(inGroup z x))
				(singlebond b y z))))))

(cl-comment 'An unsaturated molecule is one that has at least one double bond.')
(forall (x)
	(iff (unsaturated x)
		(and (functional_group x)
		(exists (b y z)
			(if (and (inBond y b)(inBond z b)(inGroup y x)(inGroup z x))
				(doublebond b y z))))))
				
(cl-comment 'Alternating Group Definition: each atom is in a single and a double bond with another atom in the functional group.')
(forall (x y)
	(iff (alternating_group x)
		(if (and (functional_group x)(atom y)(inGroup x y))
			(exists (a1 a2 b1 b2)
				(and (atom a1)(atom a2)(inBonx y b1)(inBond a1 b1)(doublebond b2 y a2)(inGroup a1 x)(inGroup a2 x))))))

(cl-comment 'Trivial: a functional group for single atoms.')
(forall (x)
	(iff (trivialgroup x)
		(and (functional_group x)
			(forall (y z)
				(if (and (inGroup y x)(inGroup z x))
					(= y z))))))

(cl-comment 'Part: Two functional groups are part of each other if they share a common atom.')
(forall (g1 g2)
	(iff (part g1 g2)
		(and (functional_group g1)(functional_group g2)(not (= g1 g2))
			(forall (x)
				(if (inGroup x g1)
					(inGroup x g2))))))

(cl-comment 'Connection Between Two Functional Groups: Two functional groups are connected to each other by a single bond between two atoms in the groups.')
(forall (g1 g2)
	(iff (conn g1 g2)
		(and (functional_group g1)(functional_group g2)(not (= g1 g2))
			(exists (w z b)
				(and (inGroup w g1)(inGroup z g2)(inBond w b)(inBond z b))))))

(cl-comment 'Connection Between An Atom and A Functional Group: An atom is connected to an atom in the functional group by a single bond.')
(forall (x g)
	(iff (atomconn x g)
		(and (atom x)(functional_group g)(not (= x g))(not (inGroup x g))
			(exists (z b)
				(and (inGroup z g)(inBond x b)(inBond z b))))))

(cl-comment 'Connection Between A Molecule and A Molecule: A molecule is part of another molecule if they share a bond ??what do they share??.')
(forall (m1 m2)
	(iff (subMolecule m1 m2)
		(and (molecule m1)(molecule m2)(not (= m1 m2))
			(exists (w z b)
				(and (inMolecule w m1)(inMolecule z m2)(inBond w b)(inBond z b))))))

(cl-comment 'Primitive Functional Group: A primitive functional group.')
(forall (g)
	(iff (primitivegroup g)
		(and (functional_group g)
			(forall (g1)
			(if (and (functional_group g1)(part g1 g))
				(= g1 g))))))

(cl-comment 'Linear: If an atom is not an end, it is adjacent to exactly two other atoms.')
(forall (g)
	(iff (lineargroup g)
		(forall (x)
		(if (and (atom x)(inGroup x g)(not(end x g)))
			(exists (y z b1 b2)
				(and (atom y)(atom z)(not (= y z))(bond b1)(bond b2)(inBond x b1)(inBond y b1)(inBond x b2)(inBond z b2)
					(not(= b1 b2))(inGroup y g)(inGroup z g)
					(forall (w)
						(if (inGroup w g)
							(or (= w y)(= w z))))))))))

(forall (x)
	(iff (lineargroup x)
		(and (functional_group x)
			(exists (y z)
				(and (end y x)(end z x)(not (= y z))
					(forall (w)
						(if (inGroup w x)
							(not (fork w x)))))))))

(cl-comment 'Branched: An atom is bonded to more than two other atoms.')
(forall (g)
	(iff (branchedgroup g)
		(forall (x)
			(if (and (atom x)(inGroup x g))
			(exists (y z b1 b2)
				(and (atom y)(atom z)(bond b1)(bond b2)
				(inBond x b1)(inBond y b1)(inBond x b2)(inBond z b2)
					(inGroup y g)(inGroup z g)(not (= y z))))))))

(forall (x)
	(iff (branchedgroup x)
		(and (functional_group x)
			(exists (y) (fork y x)))))

(cl-comment 'Ring: Each atom is bonded to exactly two distinct atoms.')
(forall (g)
	(iff (ring g)
		(forall (x)
			(if (and (atom x)(inGroup x g))
			(exists (b1 b2 y z)
				(and (not (= b1 b2))(bond b1)(bond b2)(atom y)(atom z)(not (= y z))
					(inBond x b1)(inBond y b1)(inBond x b2)(inBond z b2)
					(inGroup y g)(inGroup z g)
					(forall (w)
						(if (inGroup w g)
							(or (= w y)(= w z))))))))))

(forall (x)
	(iff (ring x)
		(and (functional_group x)
			(forall (y)
				(if (inGroup y x)
					(and (not (end y x))(not (fork y x))))))))

)