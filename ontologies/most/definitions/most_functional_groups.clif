/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 3.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text http://colore.oor.net/most/definitions/most_functional_groups.clif

(cl-imports http://colore.oor.net/most/definitions/most_shape.clif)
(cl-imports http://colore.oor.net/most/definitions/most_connections.clif)

(cl-comment 'We note that R groups are simply another functional group in this axiomatization.')

(cl-comment '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')
(cl-comment ' H Y D R O C A R B O N S ')
(cl-comment 'These are axioms for functional groups that contain hydrocarbons.')
(cl-comment 'Only carbon and hydrogens.')
(cl-comment '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')

(cl-comment '================================================')
(cl-comment 'ALKYL GROUP R(CH2)nH')
(cl-comment '1 carbon - methane')
(cl-comment '2 carbon - ethane')
(cl-comment '3 carbon - propane')
(cl-comment '4 carbon - butane, isobutane')
(cl-comment '5 carbon - pentane, isopentane, neopentane')
(cl-comment '6 carbon - hexane, 2-methylpentane, 3-methylpentane, 2,2-dimethylebutane, 2,3-dimethylbutane')
(cl-comment '================================================')

(forall (x)
	(iff (alkyl_group x)
		(and (chain x)(saturated x)
			(forall (a)
				(if (and (atom a)(inGroup a x))
					(carbon a))))))

(forall (x)
	(iff (methane x)
		(and (chain x)(saturated x)
			(exists (c1)
				(and (carbon c1)
					(forall (y)
						(if (inGroup y x)
							(= y c1))))))))

(forall (x)
	(iff (ethane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 b1)
				(and (carbon c1)(carbon c2)
					(not (= c1 c2))
					(singleBond b1 c1 c2)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)))))))))

(forall (x)
	(iff (propane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 b1 b2)
				(and (carbon c1)(carbon c2)(carbon c3)
					(not (= c1 c2))(not (= c1 c3))(not (= c2 c3))
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)))))))))

(forall (x)
	(iff (butane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))
					(not (= c2 c3))(not (= c2 c4))
					(not (= c3 c4))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c3 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(forall (x)
	(iff (isobutane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))
					(not (= c2 c3))(not (= c2 c4))
					(not (= c3 c4))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(forall (x)
	(iff (pentane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c3 c4)
					(singleBond b4 c4 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))


(forall (x)
	(iff (isopentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(singleBond b4 c4 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))

(forall (x)
	(iff (neopentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(singleBond b4 c2 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))
							
(forall (x)
	(iff (hexane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(singleBond b4 c4 c5)
					(singleBond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (isohexane x)
		(2_methylpentane x)))

(forall (x)
	(iff (2_methylpentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(singleBond b4 c4 c5)
					(singleBond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (3_methylpentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c3 c4)
					(singleBond b4 c3 c5)
					(singleBond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (2_3_dimethylbutane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(singleBond b4 c4 c5)
					(singleBond b5 c4 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (2_2_dimethylbutane x)
		(neohexane x)))

(forall (x)
	(iff (neohexane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(singleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c2 c4)
					(singleBond b4 c2 c5)
					(singleBond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(cl-comment '================================================')
(cl-comment 'ALKENYL GROUP CnH2n')
(cl-comment 'The alkenes are straight-chain hydrocarbons with one double bond per molecule')
(cl-comment '2 carbon - ethene')
(cl-comment '3 carbon - propene')
(cl-comment '4 carbon - but-1-ene')
(cl-comment '5 carbon - pent-1-ene')
(cl-comment '6 carbon - hex-1-ene')
(cl-comment '================================================')

(forall (x)
	(iff (alkenyl_group x)
		(and (chain x)(unsaturated x)
			(forall (a)
				(if (and (atom a)(inGroup a x))
					(carbon a))))))

(forall (x)
	(iff (ethylene x)
		(ethene x)))

(forall (x)
	(iff (ethene x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 b1)
				(and (carbon c1)(carbon c2)
					(not (= c1 c2))
					(doubleBond b1 c1 c2)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)))))))))

(forall (x)
	(iff (or (propylene x)(methyl_ethylene x))
		(propene x)))

(forall (x)
	(iff (propene x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 b1 b2)
				(and (carbon c1)(carbon c2)(carbon c3)
					(not (= c1 c2))(not (= c1 c3))
					(not (= c2 c3))
					(doubleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)))))))))

(forall (x)
	(iff (or (1_butene x)(ethylethylene x))
		(but_1_ene x)))

(forall (x)
	(iff (but_1_ene x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))
					(not (= c2 c3))(not (= c2 c4))
					(not (= c3 c4))
					(doubleBond b1 c1 c2)
					(singleBond b2 c2 c3)
					(singleBond b3 c3 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))
							
(cl-comment 'http://www.chem.canterbury.ac.nz/LetsTalkChemistry/ElectronicVersion/ElectronicVersionNew/chapter06/alkenenames.shtml')

(cl-comment '================================================')
(cl-comment 'PHENYL GROUP (RC6H5) - RING')
(cl-comment '================================================')
(forall (x)
	(iff (phenyl_group x)
		(and (ring x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 a y b1 b2 b3 b4 b5 b6 b)
				(and (functional_group y)
					(carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(singleBond b a c3)
					(doublebond b1 c1 c2)
					(singleBond b2 c2 c3)
					(doublebond b3 c3 c4)
					(singleBond b4 c4 c5)
					(doublebond b5 c5 c6)
					(singleBond b6 c1 c6))))))


(forall (x)(iff (alkane_group x)(and (chain_group x)(saturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))
(forall (x)(iff (alkene_group x)(and (chain_group x)(unsaturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))
(forall (x)(iff (alkyne_group x)(and (chain_group x)(unsaturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))
(forall (x)(iff (alkane_group x)(and (ring x)(saturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))
(forall (x)(iff (alkene_group x)(and (ring x)(unsaturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))
(forall (x)(iff (alkyne_group x)(and (ring x)(unsaturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))
(forall (x)(iff (benzyl_group x)(and (ring x)(unsaturated x)(forall (a)    (if (and (atom a)(inGroup a x))     (carbon a))))))

(cl-comment '================================================')
(cl-comment 'Functional Groups (Halogens)')
(cl-comment '================================================')

(cl-comment 'These are axioms for functional groups that contain halogens.')
(forall (x)(iff (haloalkane_group x)(and (chain_group x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(halogen a))))))
(forall (x)(iff (fluoroalkane_group x)(and (chain_group x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(fluorine a))))))
(forall (x)(iff (chloroalkane_group x)(and (chain_group x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(chlorine a))))))
(forall (x)(iff (bromoalkane_group x)(and (chain_group x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(bromine a))))))
(forall (x)(iff (iodoalkane_group x)(and (chain_group x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(iodine a))))))
(forall (x)(iff (haloalkane_group x)(and (ring x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(halogen a))))))
(forall (x)(iff (fluoroalkane_group x)(and (ring x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(fluorine a))))))
(forall (x)(iff (chloroalkane_group x)(and (ring x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(chlorine a))))))
(forall (x)(iff (bromoalkane_group x)(and (ring x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(bromine a))))))
(forall (x)(iff (iodoalkane_group x)(and (ring x)(saturated x)(exists (a) (and (atom a)(inGroup a x)(iodine a))))))


)