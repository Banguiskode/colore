/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 3.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text http://colore.oor.net/most/definitions/most_connections.clif

(cl-imports http://colore.oor.net/most/most_root.clif)

(cl-comment 'This CLIF file contains information on the various connections between atoms, bonds, and molecules.')

(cl-comment '====== ATOM TO BOND CONNECTION ======')

(cl-comment 'A new relation inBond to indicate an atom a is in a bond b.')
(forall (a b)
	(if (inBond a b)
		(and (atom a)(bond b))))

(cl-comment 'A bond is between exactly two atoms.')
(forall (x y z b)
	(if (and (inBond x b)(inBond y b)(inBond z b))
		(or (= x y)(= x z)(= y z))))

(cl-comment 'An atom can be bonded if there exists another atom for which it can be bonded.')
(forall (x)
	(if (atom x)
		(exists (b y)
			(and (atom y)(inBond x b)(inBond y b)))))

(cl-comment 'A bond is possible between two atoms.')
(forall (b)
	(if (bond b)
		(exists (x y)
			(and (inBond x b)(inBond y b)))))

(cl-comment 'Two atoms are bonded if a bond exists between them.')
(forall (b x y)
	(if (and (inBond x b)(inBond y b))
		(and (bond b)(atom x)(atom y))))

(cl-comment 'A bond is related to at most two atoms.')
(forall (b)
	(if (bond b)
		(exists (x y)
			(and (inBond x b)(inBond y b)(not (= x y))))))

(cl-comment 'A bond is related to at least two atoms.')
(forall (b)
	(if (bond b)
		(exists (x y)
			(and (inBond x b)(inBond y b)(not (= y x))))))

(cl-comment '====== ATOM TO GROUP CONNECTION ======')

(cl-comment 'An atom x is in a functional group y.')
(forall (x y)
	(if (inGroup x y)
		(and (atom x)(functional_group y))))

(cl-comment 'Group-Atom Relationship: Every atom has a bond with an atom in a functional group.')
(forall (x)
	(if (atom x)
		(exists (b y z)
			(and (functional_group y)(atom z)(inBond x b)(inBond z b)(inGroup z y)))))

(cl-comment 'Transitive relation to indicate that any bond between two atoms in a group implies that the atom is in the group.')
(forall (b g x y)
	(if (and (inBond x b)(inBond y b)(bondGroup b g))
		(inGroup x g)))

(cl-comment 'If an atom is in a bond that is in a functional group, then the atom is in the functional group.')
(forall (x y z)
	(if (and (inBond x y)(bondGroup y z))
		(inGroup x z)))

(cl-comment 'Connection Between An Atom and A Functional Group: An atom is connected to an atom in the functional group by a single bond.')
(forall (x g)
	(iff (atomconn x g)
		(and (atom x)(functional_group g)(not (= x g))(not (inGroup x g))
			(exists (z b)
				(and (inGroup z g)(inBond x b)(inBond z b))))))
		
(cl-comment '====== BOND TO GROUP CONNECTION ======')

(cl-comment 'A sentence to describe that functional groups contain bonds.')
(forall (y)
	(if (functional_group y)
		(exists (x)
			(bondGroup x y))))

(cl-comment 'Group-Bond Relationship: A bond is in a functional group iff both of its atoms are in the functional group.')
(forall (x y)
	(iff (bondGroup x y)
		(and (bond x)(functional_group y)
			(exists (w z)
				(and (atom z)(atom w)(inGroup z y)(inGroup w y)(inBond z x)(inBond w z))))))

(cl-comment 'If two atoms are in a group and have a bond between each other, then the bond is in the functional group.')
(forall (x y b g)
	(if (and (inGroup x y)(inGroup y g)(inBond x b)(inBond y b)(not (= x y)))
		(bondGroup b g)))

(cl-comment 'A bond is a link between two functional groups iff there exists a bond between two atoms that are in both groups, respectively.')
(forall (b g1 g2)
	(iff (link b g1 g2)
		(and (bond b)(functional_group g1)(functional_group g2)
			(exists (x y)
				(and (atom x)(atom y)(inGroup x g1)(inGroup y g2)(hasBond b x y))))))
		
(cl-comment '====== GROUP TO GROUP CONNECTION ======')

(cl-comment 'Part: Two functional groups are part of each other if they share a common atom.')
(forall (g1 g2)
	(iff (part g1 g2)
		(and (functional_group g1)(functional_group g2)(not (= g1 g2))
			(forall (x)
				(if (inGroup x g1)
					(inGroup x g2))))))

(cl-comment 'Connection Between Two Functional Groups: Two functional groups are connected to each other by a single bond between two atoms in the groups.')
(forall (g1 g2)
	(iff (conn g1 g2)
		(and (functional_group g1)(functional_group g2)(not (= g1 g2))
			(exists (w z b)
				(and (inGroup w g1)(inGroup z g2)(inBond w b)(inBond z b))))))

(cl-comment '====== GROUP TO MOLECULE CONNECTION ======')

(cl-comment 'Every group is in a molecule.')
(forall (x)
	(if (functional_group x)
		(exists (y)
			(and (molecule y)(containsGroup y x)))))

(cl-comment 'Every group is contained in a unique molecule.')
(forall (x)
	(if (functional_group x)
		(exists (y)
			(and (molecule y)(containsGroup y x)
				(not (exists (w)
					(and (molecule w)(containsGroup y w)(not (= w y)))))))))

(cl-comment 'A functional group is in a molecule if the group is in the molecule.')
(forall (x y)
	(if (containsGroup x y)
		(and (molecule x)(functional_group y))))

(cl-comment 'Disjointness axiom for atom(x), bond(x), functional_group(x), and molecule(x).')
(forall (x)
	(if (molecule x)
		(not (or (atom x)(bond x)(functional_group x)))))
		
(cl-comment '====== ATOM TO MOLECULE CONNECTION ======')

(cl-comment 'Molecule-Atom Relationship: An atom is in a molecule iff it is in a group that is contained in the molecule.')
(forall (x y)
	(iff (inMolecule x y)
		(and (atom x)(molecule y)
			(exists (w z)
				(and (functional_group z)(inGroup x z)(containsGroup y z))))))

(cl-comment 'An atom is in a molecule if it is in a group or has a bond.')
(forall (x m)
	(iff (inMolecule x m)
		(or (exists (g)
				(and (functional_group g)(containsGroup m g)(inGroup x g)))
			(exists (b y g)
				(and (inGroup y g)(containsGroup m g)(hasBond b x y))))))
				
(cl-comment '====== BOND TO MOLECULE CONNECTION ======')

(cl-comment 'Molecule-Bond Relationship: A bond is in a molecule iff it is in a group that is contained in the molecule.')
(forall (x y)
	(iff (molecularBond x y)
		(and (bond x)(molecule y)
			(exists (w z)
				(and (functional_group z)(bondGroup x z)(containsGroup y z))))))

(cl-comment '====== MOLECULE TO MOLECULE CONNECTION ======')

(cl-comment 'Connection Between A Molecule and A Molecule: A molecule is part of another molecule if they share a bond ??what do they share??.')
(forall (m1 m2)
	(iff (subMolecule m1 m2)
		(and (molecule m1)(molecule m2)(not (= m1 m2))
			(exists (w z b)
				(and (inMolecule w m1)(inMolecule z m2)(inBond w b)(inBond z b))))))

(cl-comment '============ OTHER CATEGORIES OF CONNECTIONS ============')

(cl-comment 'Definition: Tether')
(forall (b g1 g2)
	(iff (tether b g1 g2)
		(exists (a1 a2)
			(and (not (= a1 a2))
				(inBond a1 b)
				(inBond a2 b)
				(inGroup a1 g1)
				(inGroup a2 g2)))))
				
(cl-comment 'Definition: Fused Bond')
(forall (b)
	(iff (fusedBond b)
		(exists (g1 g2)
			(and (tether b g1 g2)
			(bondGroup b g1)
			(bondGroup b g2)
			(not (= g1 g2))))))

(cl-comment 'Defintion: Shared Atom')
(cl-comment 'Bonds b1 and b2 share an atom a.')
(forall (a b1 b2)
	(iff (sharedAtom b1 b2 a)
		(and (bond b1)(bond b2)
		(atom a)(inBond a b1)
		(inBond a b2)(not (= b1 b2)))))

(cl-comment 'FIX THESE DEFINITIONS????????????????????????????????????????????')
(cl-comment '==================================')
(cl-comment 'FUSION')
(cl-comment 'Fusion Connection')
(cl-comment 'Overlapping Bonds')
(cl-comment '==================================')

(forall (g1 g2 m)
	(iff (fusion g1 g2)
		(if (and (groupMolecule g1 m)(groupMolecule g2 m))
			(exists (a1 a2 b1 b2)
				(and (bondGroup b1 g1)(bondGroup b2 g2)
				(bondGroup b1 g2)(bondGroup a2 g1)
				(inBond a1 b1)(inBond a2 b1)
				(inBond a1 b2)(inBond a2 b2)
				(not (= b1 b2))(not (= a1 a2)))))))

(forall (g1 g2 m)
	(if (and (groupMolecule g1 m)(groupMolecule g2 m))
		(exists (a1 a2 b1 b2)
			(and (bondGroup b1 g1)(bondGroup b2 g2)
			(bondGroup b1 g2)(bondGroup a2 g1)
			(inBond a1 b1)(inBond a2 b1)
			(inBond a1 b2)(inBond a2 b2)
			(not (= b1 b2))(not (= a1 a2))))))


(cl-comment '==================================')
(cl-comment 'SPIRO')
(cl-comment 'Spiro Connection')
(cl-comment 'An atom is shared')
(cl-comment '==================================')

(forall (g1 g2 m)
	(iff (spiro g1 g2)
		(if (and (groupMolecule g1 m)(groupMolecule g2 m))
			(exists (a1 a2)
				(and (inGroup a1 g1)(inGroup a2 g2)
				(inGroup a1 g2)(inGroup a2 g1)
				(= a1 a2))))))

(forall (g1 g2 m)
	(if (and (groupMolecule g1 m)(groupMolecule g2 m))
		(exists (a1 a2)
			(and (inGroup a1 g1)(inGroup a2 g2)
			(inGroup a1 g2)(inGroup a2 g1)
			(= a1 a2)))))

(cl-comment '==================================')
(cl-comment 'TETHER')
(cl-comment 'Tether Connection')
(cl-comment 'No atoms are shared')
(cl-comment 'Groups are bonded together by a bond between each group')
(cl-comment '==================================')

(forall (g1 g2 m)
	(iff (tether g1 g2)
		(if (and (groupMolecule g1 m)(groupMolecule g2 m))
			(exists (a1 a2 b)
				(and (inGroup a1 g1)(inGroup a2 g2)
				(not (= a1 a2))
				(inBond a1 b)(inBond a2 b))))))

(forall (g1 g2 m)
	(if (and (groupMolecule g1 m)(groupMolecule g2 m))
		(exists (a1 a2 b)
			(and (inGroup a1 g1)(inGroup a2 g2)
			(not (= a1 a2))
			(inBond a1 b)(inBond a2 b)))))

(cl-comment '==================================')
(cl-comment 'TO DO')
(cl-comment 'weak tether, weak spiro - more than 1 connection/group???')
(cl-comment '==================================')


(cl-comment '==================================')
(cl-comment 'SPIRO/TETHER COMBO')
(cl-comment 'Combination of Spiro/Tether')
(cl-comment 'Two groups share an atom and are bonded together')
(cl-comment '==================================')

(forall (g1 g2 m)
	(if (and (groupMolecule g1 m)(groupMolecule g2 m))
		(exists (a1 a2 a3 a4 b)
			(and (inGroup a1 g1)(inGroup a2 g2)
			(inGroup a1 g2)(inGroup a2 g1)
			(= a1 a2)
			(inGroup a3 g1)(inGroup a4 g2)
			(inBond a3 b)(inBond a4 b)))))

(cl-comment '==================================')
(cl-comment 'Polycyclic Group 5')
(cl-comment 'Name TBA Group')
(cl-comment 'No atoms are shared')
(cl-comment 'Cyclic groups are bonded together by a bond between each group')
(cl-comment 'Bonded together by a bond between each group')
(cl-comment '==================================')

(forall (g1 g2 m)
	(if (and (groupMolecule g1 m)(groupMolecule g2 m))
		(exists (a1 a2 a3 a4 b1 b2)
			(and (inGroup a1 g1)(inGroup a2 g2)
			(inGroup a3 g1)(inGroup a4 g2)
			(not (= a1 a2))
			(inBond a1 b1)(inBond a2 b1)
			(not (= a3 a4))
			(inBond a3 b2)(inBond a4 b2)
			(not (= a1 a3))
			(not (= a1 a4))
			(not (= b1 b2))))))

(cl-comment '==================================')
(cl-comment 'Polycyclic Group 6')
(cl-comment 'Linkage??????')
(cl-comment 'No atoms are shared')
(cl-comment 'Cyclic groups are bonded together by an atom that is not in either group but is bonded to each group')
(cl-comment '==================================')

(forall (g1 g2 m)
	(iff (linkage g1 g2)
		(if (and (groupMolecule g1 m)(groupMolecule g2 m))
			(exists (a1 a2 a3 b1 b2)
				(and (inGroup a1 g1)(inGroup a2 g2)
				(inBond a1 b1)(inBond a3 b1)
				(inBond a2 b2)(inBond a3 b2)
				(not (= a1 a2))(not (= a1 a3))
				(not (= b1 b2)))))))

(forall (g1 g2 m)
	(if (and (groupMolecule g1 m)(groupMolecule g2 m))
		(exists (a1 a2 a3 b1 b2)
			(and (inGroup a1 g1)(inGroup a2 g2)
			(inBond a1 b1)(inBond a3 b1)
			(inBond a2 b2)(inBond a3 b2)
			(not (= a1 a2))(not (= a1 a3))
			(not (= b1 b2))))))

		
)