============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 8027 was started by cchui on stl-ws4.mie.utoronto.ca,
Tue Sep 11 23:40:04 2018
The command was "prover9 -t 300 -f /stl/cchui/colore/ontologies//most/p9/20180911/most_group_verification.p9 /stl/cchui/colore/ontologies/most//mappings/p9/20180911/most_graph2cycle_path_subgraph.p9 /stl/cchui/colore/ontologies//molecular_graph/p9/20180911/most_graph.p9 test/p9/20180911/options.txt test/p9/20180911/ex20180911_6.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/cchui/colore/ontologies//most/p9/20180911/most_group_verification.p9


formulas(sos).
(all x (atom(x) -> -(bond(x) | group(x)))).
(all x (bond(x) -> -group(x))).
(all x all y (mol(x,y) & group(x) & group(y) -> x = y)).
(all x (group(x) -> (exists a (atom(a) & mol(a,x))))).
(all x (atom(x) -> (exists y (group(y) & mol(x,y))))).
(all x (atom(x) -> (exists b exists y exists z (bond(b) & group(y) & atom(z) & x != z & mol(x,b) & mol(z,b) & mol(z,y))))).
(all b all g all x all y (atom(x) & atom(y) & x != y & bond(b) & group(g) & mol(x,b) & mol(y,b) & mol(b,g) -> mol(x,g))).
(all x all y all z (atom(x) & bond(y) & group(z) & mol(x,y) & mol(y,z) -> mol(x,z))).
(all a1 all a2 all a3 all a4 all b1 all b2 all g (atom(a1) & atom(a2) & atom(a3) & atom(a4) & group(g) & mol(b1,g) & mol(a1,b1) & mol(a2,b1) & mol(a3,b2) & mol(a4,b2) & a1 = a3 & a2 = a4 -> mol(b2,g))).
(all y (group(y) -> (exists x (atom(x) & mol(x,y))))).
(all x all y all b all g (atom(x) & atom(y) & bond(b) & group(g) & x != y & mol(x,y) & mol(y,g) & mol(x,b) & mol(y,b) -> mol(b,g))).
(all b all g (bond(b) & group(g) & -mol(b,g) -> (exists a (atom(a) & mol(a,b) & -mol(a,g))))).
(all x all y all z all w (group(x) & end(y,x) & end(z,x) & end(w,x) -> y = z | y = w | z = w)).
(all x (group(x) -> -(exists y fork(y)))).
(all a1 all a2 all a3 all b all g1 all g2 (atom(a1) & atom(a2) & atom(a3) & group(g1) & group(g2) & g1 != g2 & bond(b) & mol(b,g1) & mol(b,g2) & spiro(g1,g2,a1) & spiro(g1,g2,a2) & spiro(g1,g2,a3) -> a1 = a2 | a1 = a3 | a2 = a3)).
(all a1 all a2 all a3 all g1 all g2 (mol(a1,g1) & mol(a1,g2) & mol(a2,g1) & mol(a2,g2) & a1 != a2 & g1 != g2 & between(a1,a3,a2) -> mol(a3,g1) & mol(a3,g2))).
(all x all y (group(x) & group(y) & x != y -> (exists a (atom(a) & mol(a,x) & -mol(a,y))))).
(all g1 all g2 all a1 all a2 (group(g1) & group(g2) & g1 != g2 & atom(a1) & atom(a2) & a1 != a2 & mol(a1,g1) & mol(a2,g2) -> -mol(a1,g2) & -mol(a2,g1))).
(all g1 all g2 (fused(g1,g2) -> ring(g1) & ring(g2))).
(exists a1 all g1 all g2 all a2 (spiro(g1,g2,a1) & spiro(g1,g2,a2) -> a1 = a2)).
(exists b1 all g1 all g2 all b2 (tether(g1,g2,b1) & tether(g1,g2,b2) -> b1 = b2)).
(all g1 all g2 (fused(g1,g2) -> (exists a1 exists a2 (fusedAtom(a1,g1,g2) & fusedAtom(a2,g1,g2) & a1 != a2)))).
(all a1 all a2 all a3 all g1 all g2 (fusedAtom(a1,g1,g2) & fusedAtom(a1,g1,g2) & fusedAtom(a3,g1,g2) -> a1 = a2 | a1 = a3 | a2 = a3)).
(all g1 all g2 all g3 (g1 != g2 & multiply_fused(g1,g2) & multiply_fused(g2,g3) -> g1 = g2)).
(all b (ringBond(b) -> (exists g (mol(b,g) & ring(g))))).
(all x all y all z (ringOrder(x,y,z) -> bond(x) & bond(y) & bond(z))).
(all x all y all z (ringOrder(x,y,z) & bond(x) & bond(y) & bond(z) -> (exists l (ring(l) & mol(x,l) & mol(y,l) & mol(z,l))))).
(all x all y all z all l (ring(l) & bond(x) & bond(y) & bond(z) & mol(x,l) & mol(y,l) & mol(z,l) & x != y & x != z & z != y & ringOrder(x,y,z) -> -ringOrder(z,y,x))).
(all x all y all z all l (ring(l) & bond(x) & bond(y) & bond(z) & mol(x,l) & mol(y,l) & mol(z,l) & ringOrder(x,y,z) -> x != y & x != z & y != z)).
(all x all y all z all l (ring(l) & bond(x) & bond(y) & bond(z) & mol(x,l) & mol(y,l) & mol(z,l) & x != y & x != z & z != y & ringOrder(x,y,z) -> (all w (bond(w) & mol(w,l) -> ringOrder(x,y,w) | ringOrder(w,y,z))))).
(all l (ring(l) -> (exists x exists y exists z (bond(x) & bond(y) & bond(z) & ringOrder(x,y,z))))).
(all x all y all z all w all l (ring(l) & bond(x) & bond(y) & bond(z) & bond(w) & mol(x,l) & mol(y,l) & mol(z,l) & mol(w,l) & ringOrder(x,y,z) & ringOrder(x,z,w) -> ringOrder(x,y,w))).
(all x all y all z (between(x,y,z) -> atom(x) & atom(y) & atom(z))).
(all a1 all a2 all a3 all g1 all g2 (mol(a1,g1) & mol(a1,g2) & mol(a2,g1) & mol(a2,g2) & a1 != a2 & g1 != g2 & between(a1,a3,a2) -> mol(a3,g1) & mol(a3,g2))).
end_of_list.

% Reading from file /stl/cchui/colore/ontologies/most//mappings/p9/20180911/most_graph2cycle_path_subgraph.p9


formulas(sos).
(all x (atom(x) <-> point(x))).
(all x (bond(x) <-> line(x))).
(all x (group(x) <-> plane(x))).
(all x all y (mol(x,y) <-> in(x,y))).
end_of_list.

% Reading from file /stl/cchui/colore/ontologies//molecular_graph/p9/20180911/most_graph.p9


formulas(sos).
(all x mol(x,x)).
(all x all y (mol(x,y) -> mol(y,x))).
(all x all y (mol(x,y) & atom(x) & atom(y) -> x = y)).
(all x all y (mol(x,y) & bond(x) & bond(y) -> x = y)).
(all x all y all z all b (atom(x) & atom(y) & atom(z) & bond(b) & mol(x,b) & mol(y,b) & mol(z,b) -> x = y | x = z | y = z)).
(all x (atom(x) -> (exists b exists y (atom(y) & bond(b) & mol(x,b) & mol(y,b))))).
(all b (bond(b) -> (exists x exists y (atom(x) & atom(y) & mol(x,b) & mol(y,b))))).
(all b (bond(b) -> (exists x exists y all z1 all z2 (atom(x) & atom(y) & atom(z1) & atom(z2) & mol(z1,b) & mol(z2,b) -> z1 = x | z1 = y | z2 = x | z2 = y)))).
(all b (bond(b) -> (exists x exists y (atom(x) & atom(y) & mol(x,b) & mol(y,b) & y != x)))).
end_of_list.

% Reading from file test/p9/20180911/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/20180911/ex20180911_6.p9


formulas(goals).
(all x all y (in(x,y) & point(x) & point(y) -> x = y)).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 300).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (atom(x) -> -(bond(x) | group(x)))) # label(non_clause).  [assumption].
2 (all x (bond(x) -> -group(x))) # label(non_clause).  [assumption].
3 (all x all y (mol(x,y) & group(x) & group(y) -> x = y)) # label(non_clause).  [assumption].
4 (all x (group(x) -> (exists a (atom(a) & mol(a,x))))) # label(non_clause).  [assumption].
5 (all x (atom(x) -> (exists y (group(y) & mol(x,y))))) # label(non_clause).  [assumption].
6 (all x (atom(x) -> (exists b exists y exists z (bond(b) & group(y) & atom(z) & x != z & mol(x,b) & mol(z,b) & mol(z,y))))) # label(non_clause).  [assumption].
7 (all b all g all x all y (atom(x) & atom(y) & x != y & bond(b) & group(g) & mol(x,b) & mol(y,b) & mol(b,g) -> mol(x,g))) # label(non_clause).  [assumption].
8 (all x all y all z (atom(x) & bond(y) & group(z) & mol(x,y) & mol(y,z) -> mol(x,z))) # label(non_clause).  [assumption].
9 (all a1 all a2 all a3 all a4 all b1 all b2 all g (atom(a1) & atom(a2) & atom(a3) & atom(a4) & group(g) & mol(b1,g) & mol(a1,b1) & mol(a2,b1) & mol(a3,b2) & mol(a4,b2) & a1 = a3 & a2 = a4 -> mol(b2,g))) # label(non_clause).  [assumption].
10 (all y (group(y) -> (exists x (atom(x) & mol(x,y))))) # label(non_clause).  [assumption].
11 (all x all y all b all g (atom(x) & atom(y) & bond(b) & group(g) & x != y & mol(x,y) & mol(y,g) & mol(x,b) & mol(y,b) -> mol(b,g))) # label(non_clause).  [assumption].
12 (all b all g (bond(b) & group(g) & -mol(b,g) -> (exists a (atom(a) & mol(a,b) & -mol(a,g))))) # label(non_clause).  [assumption].
13 (all x all y all z all w (group(x) & end(y,x) & end(z,x) & end(w,x) -> y = z | y = w | z = w)) # label(non_clause).  [assumption].
14 (all x (group(x) -> -(exists y fork(y)))) # label(non_clause).  [assumption].
15 (all a1 all a2 all a3 all b all g1 all g2 (atom(a1) & atom(a2) & atom(a3) & group(g1) & group(g2) & g1 != g2 & bond(b) & mol(b,g1) & mol(b,g2) & spiro(g1,g2,a1) & spiro(g1,g2,a2) & spiro(g1,g2,a3) -> a1 = a2 | a1 = a3 | a2 = a3)) # label(non_clause).  [assumption].
16 (all a1 all a2 all a3 all g1 all g2 (mol(a1,g1) & mol(a1,g2) & mol(a2,g1) & mol(a2,g2) & a1 != a2 & g1 != g2 & between(a1,a3,a2) -> mol(a3,g1) & mol(a3,g2))) # label(non_clause).  [assumption].
17 (all x all y (group(x) & group(y) & x != y -> (exists a (atom(a) & mol(a,x) & -mol(a,y))))) # label(non_clause).  [assumption].
18 (all g1 all g2 all a1 all a2 (group(g1) & group(g2) & g1 != g2 & atom(a1) & atom(a2) & a1 != a2 & mol(a1,g1) & mol(a2,g2) -> -mol(a1,g2) & -mol(a2,g1))) # label(non_clause).  [assumption].
19 (all g1 all g2 (fused(g1,g2) -> ring(g1) & ring(g2))) # label(non_clause).  [assumption].
20 (exists a1 all g1 all g2 all a2 (spiro(g1,g2,a1) & spiro(g1,g2,a2) -> a1 = a2)) # label(non_clause).  [assumption].
21 (exists b1 all g1 all g2 all b2 (tether(g1,g2,b1) & tether(g1,g2,b2) -> b1 = b2)) # label(non_clause).  [assumption].
22 (all g1 all g2 (fused(g1,g2) -> (exists a1 exists a2 (fusedAtom(a1,g1,g2) & fusedAtom(a2,g1,g2) & a1 != a2)))) # label(non_clause).  [assumption].
23 (all a1 all a2 all a3 all g1 all g2 (fusedAtom(a1,g1,g2) & fusedAtom(a1,g1,g2) & fusedAtom(a3,g1,g2) -> a1 = a2 | a1 = a3 | a2 = a3)) # label(non_clause).  [assumption].
24 (all g1 all g2 all g3 (g1 != g2 & multiply_fused(g1,g2) & multiply_fused(g2,g3) -> g1 = g2)) # label(non_clause).  [assumption].
25 (all b (ringBond(b) -> (exists g (mol(b,g) & ring(g))))) # label(non_clause).  [assumption].
26 (all x all y all z (ringOrder(x,y,z) -> bond(x) & bond(y) & bond(z))) # label(non_clause).  [assumption].
27 (all x all y all z (ringOrder(x,y,z) & bond(x) & bond(y) & bond(z) -> (exists l (ring(l) & mol(x,l) & mol(y,l) & mol(z,l))))) # label(non_clause).  [assumption].
28 (all x all y all z all l (ring(l) & bond(x) & bond(y) & bond(z) & mol(x,l) & mol(y,l) & mol(z,l) & x != y & x != z & z != y & ringOrder(x,y,z) -> -ringOrder(z,y,x))) # label(non_clause).  [assumption].
29 (all x all y all z all l (ring(l) & bond(x) & bond(y) & bond(z) & mol(x,l) & mol(y,l) & mol(z,l) & ringOrder(x,y,z) -> x != y & x != z & y != z)) # label(non_clause).  [assumption].
30 (all x all y all z all l (ring(l) & bond(x) & bond(y) & bond(z) & mol(x,l) & mol(y,l) & mol(z,l) & x != y & x != z & z != y & ringOrder(x,y,z) -> (all w (bond(w) & mol(w,l) -> ringOrder(x,y,w) | ringOrder(w,y,z))))) # label(non_clause).  [assumption].
31 (all l (ring(l) -> (exists x exists y exists z (bond(x) & bond(y) & bond(z) & ringOrder(x,y,z))))) # label(non_clause).  [assumption].
32 (all x all y all z all w all l (ring(l) & bond(x) & bond(y) & bond(z) & bond(w) & mol(x,l) & mol(y,l) & mol(z,l) & mol(w,l) & ringOrder(x,y,z) & ringOrder(x,z,w) -> ringOrder(x,y,w))) # label(non_clause).  [assumption].
33 (all x all y all z (between(x,y,z) -> atom(x) & atom(y) & atom(z))) # label(non_clause).  [assumption].
34 (all a1 all a2 all a3 all g1 all g2 (mol(a1,g1) & mol(a1,g2) & mol(a2,g1) & mol(a2,g2) & a1 != a2 & g1 != g2 & between(a1,a3,a2) -> mol(a3,g1) & mol(a3,g2))) # label(non_clause).  [assumption].
35 (all x (atom(x) <-> point(x))) # label(non_clause).  [assumption].
36 (all x (bond(x) <-> line(x))) # label(non_clause).  [assumption].
37 (all x (group(x) <-> plane(x))) # label(non_clause).  [assumption].
38 (all x all y (mol(x,y) <-> in(x,y))) # label(non_clause).  [assumption].
39 (all x mol(x,x)) # label(non_clause).  [assumption].
40 (all x all y (mol(x,y) -> mol(y,x))) # label(non_clause).  [assumption].
41 (all x all y (mol(x,y) & atom(x) & atom(y) -> x = y)) # label(non_clause).  [assumption].
42 (all x all y (mol(x,y) & bond(x) & bond(y) -> x = y)) # label(non_clause).  [assumption].
43 (all x all y all z all b (atom(x) & atom(y) & atom(z) & bond(b) & mol(x,b) & mol(y,b) & mol(z,b) -> x = y | x = z | y = z)) # label(non_clause).  [assumption].
44 (all x (atom(x) -> (exists b exists y (atom(y) & bond(b) & mol(x,b) & mol(y,b))))) # label(non_clause).  [assumption].
45 (all b (bond(b) -> (exists x exists y (atom(x) & atom(y) & mol(x,b) & mol(y,b))))) # label(non_clause).  [assumption].
46 (all b (bond(b) -> (exists x exists y all z1 all z2 (atom(x) & atom(y) & atom(z1) & atom(z2) & mol(z1,b) & mol(z2,b) -> z1 = x | z1 = y | z2 = x | z2 = y)))) # label(non_clause).  [assumption].
47 (all b (bond(b) -> (exists x exists y (atom(x) & atom(y) & mol(x,b) & mol(y,b) & y != x)))) # label(non_clause).  [assumption].
48 (all x all y (in(x,y) & point(x) & point(y) -> x = y)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating fork/1

Eliminating between/3

Eliminating fused/2

Eliminating ringBond/1

Eliminating ring/1
49 -ring(x) | -bond(y) | -bond(z) | -bond(u) | -mol(y,x) | -mol(z,x) | -mol(u,x) | z = y | u = y | u = z | -ringOrder(y,z,u) | -ringOrder(u,z,y).  [clausify(28)].
50 -ringOrder(x,y,z) | -bond(x) | -bond(y) | -bond(z) | ring(f12(x,y,z)).  [clausify(27)].
Derived: -bond(x) | -bond(y) | -bond(z) | -mol(x,f12(u,w,v5)) | -mol(y,f12(u,w,v5)) | -mol(z,f12(u,w,v5)) | y = x | z = x | z = y | -ringOrder(x,y,z) | -ringOrder(z,y,x) | -ringOrder(u,w,v5) | -bond(u) | -bond(w) | -bond(v5).  [resolve(49,a,50,e)].
51 -ring(x) | -bond(y) | -bond(z) | -bond(u) | -mol(y,x) | -mol(z,x) | -mol(u,x) | -ringOrder(y,z,u) | z != y.  [clausify(29)].
Derived: -bond(x) | -bond(y) | -bond(z) | -mol(x,f12(u,w,v5)) | -mol(y,f12(u,w,v5)) | -mol(z,f12(u,w,v5)) | -ringOrder(x,y,z) | y != x | -ringOrder(u,w,v5) | -bond(u) | -bond(w) | -bond(v5).  [resolve(51,a,50,e)].
52 -ring(x) | -bond(y) | -bond(z) | -bond(u) | -mol(y,x) | -mol(z,x) | -mol(u,x) | -ringOrder(y,z,u) | u != y.  [clausify(29)].
Derived: -bond(x) | -bond(y) | -bond(z) | -mol(x,f12(u,w,v5)) | -mol(y,f12(u,w,v5)) | -mol(z,f12(u,w,v5)) | -ringOrder(x,y,z) | z != x | -ringOrder(u,w,v5) | -bond(u) | -bond(w) | -bond(v5).  [resolve(52,a,50,e)].
53 -ring(x) | -bond(y) | -bond(z) | -bond(u) | -mol(y,x) | -mol(z,x) | -mol(u,x) | -ringOrder(y,z,u) | u != z.  [clausify(29)].
Derived: -bond(x) | -bond(y) | -bond(z) | -mol(x,f12(u,w,v5)) | -mol(y,f12(u,w,v5)) | -mol(z,f12(u,w,v5)) | -ringOrder(x,y,z) | z != y | -ringOrder(u,w,v5) | -bond(u) | -bond(w) | -bond(v5).  [resolve(53,a,50,e)].
54 -ring(x) | -bond(y) | -bond(z) | -bond(u) | -mol(y,x) | -mol(z,x) | -mol(u,x) | z = y | u = y | u = z | -ringOrder(y,z,u) | -bond(w) | -mol(w,x) | ringOrder(y,z,w) | ringOrder(w,z,u).  [clausify(30)].
Derived: -bond(x) | -bond(y) | -bond(z) | -mol(x,f12(u,w,v5)) | -mol(y,f12(u,w,v5)) | -mol(z,f12(u,w,v5)) | y = x | z = x | z = y | -ringOrder(x,y,z) | -bond(v6) | -mol(v6,f12(u,w,v5)) | ringOrder(x,y,v6) | ringOrder(v6,y,z) | -ringOrder(u,w,v5) | -bond(u) | -bond(w) | -bond(v5).  [resolve(54,a,50,e)].
55 -ring(x) | bond(f13(x)).  [clausify(31)].
Derived: bond(f13(f12(x,y,z))) | -ringOrder(x,y,z) | -bond(x) | -bond(y) | -bond(z).  [resolve(55,a,50,e)].
56 -ring(x) | bond(f14(x)).  [clausify(31)].
Derived: bond(f14(f12(x,y,z))) | -ringOrder(x,y,z) | -bond(x) | -bond(y) | -bond(z).  [resolve(56,a,50,e)].
57 -ring(x) | bond(f15(x)).  [clausify(31)].
Derived: bond(f15(f12(x,y,z))) | -ringOrder(x,y,z) | -bond(x) | -bond(y) | -bond(z).  [resolve(57,a,50,e)].
58 -ring(x) | ringOrder(f13(x),f14(x),f15(x)).  [clausify(31)].
Derived: ringOrder(f13(f12(x,y,z)),f14(f12(x,y,z)),f15(f12(x,y,z))) | -ringOrder(x,y,z) | -bond(x) | -bond(y) | -bond(z).  [resolve(58,a,50,e)].
59 -ring(x) | -bond(y) | -bond(z) | -bond(u) | -bond(w) | -mol(y,x) | -mol(z,x) | -mol(u,x) | -mol(w,x) | -ringOrder(y,z,u) | -ringOrder(y,u,w) | ringOrder(y,z,w).  [clausify(32)].
Derived: -bond(x) | -bond(y) | -bond(z) | -bond(u) | -mol(x,f12(w,v5,v6)) | -mol(y,f12(w,v5,v6)) | -mol(z,f12(w,v5,v6)) | -mol(u,f12(w,v5,v6)) | -ringOrder(x,y,z) | -ringOrder(x,z,u) | ringOrder(x,y,u) | -ringOrder(w,v5,v6) | -bond(w) | -bond(v5) | -bond(v6).  [resolve(59,a,50,e)].

Eliminating point/1
60 atom(x) | -point(x).  [clausify(35)].
61 -atom(x) | point(x).  [clausify(35)].
62 point(c3).  [deny(48)].
Derived: atom(c3).  [resolve(62,a,60,b)].
63 point(c4).  [deny(48)].
Derived: atom(c4).  [resolve(63,a,60,b)].

Eliminating line/1
64 bond(x) | -line(x).  [clausify(36)].
65 -bond(x) | line(x).  [clausify(36)].

Eliminating plane/1
66 group(x) | -plane(x).  [clausify(37)].
67 -group(x) | plane(x).  [clausify(37)].

Eliminating in/2
68 mol(x,y) | -in(x,y).  [clausify(38)].
69 -mol(x,y) | in(x,y).  [clausify(38)].
70 in(c3,c4).  [deny(48)].
Derived: mol(c3,c4).  [resolve(70,a,68,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, bond, atom, group, mol, end, multiply_fused, ringOrder, spiro, fusedAtom, tether ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f7, f8, f1, f2, f3, f4, f5, f6, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f12 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 5.53 seconds.

============================== PROOF =================================

% Proof 1 at 5.54 (+ 0.01) seconds.
% Length of proof is 15.
% Level of proof is 3.
% Maximum clause weight is 10.000.
% Given clauses 69.

35 (all x (atom(x) <-> point(x))) # label(non_clause).  [assumption].
38 (all x all y (mol(x,y) <-> in(x,y))) # label(non_clause).  [assumption].
41 (all x all y (mol(x,y) & atom(x) & atom(y) -> x = y)) # label(non_clause).  [assumption].
48 (all x all y (in(x,y) & point(x) & point(y) -> x = y)) # label(non_clause) # label(goal).  [goal].
60 atom(x) | -point(x).  [clausify(35)].
62 point(c3).  [deny(48)].
63 point(c4).  [deny(48)].
68 mol(x,y) | -in(x,y).  [clausify(38)].
70 in(c3,c4).  [deny(48)].
116 -mol(x,y) | -atom(x) | -atom(y) | y = x.  [clausify(41)].
134 c4 != c3.  [deny(48)].
145 atom(c3).  [resolve(62,a,60,b)].
146 atom(c4).  [resolve(63,a,60,b)].
147 mol(c3,c4).  [resolve(70,a,68,b)].
892 $F.  [ur(116,b,145,a,c,146,a,d,134,a),unit_del(a,147)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=69. Generated=9324. Kept=818. proofs=1.
Usable=69. Sos=666. Demods=0. Limbo=14, Disabled=180. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=8505. Back_subsumed=69.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=206491. Nonunit_bsub_feature_tests=121357.
Megabytes=1.77.
User_CPU=5.54, System_CPU=0.01, Wall_clock=5.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 8027 exit (max_proofs) Tue Sep 11 23:40:09 2018
