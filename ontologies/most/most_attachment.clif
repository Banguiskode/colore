/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 3.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text http://colore.oor.net/most/most_attachment.clif

(cl-imports http://colore.oor.net/most/most_root.clif)

(cl-comment 'most version of twin junction in tripartite incidence')
(forall (b g1 g2)
	(if	(and (group g1)(group g2)(not (= g1 g2))
			(bond b)(mol b g1)(mol b g2))
		(exists (a1 a2)
			(and	(spiro g1 g2 a1)
				(spiro g1 g2 a2)
				(not (= a1 a2))))))

(forall (a1 a2 a3 b g1 g2)
	(if	(and (atom a1)(atom a2)(atom a3)
			(group g1)(group g2)(not (= g1 g2))
			(bond b)
			(mol b g1)
			(mol b g2)
			(spiro g1 g2 a1)
			(spiro g1 g2 a2)
			(spiro g1 g2 a3))
		(or	(= a1 a2)
			(= a1 a3)
			(= a2 a3))))

(cl-comment '==================================')
(cl-comment 'FUSION')
(cl-comment 'Fusion Connection')
(cl-comment 'Two distinct atoms are shared between the groups which are in a bond.')
(cl-comment '==================================')

(forall (a1 a2 a3 g1 g2)
    (if (and (fusedAtom a1 g1 g2)(fusedAtom a1 g1 g2)(fusedAtom a3 g1 g2))
        (or (= a1 a2)(= a1 a3)(= a2 a3))))

(cl-comment 'Something we should be able to prove.')
(forall (g1 g2)
    (if (fused g1 g2)
        (exists (a1 a2)
            (and (fusedAtom a1 g1 g2)
            	(fusedAtom a2 g1 g2)
            	(not (= a1 a2))))))

(cl-comment '==================================')
(cl-comment 'SPIRO')
(cl-comment 'Spiro Connection')
(cl-comment 'An atom is shared')
(cl-comment '==================================')

(cl-comment 'Uniqueness of spiro connection.')
(exists (a1)
    (forall (g1 g2 a2)
        (if (and (spiro g1 g2 a1)(spiro g1 g2 a2))
        (= a1 a2))))

(cl-comment '==================================')
(cl-comment 'TETHER')
(cl-comment 'Tether Connection')
(cl-comment 'No atoms are shared')
(cl-comment 'Groups are bonded together by a bond between each group')
(cl-comment '==================================')

(cl-comment 'Uniqueness of tether connection.')
(exists (b1)
    (forall (g1 g2 b2)
        (if (and (tether g1 g2 b1)(tether g1 g2 b2))
        (= b1 b2))))

(cl-comment 'enforce unique fusion')
(cl-comment 'If two rings share more than one bond, then they are connected by tethering.')
(forall (g1 g2 b1 b2)
	(if (and (ring g1)(ring g2)
		(not (= g1 g2))(not (= b1 b2))
		(bond b1)(bond b2)
		(mol b1 g1)(mol b1 g2)
		(mol b1 g2)(mol b2 g2))
		(and (tether g1 g2 b1)(tether g1 g2 b2))))

(cl-comment 'most version of weak face intersect in tripartite incidence')
(forall (g1 g2 a1 a2)
	(if	(and	(group g1)
			(group g2)
			(atom a1)
			(atom a2)
			(not (= a1 a2))
			(not (= g1 g2))
			(mol a1 g1)
			(mol a1 g2)
			(mol a2 g1)
			(mol a2 g2))
		(exists (b)
			(and (bond b)(mol b g1)(mol b g2)))))
		
		
(cl-comment 'There do not exist two functional groups x and y, and 3 atoms such that those three atoms are in functional groups x and y.')
(cl-comment 'Any two functional groups intersect at AT MOST two atoms.')
(not (exists (x y a b c)
	(and (group x)
			(group y)
			(atom a)
			(atom b)
			(atom c)
			(mol a x)(mol b x)(mol c x)
			(mol a y)(mol b y)(mol c y)
			(not (= x y))
			(not (= a b))
			(not (= b c))
			(not (= a c)))))

(cl-comment 'If there are two distinct functional groups, there exists an atom that is only in one of the groups and not the other.')
(forall (x y)
	(if (and (group x)(group y)(not (= x y)))
		(exists (a)
			(and (atom a)(mol a x)(not (mol a y))))))

(cl-comment 'If two functional groups intersect at two distinct atoms, then the atoms are in the same bond.')
(forall (g1 g2 a1 a2)
	(if (and (atom a1)(atom a2)
			(group g1)(group g2)
			(not (= a1 a2))(not (= g1 g2))
			(mol a1 g1)(mol a1 g2)
			(mol a2 g1)(mol a2 g2))
			(exists (b)
				(and (bond b)
					(mol b g1)(mol b g2)
					(mol a1 b)(mol a2 b)))))

(cl-comment 'Functional groups cannot be coextensive.')
(cl-comment 'Two groups cannot have the exact same set of atoms.')
(forall (g1 g2 a1 a2)
	(if (and (group g1)(group g2)(not (= g1 g2))
			(atom a1)(atom a2)(not (= a1 a2))
			(mol a1 g1)(mol a2 g2))
		(and (not (mol a1 g2))(not (mol a2 g1)))))

(forall (g1 g2)
    (iff (fused g1 g2)
    	(and (group g1)(group g2)(not (= g1 g2))
    		(exists (a1 a2 b)
    			(and (atom a1)(atom a2)(not (= a1 a2))
    				(mol a1 b)(mol a2 b)
    				(mol a1 g1)(mol a1 g2)
    				(mol a2 g1)(mol a2 g2)
    				(mol b g1)(mol b g2))))))

(cl-comment 'Definition of fused atom - an atom that is in bonds of different groups.')
(forall (a1 g1 g2)
    (iff (fusedAtom a1 g1 g2)
        (and (atom a1)(group g1)(group g2)
        	(mol a1 g1)(mol a1 g2)
        	(not (= g1 g2))
            (exists (b1 b2)
                (and (bond b1)(bond b2)
                	(mol a1 b1)(mol a1 b2)
                	(mol b1 g1)(mol b2 g2))))))

(forall (g1 g2 a)
    (iff (spiro g1 g2 a)
    	(and (group g1)(group g2)(atom a)(not (= g1 g2))
    		(exists (b1 b2)
				(and (bond b1)(bond b2)
					(mol a g1)(mol a g2)
					(mol a b1)(mol a b2)
					(mol b1 g1)(not (mol b1 g2))
					(mol b2 g2)(not (mol b2 g1)))))))

(forall (g1 g2 b)
    (iff (tether g1 g2 b)
            (and (group g1)(group g2)(bond b)(not (= g1 g2))
            	(exists (a1 a2)
					(and (atom a1)(atom a2)
						(mol a1 g1)(mol a2 g2)
						(mol a1 b)(mol a2 b)
						(not (mol b g1))(not (mol b g2)))))))

(forall (x)
	(iff (bridge x)
		(exists (y)
			(and (ring y)(chain x)
				(exists (a) (and (atom a)(spiro x y a)))
				(exists (b) (and (bond b)(tether x y b)))))))

(cl-comment 'Definition: A relation to handle bridges -- for two bonds that intersect, there exists an atom that is in both bonds, and the bonds are not equivalent.')
(forall (b1 b2)
	(iff (intersects b1 b2)
		(exists (a)
			(and (atom a)
				(mol a b1)
				(mol a b2)
				(not (= b1 b2))))))
				
(forall (g1 g2)
	(iff (attached g1 g2)
		(or (fused g1 g2)
			(exists (a) (spiro g1 g2 a))
			(exists (b) (tether g1 g2 b)))))

(cl-comment 'Part: Two functional groups are part of each other if they share a common atom. COMMENT BY CARMEN MAYBE RENAME?')
(forall (g1 g2)
    (iff (part g1 g2)
        (and (group g1)(group g2)(not (= g1 g2))
            (forall (x)
                (if (and (atom x)(mol x g1))
                    (mol x g2))))))

)