/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 3.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text http://colore.oor.net/most/most.clif

(cl-imports http://colore.oor.net/molecular_graph/most_graph.clif)

(cl-comment 'CLIF file containing all of the master MoSt ontology axioms')

/*******************************************************************************/
(cl-comment '======= SEMANTIC CONDITION: most - basic intuitions (most_root) =======')
/*******************************************************************************/

(cl-comment 'If two groups are related by the mol relation, they are both the same group.')
(forall (x y)
	(if (and (mol x y)(group x)(group y))
		(= x y)))
		
(cl-comment 'Disjointness axiom for atoms.')
(forall (x)
	(if (atom x)
		(not (or (bond x)(group x)))))

(cl-comment 'Disjointness axiom for bonds.')
(forall (x)
	(if (bond x)
		(not (group x))))

(cl-comment 'For every functional group, there is an atom that is in the group.')
(forall (x)
	(if (group x)
		(exists (a)
			(and (atom a)(mol a x)))))

(cl-comment 'Every atom is in a functional group.')
(forall (x)
	(if	(atom x)
		(exists (y)
			(and (group y)(mol x y)))))

(cl-comment 'Every atom has a bond with an atom in a functional group.')
(forall (x)
    (if (atom x)
        (exists (b y z)
            (and (bond b)(group y)(atom z)(not (= x z))
            	(mol x b)(mol z b)(mol z y)))))

(cl-comment 'Transitive relation to indicate that any bond between two atoms in a group implies that the atom is in the group.')
(forall (b g x y)
    (if (and (atom x)(atom y)(not (= x y))(bond b)(group g)
    		(mol x b)(mol y b)(mol b g))
        (mol x g)))

(cl-comment 'If an atom is in a bond that is in a functional group, then the atom is in the functional group.')
(forall (x y z)
    (if (and (atom x)(bond y)(group z)(mol x y)(mol y z))
        (mol x z)))

(cl-comment 'A functional group has at most two ends.')
(forall (x y z w)
	(if	(and	(group x)
			(end y x)
			(end z x)
			(end w x))
		(or	(= y z)
			(= y w)
			(= z w))))

(cl-comment 'No functional group has a fork.')
(forall (x)
	(if	(group x)
		(not (exists (y)
			(fork y)))))

(cl-comment 'For all bonds that have the same atoms, the bonds are in the same group.')
(forall (a1 a2 a3 a4 b1 b2 g)
	(if (and (atom a1)(atom a2)(atom a3)(atom a4)
			(group g)
			(mol b1 g)
			(mol a1 b1)(mol a2 b1)
			(mol a3 b2)(mol a4 b2)
			(= a1 a3)(= a2 a4))
		(mol b2 g)))

(cl-comment 'A group contains at least one atom connected to it.')
(forall (y)
    (if (group y)
        (exists (x)
            (and (atom x)(mol x y)))))

(cl-comment 'If two atoms are in a group and have a bond between each other, then the bond is in the functional group.')
(forall (x y b g)
    (if (and (atom x)(atom y)(bond b)(group g)(not (= x y))
    		(mol x y)(mol y g)(mol x b)(mol y b))
        (mol b g)))

(cl-comment 'most version of planar shadow axiom in tripartite incidence -- need ENG version')
(forall (b g)
	(if	(and (bond b)(group g)(not (mol b g)))
		(exists (a)
			(and (atom a)(mol a b)
				(not (mol a g))))))

/*******************************************************************************/
(cl-comment '========== MOST_ROOT DEFINITIONS ==========')
/*******************************************************************************/

(cl-comment 'Definition for chain. A chain is a group that contains an end and no forks.')
(forall (x)
	(iff (chain x)
		(and (group x)
			(exists (y)
				(and (end y x)
					(forall (w)
						(if (and (atom w)(mol w x))
							(not (fork w)))))))))

(cl-comment 'Definition for ring. A ring is a group that contains atoms that are not ends and not forks.')
(forall (x)
	(iff (ring x)
		(and (group x)
			(forall (y)
				(if (and (atom y)(mol y x))
					(and (not (end y x))(not (fork y))))))))
				
(cl-comment 'Definition for an end atom. An end is in at most one bond in a group.')
(forall (x y)
	(iff (end x y)
		(and (atom x)(group y)(mol x y)
			(forall (b1 b2 w z)
				(if (and (bond b1)(bond b2)(atom w)(atom z)
						(mol x b1)(mol z b1)
						(mol x b2)(mol w b2)
						(mol z y)(mol w y))
					(= w z))))))

(cl-comment 'Definition for a fork atom. An atom in the same functional group has at least 3 other atoms in bonds.')
(forall (x y)
	(iff (fork x)
		(and (atom x)
			(exists (b1 b2 b3 a1 a2 a3)
				(and (atom a1)(atom a2)(atom a3)
					(bond b1)(bond b2)(bond b3)
					(not (= a1 a2))(not (= a2 a3))(not (= a1 a3))
					(not (= b1 b2))(not (= b2 b3))(not (= b1 b3))
					(mol x b1)(mol a1 b1)
					(mol x b2)(mol a2 b2)
					(mol x b3)(mol a3 b3))))))

					
(cl-comment 'A saturated functional group is one that has at least one single bond.')
(forall (x)
	(iff (saturated x)
		(and (group x)
			(forall (b y z)
			(if (and (bond b)(atom y)
					(mol y b)(mol z b)
					(mol y x)(mol z x))
				(singlebond b y z))))))

(cl-comment 'An unsaturated functional group is one that has at least one double bond.')
(forall (x)
	(iff (unsaturated x)
		(and (group x)
		(exists (b y z)
			(if (and (atom y)(bond b)
					(mol y b)(mol z b)
					(mol y x)(mol z x))
				(doublebond b y z))))))

(cl-comment 'In an alternating group, each atom is in a single and a double bond with another atom in the functional group.')
(forall (x y)
	(iff (alternatinggroup x)
		(if (and (group x)(atom y)(mol x y))
			(exists (a1 a2 b1 b2)
				(and (atom a1)(atom a2)
					(bond b1)(bond b2)
					(mol y b1)(mol a1 b1)
					(doublebond b2 y a2)
					(mol a1 x)(mol a2 x))))))

(cl-comment 'A trivial group is a group containing a single atom.')
(forall (x)
	(iff (trivialgroup x)
		(and (group x)
			(forall (y z)
				(if (and (atom y)(atom z)(mol y x)(mol z x))
					(= y z))))))

/*******************************************************************************/
(cl-comment '======= SEMANTIC CONDITION: attachment axioms')
/*******************************************************************************/

(cl-comment 'For a bond found in two groups, it must mean the two groups are spiroed at an atom common between them.')
(forall (a1 a2 a3 b g1 g2)
	(if	(and (atom a1)(atom a2)(atom a3)
			(group g1)(group g2)(not (= g1 g2))
			(bond b)
			(mol b g1)
			(mol b g2)
			(spiro g1 g2 a1)
			(spiro g1 g2 a2)
			(spiro g1 g2 a3))
		(or	(= a1 a2)
			(= a1 a3)
			(= a2 a3))))

(cl-comment 'A fused atom is in at most two groups. Uniqueness of fusion connection.')
(forall (a1 a2 a3 g1 g2)
    (if (and (fusedAtom a1 g1 g2)(fusedAtom a1 g1 g2)(fusedAtom a3 g1 g2))
        (or (= a1 a2)(= a1 a3)(= a2 a3))))

(cl-comment 'For two groups that are fused together, there is a unique fused atom.  Something we should be able to prove.')
(forall (g1 g2)
    (if (fused g1 g2)
        (exists (a1 a2)
            (and (fusedAtom a1 g1 g2)
            	(fusedAtom a2 g1 g2)
            	(not (= a1 a2))))))

(cl-comment 'Uniqueness of spiro connection.')
(exists (a1)
    (forall (g1 g2 a2)
        (if (and (spiro g1 g2 a1)
        		(spiro g1 g2 a2))
        (= a1 a2))))

(cl-comment 'Uniqueness of tether connection.')
(exists (b1)
    (forall (g1 g2 b2)
        (if (and (tether g1 g2 b1)(tether g1 g2 b2))
        (= b1 b2))))

(cl-comment '--- removed on jan 8th Enforce unique fusion: If two rings share more than one bond, then they are connected by tethering.')
(forall (g1 g2 b1 b2)
	(if (and (ring g1)(ring g2)
		(not (= g1 g2))(not (= b1 b2))
		(bond b1)(bond b2)
		(mol b1 g1)(mol b1 g2)
		(mol b1 g2)(mol b2 g2))
		(and (tether g1 g2 b1)(tether g1 g2 b2))))
        
(cl-comment 'replace with a new axiom with betweenness - removed unique fusion')
		
(cl-comment 'There do not exist two functional groups x and y, and 3 atoms such that those three atoms are in functional groups x and y. Any two functional groups intersect at AT MOST two atoms.')
(not (exists (x y a b c)
	(and (group x)
			(group y)
			(atom a)
			(atom b)
			(atom c)
			(mol a x)(mol b x)(mol c x)
			(mol a y)(mol b y)(mol c y)
			(not (= x y))
			(not (= a b))
			(not (= b c))
			(not (= a c)))))

(cl-comment 'If there are two distinct functional groups, there is an atom that is only in one of the groups and not the other.')
(forall (x y)
	(if (and (group x)(group y)(not (= x y)))
		(exists (a)
			(and (atom a)(mol a x)(not (mol a y))))))

(cl-comment 'If two functional groups intersect at two distinct atoms, then the atoms are in the same bond.')
(forall (g1 g2 a1 a2)
	(if (and (atom a1)(atom a2)
			(group g1)(group g2)
			(not (= a1 a2))(not (= g1 g2))
			(mol a1 g1)(mol a1 g2)
			(mol a2 g1)(mol a2 g2))
			(exists (b)
				(and (bond b)
					(mol b g1)(mol b g2)
					(mol a1 b)(mol a2 b)))))

(cl-comment 'Functional groups cannot be coextensive. Two groups cannot have the exact same set of atoms.')
(forall (g1 g2 a1 a2)
	(if (and (group g1)(group g2)(not (= g1 g2))
			(atom a1)(atom a2)(not (= a1 a2))
			(mol a1 g1)(mol a2 g2))
		(and (not (mol a1 g2))(not (mol a2 g1)))))

/*******************************************************************************/
(cl-comment '========== MOST_ATTACHMENT DEFINITIONS ==========')
/*******************************************************************************/

(cl-comment 'Definition for fusion: two groups are fused together if there is one bond shared between them.')
(forall (g1 g2)
    (iff (fused g1 g2)
    	(and (group g1)(group g2)(not (= g1 g2))
    		(exists (a1 a2 b)
    			(and (atom a1)(atom a2)(not (= a1 a2))
    				(mol a1 b)(mol a2 b)
    				(mol a1 g1)(mol a1 g2)
    				(mol a2 g1)(mol a2 g2)
    				(mol b g1)(mol b g2))))))

(cl-comment 'Definition of fused atom: an atom that is in bonds of different groups.')
(forall (a1 g1 g2)
    (iff (fusedAtom a1 g1 g2)
        (and (atom a1)(group g1)(group g2)
        	(mol a1 g1)(mol a1 g2)
        	(not (= g1 g2))
            (exists (b1 b2)
                (and (bond b1)(bond b2)
                	(mol a1 b1)(mol a1 b2)
                	(mol b1 g1)(mol b2 g2))))))

(cl-comment 'Definition for spiro: two groups are spiroed together if they share one atom between them.')
(forall (g1 g2 a)
    (iff (spiro g1 g2 a)
    	(and (group g1)(group g2)(atom a)(not (= g1 g2))
    		(exists (b1 b2)
				(and (bond b1)(bond b2)
					(mol a g1)(mol a g2)
					(mol a b1)(mol a b2)
					(mol b1 g1)(not (mol b1 g2))
					(mol b2 g2)(not (mol b2 g1)))))))

(cl-comment 'Definition for tether: groups are bonded together by a bond between each group')
(forall (g1 g2 b)
    (iff (tether g1 g2 b)
            (and (group g1)(group g2)(bond b)(not (= g1 g2))
            	(exists (a1 a2)
					(and (atom a1)(atom a2)
						(mol a1 g1)(mol a2 g2)
						(mol a1 b)(mol a2 b)
						(not (mol b g1))(not (mol b g2)))))))

(cl-comment 'Definition for bridge: a bridge is a chain in a ring where one end is spiroed to the ring and the other is tethered to the ring.')
(forall (x)
	(iff (bridge x)
		(exists (y)
			(and (ring y)(chain x)
				(exists (a) (and (atom a)(spiro x y a)))
				(exists (b) (and (bond b)(tether x y b)))))))

(cl-comment 'Definition: A relation to handle bridges -- for two bonds that intersect, there is an atom that is in both bonds, and the bonds are not equivalent.')
(forall (b1 b2)
	(iff (intersects b1 b2)
		(exists (a)
			(and (atom a)
				(mol a b1)
				(mol a b2)
				(not (= b1 b2))))))

(cl-comment 'If two groups are attached together, they must be attached via fusion, spiro, or tether.')
(forall (g1 g2)
	(iff (attached g1 g2)
		(or (fused g1 g2)
			(exists (a) (spiro g1 g2 a))
			(exists (b) (tether g1 g2 b)))))
						
/*******************************************************************************/
(cl-comment '======= SEMANTIC CONDITION: ringBond - remaining paths are chains')
/*******************************************************************************/

(cl-comment 'If a bond is a ringbond, then it must be in a ring.')
(forall (b)
	(if (ringBond b)
		(exists (g)
			(and (mol b g)(ring g)))))
		
/*******************************************************************************/
(cl-comment '========== MOST_RINGBOND DEFINITIONS ==========')
/*******************************************************************************/

(cl-comment 'Definitions for ringBond: a bond that is in a ring with no other atoms between it.')
(forall (b)
	(iff (ringBond b)
			(and (bond b)
				(exists (a1 a2)
					(and (atom a1)(atom a2)(mol a1 b)(mol a2 b)
				(not (exists (a3)
					(and (atom a3)
						(or (between a3 a1 a2)(between a1 a2 a3))))))))))

/*******************************************************************************/
(cl-comment '======= SEMANTIC CONDITION: semilinear betweenness / spanning tree')
/*******************************************************************************/

(cl-comment 'Atoms are between themselves.')
(forall (x y z)
	(if (between x y z)
		(and (atom x)(atom y)(atom z))))

(cl-comment 'Axioms from between/semilinear theory with sort constraints.')
(forall (x y z s)
	(if (and (skeleton s)
			(atom x)(atom y)(atom z)
			(inSkeleton x s)
			(inSkeleton y s)
			(inSkeleton z s)
			(between x y z))
		(between z y x)))

(cl-comment 'Atoms in skeletons are between themselves.')
(forall (x y z s)
	(if (and (skeleton s)
			(atom x)(atom y)(atom z)
			(inSkeleton x s)
			(inSkeleton y s)
			(inSkeleton z s)
			(between y x z)
			(between x y z))
		(= x y)))

(cl-comment 'At most two atoms are between each other.')
(forall (x y z w s)
	(if	(and (skeleton s)
			(atom x)(atom y)(atom z)
			(inSkeleton x s)
			(inSkeleton y s)
			(inSkeleton z s)
			(inSkeleton w s)
			(between y x z))
		(or	(between y x w)
			(between z x w))))

/*******************************************************************************/
(cl-comment '======= SEMANTIC CONDITION: skeletons')
/*******************************************************************************/

(cl-comment 'Disjointness axiom for skeleton.')
(forall (x)
	(if (skeleton x)
		(not (or (atom x)(bond x)(group x)))))

(cl-comment 'A skeleton contains a functional group.')
(forall (s)
	(if	(skeleton s)
		(exists (g)
			(and	(group g)
				(mol g s)))))

(cl-comment 'Each functional group in a skeleton contains an atom that is in a bond with an atom in a different functional group in the skeleton.')
(forall (g1 s)
	(if	(and	(skeleton s)
			(group g1)
			(mol g1 s))
		(exists (a1 a2 b g2)
			(and	(atom a1)
				(atom a2)
				(bond b)
				(group g2)
				(not (= g1 g2))
				(mol a1 g1)
				(mol a2 g2)
				(mol a1 b)
				(mol a2 b)))))

(cl-comment 'Fused skeletons only contain fused rings.')
(forall (s)
	(iff (fusedSkeleton s)
		(and (skeleton s)
			(forall (g)
				(if (and (group g1)(mol g1 s)
						(group g2)(mol g2 s)
						(not (= g1 g2)))
					(and (ring g1)(ring g2)(fused g1 g2)))))))

(cl-comment 'Every group is in a skeleton.')
(forall (x)
	(if (group x)
		(exists (y)
			(and (skeleton y)(mol y x)))))

(cl-comment 'Every group is contained in a unique skeleton.')
(forall (x)
	(if (group x)
		(exists (y)
			(and (skeleton y)(mol y x)
				(not (exists (w)
					(and (skeleton w)(mol w x)(not (= w y)))))))))


/*******************************************************************************/
(cl-comment '======= SEMANTIC CONDITION: scaffolds')
/*******************************************************************************/

(cl-comment 'Two molecules cannot be incident with each other.')
(forall (x y)
	(if (and (mol x y)(skeleton x)(skeleton y))
		(= x y)))

/*******************************************************************************/
(cl-comment '========== SCAFFOLD DEFINITIONS ==========')
/*******************************************************************************/

(cl-comment 'A scaffold consists of at least one ring and chains that are attached to each other in some way.')
(forall (x)
	(iff (scaffold x)
		(and (skeleton x)
			(exists (r) (and (ring r)(mol r x)))
			(forall (g)
				(if (and (chain g)(mol g x))
					(exists (y z)
						(and (ring y)(ring z)
							(mol y x)(mol z x)
							(attached y g)
							(attached z g))))))))

(cl-comment 'A linear skeleton is a skeleton that only contains chains.')
(forall (x)
	(iff (linearskeleton x)
		(and (skeleton x)
			(forall (g)
				(if (and (group g)(mol g x))
					(chain g))))))

(cl-comment 'Two skeletons are part of each other if they are connected in some way.')
(forall (x y)
	(iff (part x y)
		(and (skeleton x)
			(skeleton y)
			(forall (z)
				(if (mol z x)
					(mol z y))))))
(cl-comment 'apr21 comment by carmen do we need to do a sort on z? what is z??')
(cl-comment 'apr25 comment by carmen leave this as is since we will explore this later, may just be open')

)